// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package local_project.ordenes_comerciales_k_precio_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: ordenes_comerciales_k_precio Purpose: <br>
 * Description:  <br>
 * @author user@talend.com
 * @version 7.3.1.20200219_1130
 * @status 
 */
public class ordenes_comerciales_k_precio implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
		}

	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "ordenes_comerciales_k_precio";
	private final String projectName = "LOCAL_PROJECT";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				ordenes_comerciales_k_precio.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(ordenes_comerciales_k_precio.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_5_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_8_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_6_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_9_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_7_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_5_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_8_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_6_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_9_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_7_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	






public static class Trimestral_K2_U_RegionalStruct implements routines.system.IPersistableRow<Trimestral_K2_U_RegionalStruct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final Trimestral_K2_U_RegionalStruct other = (Trimestral_K2_U_RegionalStruct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(Trimestral_K2_U_RegionalStruct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(Trimestral_K2_U_RegionalStruct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(Trimestral_K2_U_RegionalStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
Trimestral_K2_U_RegionalStruct Trimestral_K2_U_Regional = new Trimestral_K2_U_RegionalStruct();





	
	/**
	 * [tDBOutput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_1", false);
		start_Hash.put("tDBOutput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"Trimestral_K2_U_Regional");
					}
				
		int tos_count_tDBOutput_1 = 0;
		





        int updateKeyCount_tDBOutput_1 = 1;
        if(updateKeyCount_tDBOutput_1 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_1 = 0;
int nb_line_update_tDBOutput_1 = 0;
int nb_line_inserted_tDBOutput_1 = 0;
int nb_line_deleted_tDBOutput_1 = 0;
int nb_line_rejected_tDBOutput_1 = 0;

int deletedCount_tDBOutput_1=0;
int updatedCount_tDBOutput_1=0;
int insertedCount_tDBOutput_1=0;

int rejectedCount_tDBOutput_1=0;

String tableName_tDBOutput_1 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_1 = false;

java.util.Calendar calendar_tDBOutput_1 = java.util.Calendar.getInstance();
calendar_tDBOutput_1.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_1 = calendar_tDBOutput_1.getTime().getTime();
calendar_tDBOutput_1.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_1 = calendar_tDBOutput_1.getTime().getTime();
long date_tDBOutput_1;

java.sql.Connection conn_tDBOutput_1 = null;
		String dbProperties_tDBOutput_1 = "noDatetimeStringSync=true";
		String url_tDBOutput_1 = null;
		if(dbProperties_tDBOutput_1 == null || dbProperties_tDBOutput_1.trim().length() == 0) {
			url_tDBOutput_1 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_1 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_1.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_1 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_1 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_1;
		}
		String driverClass_tDBOutput_1 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_1 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:b4+CiK5voqc0rjRflGHrvTOfpmCUWAxnbUPySizloh65AYuCdatjJqs=");

		String dbPwd_tDBOutput_1 = decryptedPassword_tDBOutput_1;
		java.lang.Class.forName(driverClass_tDBOutput_1);
		
		conn_tDBOutput_1 = java.sql.DriverManager.getConnection(url_tDBOutput_1, dbUser_tDBOutput_1, dbPwd_tDBOutput_1);
		
	
	resourceMap.put("conn_tDBOutput_1", conn_tDBOutput_1);
        conn_tDBOutput_1.setAutoCommit(false);
        int commitEvery_tDBOutput_1 = 10000;
        int commitCounter_tDBOutput_1 = 0;

int count_tDBOutput_1=0;
    	
            try (java.sql.Statement stmtClear_tDBOutput_1 = conn_tDBOutput_1.createStatement()) {
                stmtClear_tDBOutput_1.executeUpdate("DELETE FROM `" + tableName_tDBOutput_1 + "`");
            }
	    java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);
	    String insert_tDBOutput_1 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
	    resourceMap.put("pstmtInsert_tDBOutput_1", pstmtInsert_tDBOutput_1);
	    String update_tDBOutput_1 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(update_tDBOutput_1);
	    resourceMap.put("pstmtUpdate_tDBOutput_1", pstmtUpdate_tDBOutput_1);
	    

 



/**
 * [tDBOutput_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
Trimestral_K2_U_RegionalStruct Trimestral_K2_U_Regional_tmp = new Trimestral_K2_U_RegionalStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";

	
		int tos_count_tDBInput_1 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
		    calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				String driverClass_tDBInput_1 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_1 = java.lang.Class.forName(driverClass_tDBInput_1);
				String dbUser_tDBInput_1 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:REfp9Jeb+gO6dRcReDv0Tx+fZnemzFUyGU1vfO9Q4Jr09HpXTvwTu5s=");
				
				String dbPwd_tDBInput_1 = decryptedPassword_tDBInput_1;
				
				String url_tDBInput_1 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_1 = java.sql.DriverManager.getConnection(url_tDBInput_1,dbUser_tDBInput_1,dbPwd_tDBInput_1);
		        
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (2) as k_Dispersion\n,((SELECT c.PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO = 'RE"
+"GIONAL' )*2) Valor_Total\nfrom modulo_orden_personal a\nwhere\n a.REGION <>8\nand FECHALEGALIZATION >= (select (CONCAT(C"
+"OD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO"
+",COD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'U'\nand FRECUENCIA= 3"
+"\nand ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546, \n1547,\n1548, \n1"
+"549,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n1569,\n1571,\n1577, "
+"\n1578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595, \n1596, \n1598,\n1"
+"602,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n1629,\n1630, \n1631"
+", \n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658, \n1660, \n1662, "
+"\n1663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n1699,\n1701,\n1704,"
+"\n1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733, \n1735, \n1736, \n"
+"1752, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);
		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row1.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row1.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row1.DESC_PROGRAMA = null;
							} else {
	                         		
        	row1.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row1.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row1.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 3, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row1.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row1.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 4, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row1.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row1.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 5, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 6) {
								row1.TAREA = null;
							} else {
	                         		
        	row1.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 6, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 7) {
								row1.DESCTAREA = null;
							} else {
	                         		
        	row1.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 7, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 8) {
								row1.ORDEN = null;
							} else {
	                         		
        	row1.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_1, 8, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 9) {
								row1.CICLO = null;
							} else {
	                         		
        	row1.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 9, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 10) {
								row1.SERVICIO = null;
							} else {
	                         		
        	row1.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 10, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 11) {
								row1.ESTADO = null;
							} else {
	                         		
        	row1.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 11, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 12) {
								row1.DESC_ESTADO = null;
							} else {
	                         		
        	row1.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 12, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 13) {
								row1.FECHACREATED = null;
							} else {
	                         		
        	row1.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_1, 13, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 14) {
								row1.OOPEN = null;
							} else {
	                         		
        	row1.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_1, 14, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 15) {
								row1.FECHALEGALIZATION = null;
							} else {
	                         		
        	row1.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 15, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 16) {
								row1.HORALEGALIZATION = null;
							} else {
	                         		
        	row1.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 16, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 17) {
								row1.INSTALACION = null;
							} else {
	                         		
        	row1.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 17, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 18) {
								row1.URBANO_RURAL = null;
							} else {
	                         		
        	row1.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_1, 18, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 19) {
								row1.ORTRINUR = null;
							} else {
	                         		
        	row1.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_1, 19, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 20) {
								row1.DESCRIPCIONA = null;
							} else {
	                         		
        	row1.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 20, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 21) {
								row1.CIUDAD = null;
							} else {
	                         		
        	row1.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 21, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 22) {
								row1.CMRUDESC = null;
							} else {
	                         		
        	row1.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_1, 22, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 23) {
								row1.REGION = null;
							} else {
	                         		
        	row1.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 23, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 24) {
								row1.REGNDESC = null;
							} else {
	                         		
        	row1.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_1, 24, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 25) {
								row1.DEPACODI = null;
							} else {
	                         		
        	row1.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_1, 25, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 26) {
								row1.CODIGORESPUESTA = null;
							} else {
	                         		
        	row1.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 26, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 27) {
								row1.RESPUESTATENCION = null;
							} else {
	                         		
        	row1.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 27, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 28) {
								row1.X = null;
							} else {
	                         		
        	row1.X = routines.system.JDBCUtil.getString(rs_tDBInput_1, 28, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 29) {
								row1.Y = null;
							} else {
	                         		
        	row1.Y = routines.system.JDBCUtil.getString(rs_tDBInput_1, 29, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 30) {
								row1.ANO = null;
							} else {
	                         		
        	row1.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 30, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 31) {
								row1.MES = null;
							} else {
	                         		
        	row1.MES = routines.system.JDBCUtil.getString(rs_tDBInput_1, 31, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 32) {
								row1.DIA = null;
							} else {
	                         		
        	row1.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 32, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 33) {
								row1.DESC_CNA = null;
							} else {
	                         		
        	row1.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 33, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 34) {
								row1.ORDEN_OPEN = null;
							} else {
	                         		
        	row1.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_1, 34, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 35) {
								row1.ACTIVIDAD = null;
							} else {
	                         		
        	row1.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 35, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 36) {
								row1.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row1.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 36, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 37) {
								row1.FRECUENCIA = null;
							} else {
	                         		
        	row1.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 37, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 38) {
								row1.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row1.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_1, 38, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 39) {
								row1.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row1.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_1, 39, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 40) {
								row1.ESTADO_CORTE = null;
							} else {
	                         		
        	row1.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_1, 40, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 41) {
								row1.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row1.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 41, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 42) {
								row1.ROUTE_ID = null;
							} else {
	                         		
        	row1.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_1, 42, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 43) {
								row1.NAME_ = null;
							} else {
	                         		
        	row1.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_1, 43, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 44) {
								row1.NUMBER_ID = null;
							} else {
	                         		
        	row1.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_1, 44, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 45) {
								row1.k_Dispersion = null;
							} else {
	                         		
        	row1.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_1, 45, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 46) {
								row1.Valor_Total = null;
							} else {
	                         		
        	row1.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_1, 46, false);
		                    }
					

 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row1");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_1 = false;
		  boolean mainRowRejected_tMap_1 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

Trimestral_K2_U_Regional = null;


// # Output table : 'Trimestral_K2_U_Regional'
Trimestral_K2_U_Regional_tmp.CODIGO_PROGRAMA = row1.CODIGO_PROGRAMA;
Trimestral_K2_U_Regional_tmp.DESC_PROGRAMA = row1.DESC_PROGRAMA;
Trimestral_K2_U_Regional_tmp.CODIGO_EQUIPO = row1.CODIGO_EQUIPO;
Trimestral_K2_U_Regional_tmp.EQUIPO_TRABAJO = row1.EQUIPO_TRABAJO;
Trimestral_K2_U_Regional_tmp.UNIDAD_OPERATIVA = row1.UNIDAD_OPERATIVA;
Trimestral_K2_U_Regional_tmp.NAME_ = row1.NAME_;
Trimestral_K2_U_Regional_tmp.NUMBER_ID = row1.NUMBER_ID;
Trimestral_K2_U_Regional_tmp.TAREA = row1.TAREA;
Trimestral_K2_U_Regional_tmp.DESCTAREA = row1.DESCTAREA;
Trimestral_K2_U_Regional_tmp.ORDEN = row1.ORDEN;
Trimestral_K2_U_Regional_tmp.CICLO = row1.CICLO;
Trimestral_K2_U_Regional_tmp.SERVICIO = row1.SERVICIO;
Trimestral_K2_U_Regional_tmp.ESTADO = row1.ESTADO;
Trimestral_K2_U_Regional_tmp.DESC_ESTADO = row1.DESC_ESTADO;
Trimestral_K2_U_Regional_tmp.FECHACREATED = row1.FECHACREATED;
Trimestral_K2_U_Regional_tmp.OOPEN = row1.OOPEN;
Trimestral_K2_U_Regional_tmp.FECHALEGALIZATION = row1.FECHALEGALIZATION;
Trimestral_K2_U_Regional_tmp.HORALEGALIZATION = row1.HORALEGALIZATION;
Trimestral_K2_U_Regional_tmp.INSTALACION = row1.INSTALACION;
Trimestral_K2_U_Regional_tmp.URBANO_RURAL = row1.URBANO_RURAL;
Trimestral_K2_U_Regional_tmp.ORTRINUR = row1.ORTRINUR;
Trimestral_K2_U_Regional_tmp.DESCRIPCIONA = row1.DESCRIPCIONA;
Trimestral_K2_U_Regional_tmp.CIUDAD = row1.CIUDAD;
Trimestral_K2_U_Regional_tmp.CMRUDESC = row1.CMRUDESC;
Trimestral_K2_U_Regional_tmp.REGION = row1.REGION;
Trimestral_K2_U_Regional_tmp.REGNDESC = row1.REGNDESC;
Trimestral_K2_U_Regional_tmp.DEPACODI = row1.DEPACODI;
Trimestral_K2_U_Regional_tmp.CODIGORESPUESTA = row1.CODIGORESPUESTA;
Trimestral_K2_U_Regional_tmp.RESPUESTATENCION = row1.RESPUESTATENCION;
Trimestral_K2_U_Regional_tmp.X = row1.X;
Trimestral_K2_U_Regional_tmp.Y = row1.Y;
Trimestral_K2_U_Regional_tmp.ANO = row1.ANO;
Trimestral_K2_U_Regional_tmp.MES = row1.MES;
Trimestral_K2_U_Regional_tmp.DIA = row1.DIA;
Trimestral_K2_U_Regional_tmp.DESC_CNA = row1.DESC_CNA;
Trimestral_K2_U_Regional_tmp.ORDEN_OPEN = row1.ORDEN_OPEN;
Trimestral_K2_U_Regional_tmp.ACTIVIDAD = row1.ACTIVIDAD;
Trimestral_K2_U_Regional_tmp.TIPO_ACTIVIDAD = row1.TIPO_ACTIVIDAD;
Trimestral_K2_U_Regional_tmp.DESC_ACTIVIDAD = row1.DESC_ACTIVIDAD;
Trimestral_K2_U_Regional_tmp.FRECUENCIA = row1.FRECUENCIA;
Trimestral_K2_U_Regional_tmp.CUENTAS_VENCIDAS = row1.CUENTAS_VENCIDAS;
Trimestral_K2_U_Regional_tmp.SALDO_CUENTAS_VENCIDAS = row1.SALDO_CUENTAS_VENCIDAS;
Trimestral_K2_U_Regional_tmp.ESTADO_CORTE = row1.ESTADO_CORTE;
Trimestral_K2_U_Regional_tmp.ROUTE_ID = row1.ROUTE_ID;
Trimestral_K2_U_Regional_tmp.k_Dispersion = row1.k_Dispersion;
Trimestral_K2_U_Regional_tmp.Valor_Total = row1.Valor_Total;
Trimestral_K2_U_Regional = Trimestral_K2_U_Regional_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "Trimestral_K2_U_Regional"
if(Trimestral_K2_U_Regional != null) { 



	
	/**
	 * [tDBOutput_1 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"Trimestral_K2_U_Regional");
					}
					



        whetherReject_tDBOutput_1 = false;
                    if(Trimestral_K2_U_Regional.ORDEN == null) {
pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_1.setString(1, Trimestral_K2_U_Regional.ORDEN);
}

            int checkCount_tDBOutput_1 = -1;
            try (java.sql.ResultSet rs_tDBOutput_1 = pstmt_tDBOutput_1.executeQuery()) {
                while(rs_tDBOutput_1.next()) {
                    checkCount_tDBOutput_1 = rs_tDBOutput_1.getInt(1);
                }
            }
            if(checkCount_tDBOutput_1 > 0) {
                        if(Trimestral_K2_U_Regional.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(1, Trimestral_K2_U_Regional.CODIGO_PROGRAMA);
}

                        if(Trimestral_K2_U_Regional.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_1.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(2, Trimestral_K2_U_Regional.DESC_PROGRAMA);
}

                        if(Trimestral_K2_U_Regional.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_1.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(3, Trimestral_K2_U_Regional.CODIGO_EQUIPO);
}

                        if(Trimestral_K2_U_Regional.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(4, Trimestral_K2_U_Regional.EQUIPO_TRABAJO);
}

                        if(Trimestral_K2_U_Regional.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(5, Trimestral_K2_U_Regional.UNIDAD_OPERATIVA);
}

                        if(Trimestral_K2_U_Regional.NAME_ == null) {
pstmtUpdate_tDBOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(6, Trimestral_K2_U_Regional.NAME_);
}

                        if(Trimestral_K2_U_Regional.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_1.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(7, Trimestral_K2_U_Regional.NUMBER_ID);
}

                        if(Trimestral_K2_U_Regional.TAREA == null) {
pstmtUpdate_tDBOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(8, Trimestral_K2_U_Regional.TAREA);
}

                        if(Trimestral_K2_U_Regional.DESCTAREA == null) {
pstmtUpdate_tDBOutput_1.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(9, Trimestral_K2_U_Regional.DESCTAREA);
}

                        if(Trimestral_K2_U_Regional.CICLO == null) {
pstmtUpdate_tDBOutput_1.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(10, Trimestral_K2_U_Regional.CICLO);
}

                        if(Trimestral_K2_U_Regional.SERVICIO == null) {
pstmtUpdate_tDBOutput_1.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(11, Trimestral_K2_U_Regional.SERVICIO);
}

                        if(Trimestral_K2_U_Regional.ESTADO == null) {
pstmtUpdate_tDBOutput_1.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(12, Trimestral_K2_U_Regional.ESTADO);
}

                        if(Trimestral_K2_U_Regional.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_1.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(13, Trimestral_K2_U_Regional.DESC_ESTADO);
}

                        if(Trimestral_K2_U_Regional.FECHACREATED == null) {
pstmtUpdate_tDBOutput_1.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(14, Trimestral_K2_U_Regional.FECHACREATED);
}

                        if(Trimestral_K2_U_Regional.OOPEN == null) {
pstmtUpdate_tDBOutput_1.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(15, Trimestral_K2_U_Regional.OOPEN);
}

                        if(Trimestral_K2_U_Regional.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_1.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(16, Trimestral_K2_U_Regional.FECHALEGALIZATION);
}

                        if(Trimestral_K2_U_Regional.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_1.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(17, Trimestral_K2_U_Regional.HORALEGALIZATION);
}

                        if(Trimestral_K2_U_Regional.INSTALACION == null) {
pstmtUpdate_tDBOutput_1.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(18, Trimestral_K2_U_Regional.INSTALACION);
}

                        if(Trimestral_K2_U_Regional.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_1.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(19, Trimestral_K2_U_Regional.URBANO_RURAL);
}

                        if(Trimestral_K2_U_Regional.ORTRINUR == null) {
pstmtUpdate_tDBOutput_1.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(20, Trimestral_K2_U_Regional.ORTRINUR);
}

                        if(Trimestral_K2_U_Regional.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_1.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(21, Trimestral_K2_U_Regional.DESCRIPCIONA);
}

                        if(Trimestral_K2_U_Regional.CIUDAD == null) {
pstmtUpdate_tDBOutput_1.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(22, Trimestral_K2_U_Regional.CIUDAD);
}

                        if(Trimestral_K2_U_Regional.CMRUDESC == null) {
pstmtUpdate_tDBOutput_1.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(23, Trimestral_K2_U_Regional.CMRUDESC);
}

                        if(Trimestral_K2_U_Regional.REGION == null) {
pstmtUpdate_tDBOutput_1.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(24, Trimestral_K2_U_Regional.REGION);
}

                        if(Trimestral_K2_U_Regional.REGNDESC == null) {
pstmtUpdate_tDBOutput_1.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(25, Trimestral_K2_U_Regional.REGNDESC);
}

                        if(Trimestral_K2_U_Regional.DEPACODI == null) {
pstmtUpdate_tDBOutput_1.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(26, Trimestral_K2_U_Regional.DEPACODI);
}

                        if(Trimestral_K2_U_Regional.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_1.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(27, Trimestral_K2_U_Regional.CODIGORESPUESTA);
}

                        if(Trimestral_K2_U_Regional.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_1.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(28, Trimestral_K2_U_Regional.RESPUESTATENCION);
}

                        if(Trimestral_K2_U_Regional.X == null) {
pstmtUpdate_tDBOutput_1.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(29, Trimestral_K2_U_Regional.X);
}

                        if(Trimestral_K2_U_Regional.Y == null) {
pstmtUpdate_tDBOutput_1.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(30, Trimestral_K2_U_Regional.Y);
}

                        if(Trimestral_K2_U_Regional.ANO == null) {
pstmtUpdate_tDBOutput_1.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(31, Trimestral_K2_U_Regional.ANO);
}

                        if(Trimestral_K2_U_Regional.MES == null) {
pstmtUpdate_tDBOutput_1.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(32, Trimestral_K2_U_Regional.MES);
}

                        if(Trimestral_K2_U_Regional.DIA == null) {
pstmtUpdate_tDBOutput_1.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(33, Trimestral_K2_U_Regional.DIA);
}

                        if(Trimestral_K2_U_Regional.DESC_CNA == null) {
pstmtUpdate_tDBOutput_1.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(34, Trimestral_K2_U_Regional.DESC_CNA);
}

                        if(Trimestral_K2_U_Regional.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_1.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(35, Trimestral_K2_U_Regional.ORDEN_OPEN);
}

                        if(Trimestral_K2_U_Regional.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_1.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(36, Trimestral_K2_U_Regional.ACTIVIDAD);
}

                        if(Trimestral_K2_U_Regional.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_1.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(37, Trimestral_K2_U_Regional.TIPO_ACTIVIDAD);
}

                        if(Trimestral_K2_U_Regional.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_1.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(38, Trimestral_K2_U_Regional.DESC_ACTIVIDAD);
}

                        if(Trimestral_K2_U_Regional.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_1.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(39, Trimestral_K2_U_Regional.FRECUENCIA);
}

                        if(Trimestral_K2_U_Regional.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_1.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(40, Trimestral_K2_U_Regional.CUENTAS_VENCIDAS);
}

                        if(Trimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_1.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(41, Trimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS);
}

                        if(Trimestral_K2_U_Regional.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_1.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(42, Trimestral_K2_U_Regional.ESTADO_CORTE);
}

                        if(Trimestral_K2_U_Regional.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_1.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(43, Trimestral_K2_U_Regional.ROUTE_ID);
}

                        if(Trimestral_K2_U_Regional.k_Dispersion == null) {
pstmtUpdate_tDBOutput_1.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(44, Trimestral_K2_U_Regional.k_Dispersion);
}

                        if(Trimestral_K2_U_Regional.Valor_Total == null) {
pstmtUpdate_tDBOutput_1.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(45, Trimestral_K2_U_Regional.Valor_Total);
}

                        if(Trimestral_K2_U_Regional.ORDEN == null) {
pstmtUpdate_tDBOutput_1.setNull(46 + count_tDBOutput_1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_1.setString(46 + count_tDBOutput_1, Trimestral_K2_U_Regional.ORDEN);
}

                try {
                    updatedCount_tDBOutput_1 = updatedCount_tDBOutput_1 + pstmtUpdate_tDBOutput_1.executeUpdate();
                    nb_line_tDBOutput_1++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_1 = true;
                        nb_line_tDBOutput_1++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(Trimestral_K2_U_Regional.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(1, Trimestral_K2_U_Regional.CODIGO_PROGRAMA);
}

                        if(Trimestral_K2_U_Regional.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_1.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(2, Trimestral_K2_U_Regional.DESC_PROGRAMA);
}

                        if(Trimestral_K2_U_Regional.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_1.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(3, Trimestral_K2_U_Regional.CODIGO_EQUIPO);
}

                        if(Trimestral_K2_U_Regional.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_1.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(4, Trimestral_K2_U_Regional.EQUIPO_TRABAJO);
}

                        if(Trimestral_K2_U_Regional.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_1.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(5, Trimestral_K2_U_Regional.UNIDAD_OPERATIVA);
}

                        if(Trimestral_K2_U_Regional.NAME_ == null) {
pstmtInsert_tDBOutput_1.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(6, Trimestral_K2_U_Regional.NAME_);
}

                        if(Trimestral_K2_U_Regional.NUMBER_ID == null) {
pstmtInsert_tDBOutput_1.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(7, Trimestral_K2_U_Regional.NUMBER_ID);
}

                        if(Trimestral_K2_U_Regional.TAREA == null) {
pstmtInsert_tDBOutput_1.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(8, Trimestral_K2_U_Regional.TAREA);
}

                        if(Trimestral_K2_U_Regional.DESCTAREA == null) {
pstmtInsert_tDBOutput_1.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(9, Trimestral_K2_U_Regional.DESCTAREA);
}

                        if(Trimestral_K2_U_Regional.ORDEN == null) {
pstmtInsert_tDBOutput_1.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(10, Trimestral_K2_U_Regional.ORDEN);
}

                        if(Trimestral_K2_U_Regional.CICLO == null) {
pstmtInsert_tDBOutput_1.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(11, Trimestral_K2_U_Regional.CICLO);
}

                        if(Trimestral_K2_U_Regional.SERVICIO == null) {
pstmtInsert_tDBOutput_1.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(12, Trimestral_K2_U_Regional.SERVICIO);
}

                        if(Trimestral_K2_U_Regional.ESTADO == null) {
pstmtInsert_tDBOutput_1.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(13, Trimestral_K2_U_Regional.ESTADO);
}

                        if(Trimestral_K2_U_Regional.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_1.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(14, Trimestral_K2_U_Regional.DESC_ESTADO);
}

                        if(Trimestral_K2_U_Regional.FECHACREATED == null) {
pstmtInsert_tDBOutput_1.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(15, Trimestral_K2_U_Regional.FECHACREATED);
}

                        if(Trimestral_K2_U_Regional.OOPEN == null) {
pstmtInsert_tDBOutput_1.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(16, Trimestral_K2_U_Regional.OOPEN);
}

                        if(Trimestral_K2_U_Regional.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_1.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(17, Trimestral_K2_U_Regional.FECHALEGALIZATION);
}

                        if(Trimestral_K2_U_Regional.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_1.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(18, Trimestral_K2_U_Regional.HORALEGALIZATION);
}

                        if(Trimestral_K2_U_Regional.INSTALACION == null) {
pstmtInsert_tDBOutput_1.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(19, Trimestral_K2_U_Regional.INSTALACION);
}

                        if(Trimestral_K2_U_Regional.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_1.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(20, Trimestral_K2_U_Regional.URBANO_RURAL);
}

                        if(Trimestral_K2_U_Regional.ORTRINUR == null) {
pstmtInsert_tDBOutput_1.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(21, Trimestral_K2_U_Regional.ORTRINUR);
}

                        if(Trimestral_K2_U_Regional.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_1.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(22, Trimestral_K2_U_Regional.DESCRIPCIONA);
}

                        if(Trimestral_K2_U_Regional.CIUDAD == null) {
pstmtInsert_tDBOutput_1.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(23, Trimestral_K2_U_Regional.CIUDAD);
}

                        if(Trimestral_K2_U_Regional.CMRUDESC == null) {
pstmtInsert_tDBOutput_1.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(24, Trimestral_K2_U_Regional.CMRUDESC);
}

                        if(Trimestral_K2_U_Regional.REGION == null) {
pstmtInsert_tDBOutput_1.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(25, Trimestral_K2_U_Regional.REGION);
}

                        if(Trimestral_K2_U_Regional.REGNDESC == null) {
pstmtInsert_tDBOutput_1.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(26, Trimestral_K2_U_Regional.REGNDESC);
}

                        if(Trimestral_K2_U_Regional.DEPACODI == null) {
pstmtInsert_tDBOutput_1.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(27, Trimestral_K2_U_Regional.DEPACODI);
}

                        if(Trimestral_K2_U_Regional.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_1.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(28, Trimestral_K2_U_Regional.CODIGORESPUESTA);
}

                        if(Trimestral_K2_U_Regional.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_1.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(29, Trimestral_K2_U_Regional.RESPUESTATENCION);
}

                        if(Trimestral_K2_U_Regional.X == null) {
pstmtInsert_tDBOutput_1.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(30, Trimestral_K2_U_Regional.X);
}

                        if(Trimestral_K2_U_Regional.Y == null) {
pstmtInsert_tDBOutput_1.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(31, Trimestral_K2_U_Regional.Y);
}

                        if(Trimestral_K2_U_Regional.ANO == null) {
pstmtInsert_tDBOutput_1.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(32, Trimestral_K2_U_Regional.ANO);
}

                        if(Trimestral_K2_U_Regional.MES == null) {
pstmtInsert_tDBOutput_1.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(33, Trimestral_K2_U_Regional.MES);
}

                        if(Trimestral_K2_U_Regional.DIA == null) {
pstmtInsert_tDBOutput_1.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(34, Trimestral_K2_U_Regional.DIA);
}

                        if(Trimestral_K2_U_Regional.DESC_CNA == null) {
pstmtInsert_tDBOutput_1.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(35, Trimestral_K2_U_Regional.DESC_CNA);
}

                        if(Trimestral_K2_U_Regional.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_1.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(36, Trimestral_K2_U_Regional.ORDEN_OPEN);
}

                        if(Trimestral_K2_U_Regional.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_1.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(37, Trimestral_K2_U_Regional.ACTIVIDAD);
}

                        if(Trimestral_K2_U_Regional.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_1.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(38, Trimestral_K2_U_Regional.TIPO_ACTIVIDAD);
}

                        if(Trimestral_K2_U_Regional.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_1.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(39, Trimestral_K2_U_Regional.DESC_ACTIVIDAD);
}

                        if(Trimestral_K2_U_Regional.FRECUENCIA == null) {
pstmtInsert_tDBOutput_1.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(40, Trimestral_K2_U_Regional.FRECUENCIA);
}

                        if(Trimestral_K2_U_Regional.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_1.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(41, Trimestral_K2_U_Regional.CUENTAS_VENCIDAS);
}

                        if(Trimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_1.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(42, Trimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS);
}

                        if(Trimestral_K2_U_Regional.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_1.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(43, Trimestral_K2_U_Regional.ESTADO_CORTE);
}

                        if(Trimestral_K2_U_Regional.ROUTE_ID == null) {
pstmtInsert_tDBOutput_1.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(44, Trimestral_K2_U_Regional.ROUTE_ID);
}

                        if(Trimestral_K2_U_Regional.k_Dispersion == null) {
pstmtInsert_tDBOutput_1.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(45, Trimestral_K2_U_Regional.k_Dispersion);
}

                        if(Trimestral_K2_U_Regional.Valor_Total == null) {
pstmtInsert_tDBOutput_1.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_1.setString(46, Trimestral_K2_U_Regional.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_1 = insertedCount_tDBOutput_1 + pstmtInsert_tDBOutput_1.executeUpdate();
                    nb_line_tDBOutput_1++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_1 = true;
                        nb_line_tDBOutput_1++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_1) {
            }
                commitCounter_tDBOutput_1++;

                if(commitEvery_tDBOutput_1 <= commitCounter_tDBOutput_1) {

                    conn_tDBOutput_1.commit();
                    commitCounter_tDBOutput_1=0;

                }


 


	tos_count_tDBOutput_1++;

/**
 * [tDBOutput_1 main ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";

	

 



/**
 * [tDBOutput_1 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";

	

 



/**
 * [tDBOutput_1 process_data_end ] stop
 */

} // End of branch "Trimestral_K2_U_Regional"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
		if(conn_tDBInput_1 != null && !conn_tDBInput_1.isClosed()) {
			
			conn_tDBInput_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
		


 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tDBOutput_1 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";

	



        if(pstmtUpdate_tDBOutput_1 != null){
            pstmtUpdate_tDBOutput_1.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_1");
        }
        if(pstmtInsert_tDBOutput_1 != null){
            pstmtInsert_tDBOutput_1.close();
            resourceMap.remove("pstmtInsert_tDBOutput_1");
        }
        if(pstmt_tDBOutput_1 != null) {
            pstmt_tDBOutput_1.close();
            resourceMap.remove("pstmt_tDBOutput_1");
        }
    resourceMap.put("statementClosed_tDBOutput_1", true);
    	if (commitCounter_tDBOutput_1 > 0) {
    		
    		conn_tDBOutput_1.commit();
    		
    	}
    		
		
    	conn_tDBOutput_1 .close();
    	
    	resourceMap.put("finish_tDBOutput_1", true);
    	

	nb_line_deleted_tDBOutput_1=nb_line_deleted_tDBOutput_1+ deletedCount_tDBOutput_1;
	nb_line_update_tDBOutput_1=nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
	nb_line_inserted_tDBOutput_1=nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
	nb_line_rejected_tDBOutput_1=nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;
	
        globalMap.put("tDBOutput_1_NB_LINE",nb_line_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_UPDATED",nb_line_update_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_DELETED",nb_line_deleted_tDBOutput_1);
        globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"Trimestral_K2_U_Regional");
			  	}
			  	
 

ok_Hash.put("tDBOutput_1", true);
end_Hash.put("tDBOutput_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBInput_2Process(globalMap);



/**
 * [tDBOutput_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tDBOutput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_1";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_1 = null;
                if ((pstmtUpdateToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_1")) != null) {
                    pstmtUpdateToClose_tDBOutput_1.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_1 = null;
                if ((pstmtInsertToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_1")) != null) {
                    pstmtInsertToClose_tDBOutput_1.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
                if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_1")) != null) {
                    pstmtToClose_tDBOutput_1.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_1") == null){
            java.sql.Connection ctn_tDBOutput_1 = null;
            if((ctn_tDBOutput_1 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_1")) != null){
                try {
                    ctn_tDBOutput_1.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_1) {
                    String errorMessage_tDBOutput_1 = "failed to close the connection in tDBOutput_1 :" + sqlEx_tDBOutput_1.getMessage();
                    System.err.println(errorMessage_tDBOutput_1);
                }
            }
        }
    }
 



/**
 * [tDBOutput_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfTrimestral_K2_U_RegionalStruct implements routines.system.IPersistableRow<copyOfTrimestral_K2_U_RegionalStruct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfTrimestral_K2_U_RegionalStruct other = (copyOfTrimestral_K2_U_RegionalStruct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfTrimestral_K2_U_RegionalStruct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfTrimestral_K2_U_RegionalStruct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfTrimestral_K2_U_RegionalStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
copyOfTrimestral_K2_U_RegionalStruct copyOfTrimestral_K2_U_Regional = new copyOfTrimestral_K2_U_RegionalStruct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfTrimestral_K2_U_Regional");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;

int rejectedCount_tDBOutput_2=0;

String tableName_tDBOutput_2 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_2 = false;

java.util.Calendar calendar_tDBOutput_2 = java.util.Calendar.getInstance();
calendar_tDBOutput_2.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_2 = calendar_tDBOutput_2.getTime().getTime();
calendar_tDBOutput_2.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_2 = calendar_tDBOutput_2.getTime().getTime();
long date_tDBOutput_2;

java.sql.Connection conn_tDBOutput_2 = null;
		String dbProperties_tDBOutput_2 = "noDatetimeStringSync=true";
		String url_tDBOutput_2 = null;
		if(dbProperties_tDBOutput_2 == null || dbProperties_tDBOutput_2.trim().length() == 0) {
			url_tDBOutput_2 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_2 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_2.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_2 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_2 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_2;
		}
		String driverClass_tDBOutput_2 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_2 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_2 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:OB4m7mBLpT/5lPTyx4KkKGcRT49/gxo1nYhGB04KTQu6c5Llx/0j/tA=");

		String dbPwd_tDBOutput_2 = decryptedPassword_tDBOutput_2;
		java.lang.Class.forName(driverClass_tDBOutput_2);
		
		conn_tDBOutput_2 = java.sql.DriverManager.getConnection(url_tDBOutput_2, dbUser_tDBOutput_2, dbPwd_tDBOutput_2);
		
	
	resourceMap.put("conn_tDBOutput_2", conn_tDBOutput_2);
        conn_tDBOutput_2.setAutoCommit(false);
        int commitEvery_tDBOutput_2 = 10000;
        int commitCounter_tDBOutput_2 = 0;

int count_tDBOutput_2=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    String insert_tDBOutput_2 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(insert_tDBOutput_2);
	    resourceMap.put("pstmtInsert_tDBOutput_2", pstmtInsert_tDBOutput_2);
	    String update_tDBOutput_2 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmtUpdate_tDBOutput_2", pstmtUpdate_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfTrimestral_K2_U_RegionalStruct copyOfTrimestral_K2_U_Regional_tmp = new copyOfTrimestral_K2_U_RegionalStruct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";

	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				String driverClass_tDBInput_2 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_2 = java.lang.Class.forName(driverClass_tDBInput_2);
				String dbUser_tDBInput_2 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_2 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:UuuOdrAfK46//IoWrKgnE24IUg2+sQVhMVpQ/UMjURF/pV98ksEKSv8=");
				
				String dbPwd_tDBInput_2 = decryptedPassword_tDBInput_2;
				
				String url_tDBInput_2 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_2 = java.sql.DriverManager.getConnection(url_tDBInput_2,dbUser_tDBInput_2,dbPwd_tDBInput_2);
		        
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (2) as k_Dispersion\n,((SELECT c.RURAL_PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO"
+" = 'REGIONAL' )*2) Valor_Total\nfrom modulo_orden_personal a\nwhere\n a.REGION <>8\nand FECHALEGALIZATION >= (select (CO"
+"NCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(C"
+"OD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'R'\nand FRECUENC"
+"IA= 3\nand ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546, \n1547,\n154"
+"8, \n1549,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n1569,\n1571,\n1"
+"577, \n1578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595, \n1596, \n15"
+"98,\n1602,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n1629,\n1630, "
+"\n1631, \n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658, \n1660, \n1"
+"662, \n1663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n1699,\n1701,"
+"\n1704,\n1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733, \n1735, \n17"
+"36, \n1752, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);
		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row2.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row2.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row2.DESC_PROGRAMA = null;
							} else {
	                         		
        	row2.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row2.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row2.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 3, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 4) {
								row2.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row2.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 4, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 5) {
								row2.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row2.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 5, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 6) {
								row2.TAREA = null;
							} else {
	                         		
        	row2.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 6, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 7) {
								row2.DESCTAREA = null;
							} else {
	                         		
        	row2.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 7, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 8) {
								row2.ORDEN = null;
							} else {
	                         		
        	row2.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_2, 8, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 9) {
								row2.CICLO = null;
							} else {
	                         		
        	row2.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 9, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 10) {
								row2.SERVICIO = null;
							} else {
	                         		
        	row2.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 10, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 11) {
								row2.ESTADO = null;
							} else {
	                         		
        	row2.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 11, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 12) {
								row2.DESC_ESTADO = null;
							} else {
	                         		
        	row2.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 12, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 13) {
								row2.FECHACREATED = null;
							} else {
	                         		
        	row2.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_2, 13, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 14) {
								row2.OOPEN = null;
							} else {
	                         		
        	row2.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_2, 14, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 15) {
								row2.FECHALEGALIZATION = null;
							} else {
	                         		
        	row2.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_2, 15, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 16) {
								row2.HORALEGALIZATION = null;
							} else {
	                         		
        	row2.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_2, 16, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 17) {
								row2.INSTALACION = null;
							} else {
	                         		
        	row2.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_2, 17, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 18) {
								row2.URBANO_RURAL = null;
							} else {
	                         		
        	row2.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_2, 18, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 19) {
								row2.ORTRINUR = null;
							} else {
	                         		
        	row2.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_2, 19, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 20) {
								row2.DESCRIPCIONA = null;
							} else {
	                         		
        	row2.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 20, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 21) {
								row2.CIUDAD = null;
							} else {
	                         		
        	row2.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_2, 21, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 22) {
								row2.CMRUDESC = null;
							} else {
	                         		
        	row2.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_2, 22, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 23) {
								row2.REGION = null;
							} else {
	                         		
        	row2.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_2, 23, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 24) {
								row2.REGNDESC = null;
							} else {
	                         		
        	row2.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_2, 24, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 25) {
								row2.DEPACODI = null;
							} else {
	                         		
        	row2.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_2, 25, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 26) {
								row2.CODIGORESPUESTA = null;
							} else {
	                         		
        	row2.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 26, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 27) {
								row2.RESPUESTATENCION = null;
							} else {
	                         		
        	row2.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_2, 27, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 28) {
								row2.X = null;
							} else {
	                         		
        	row2.X = routines.system.JDBCUtil.getString(rs_tDBInput_2, 28, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 29) {
								row2.Y = null;
							} else {
	                         		
        	row2.Y = routines.system.JDBCUtil.getString(rs_tDBInput_2, 29, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 30) {
								row2.ANO = null;
							} else {
	                         		
        	row2.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 30, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 31) {
								row2.MES = null;
							} else {
	                         		
        	row2.MES = routines.system.JDBCUtil.getString(rs_tDBInput_2, 31, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 32) {
								row2.DIA = null;
							} else {
	                         		
        	row2.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 32, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 33) {
								row2.DESC_CNA = null;
							} else {
	                         		
        	row2.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 33, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 34) {
								row2.ORDEN_OPEN = null;
							} else {
	                         		
        	row2.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_2, 34, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 35) {
								row2.ACTIVIDAD = null;
							} else {
	                         		
        	row2.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_2, 35, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 36) {
								row2.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row2.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_2, 36, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 37) {
								row2.FRECUENCIA = null;
							} else {
	                         		
        	row2.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 37, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 38) {
								row2.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row2.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_2, 38, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 39) {
								row2.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row2.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_2, 39, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 40) {
								row2.ESTADO_CORTE = null;
							} else {
	                         		
        	row2.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_2, 40, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 41) {
								row2.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row2.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_2, 41, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 42) {
								row2.ROUTE_ID = null;
							} else {
	                         		
        	row2.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_2, 42, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 43) {
								row2.NAME_ = null;
							} else {
	                         		
        	row2.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_2, 43, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 44) {
								row2.NUMBER_ID = null;
							} else {
	                         		
        	row2.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_2, 44, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 45) {
								row2.k_Dispersion = null;
							} else {
	                         		
        	row2.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_2, 45, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 46) {
								row2.Valor_Total = null;
							} else {
	                         		
        	row2.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_2, 46, false);
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row2");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_2 = false;
		  boolean mainRowRejected_tMap_2 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

copyOfTrimestral_K2_U_Regional = null;


// # Output table : 'copyOfTrimestral_K2_U_Regional'
copyOfTrimestral_K2_U_Regional_tmp.CODIGO_PROGRAMA = row2.CODIGO_PROGRAMA;
copyOfTrimestral_K2_U_Regional_tmp.DESC_PROGRAMA = row2.DESC_PROGRAMA;
copyOfTrimestral_K2_U_Regional_tmp.CODIGO_EQUIPO = row2.CODIGO_EQUIPO;
copyOfTrimestral_K2_U_Regional_tmp.EQUIPO_TRABAJO = row2.EQUIPO_TRABAJO;
copyOfTrimestral_K2_U_Regional_tmp.UNIDAD_OPERATIVA = row2.UNIDAD_OPERATIVA;
copyOfTrimestral_K2_U_Regional_tmp.NAME_ = row2.NAME_;
copyOfTrimestral_K2_U_Regional_tmp.NUMBER_ID = row2.NUMBER_ID;
copyOfTrimestral_K2_U_Regional_tmp.TAREA = row2.TAREA;
copyOfTrimestral_K2_U_Regional_tmp.DESCTAREA = row2.DESCTAREA;
copyOfTrimestral_K2_U_Regional_tmp.ORDEN = row2.ORDEN;
copyOfTrimestral_K2_U_Regional_tmp.CICLO = row2.CICLO;
copyOfTrimestral_K2_U_Regional_tmp.SERVICIO = row2.SERVICIO;
copyOfTrimestral_K2_U_Regional_tmp.ESTADO = row2.ESTADO;
copyOfTrimestral_K2_U_Regional_tmp.DESC_ESTADO = row2.DESC_ESTADO;
copyOfTrimestral_K2_U_Regional_tmp.FECHACREATED = row2.FECHACREATED;
copyOfTrimestral_K2_U_Regional_tmp.OOPEN = row2.OOPEN;
copyOfTrimestral_K2_U_Regional_tmp.FECHALEGALIZATION = row2.FECHALEGALIZATION;
copyOfTrimestral_K2_U_Regional_tmp.HORALEGALIZATION = row2.HORALEGALIZATION;
copyOfTrimestral_K2_U_Regional_tmp.INSTALACION = row2.INSTALACION;
copyOfTrimestral_K2_U_Regional_tmp.URBANO_RURAL = row2.URBANO_RURAL;
copyOfTrimestral_K2_U_Regional_tmp.ORTRINUR = row2.ORTRINUR;
copyOfTrimestral_K2_U_Regional_tmp.DESCRIPCIONA = row2.DESCRIPCIONA;
copyOfTrimestral_K2_U_Regional_tmp.CIUDAD = row2.CIUDAD;
copyOfTrimestral_K2_U_Regional_tmp.CMRUDESC = row2.CMRUDESC;
copyOfTrimestral_K2_U_Regional_tmp.REGION = row2.REGION;
copyOfTrimestral_K2_U_Regional_tmp.REGNDESC = row2.REGNDESC;
copyOfTrimestral_K2_U_Regional_tmp.DEPACODI = row2.DEPACODI;
copyOfTrimestral_K2_U_Regional_tmp.CODIGORESPUESTA = row2.CODIGORESPUESTA;
copyOfTrimestral_K2_U_Regional_tmp.RESPUESTATENCION = row2.RESPUESTATENCION;
copyOfTrimestral_K2_U_Regional_tmp.X = row2.X;
copyOfTrimestral_K2_U_Regional_tmp.Y = row2.Y;
copyOfTrimestral_K2_U_Regional_tmp.ANO = row2.ANO;
copyOfTrimestral_K2_U_Regional_tmp.MES = row2.MES;
copyOfTrimestral_K2_U_Regional_tmp.DIA = row2.DIA;
copyOfTrimestral_K2_U_Regional_tmp.DESC_CNA = row2.DESC_CNA;
copyOfTrimestral_K2_U_Regional_tmp.ORDEN_OPEN = row2.ORDEN_OPEN;
copyOfTrimestral_K2_U_Regional_tmp.ACTIVIDAD = row2.ACTIVIDAD;
copyOfTrimestral_K2_U_Regional_tmp.TIPO_ACTIVIDAD = row2.TIPO_ACTIVIDAD;
copyOfTrimestral_K2_U_Regional_tmp.DESC_ACTIVIDAD = row2.DESC_ACTIVIDAD;
copyOfTrimestral_K2_U_Regional_tmp.FRECUENCIA = row2.FRECUENCIA;
copyOfTrimestral_K2_U_Regional_tmp.CUENTAS_VENCIDAS = row2.CUENTAS_VENCIDAS;
copyOfTrimestral_K2_U_Regional_tmp.SALDO_CUENTAS_VENCIDAS = row2.SALDO_CUENTAS_VENCIDAS;
copyOfTrimestral_K2_U_Regional_tmp.ESTADO_CORTE = row2.ESTADO_CORTE;
copyOfTrimestral_K2_U_Regional_tmp.ROUTE_ID = row2.ROUTE_ID;
copyOfTrimestral_K2_U_Regional_tmp.k_Dispersion = row2.k_Dispersion;
copyOfTrimestral_K2_U_Regional_tmp.Valor_Total = row2.Valor_Total;
copyOfTrimestral_K2_U_Regional = copyOfTrimestral_K2_U_Regional_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "copyOfTrimestral_K2_U_Regional"
if(copyOfTrimestral_K2_U_Regional != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfTrimestral_K2_U_Regional");
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(copyOfTrimestral_K2_U_Regional.ORDEN == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, copyOfTrimestral_K2_U_Regional.ORDEN);
}

            int checkCount_tDBOutput_2 = -1;
            try (java.sql.ResultSet rs_tDBOutput_2 = pstmt_tDBOutput_2.executeQuery()) {
                while(rs_tDBOutput_2.next()) {
                    checkCount_tDBOutput_2 = rs_tDBOutput_2.getInt(1);
                }
            }
            if(checkCount_tDBOutput_2 > 0) {
                        if(copyOfTrimestral_K2_U_Regional.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(1, copyOfTrimestral_K2_U_Regional.CODIGO_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(2, copyOfTrimestral_K2_U_Regional.DESC_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(3, copyOfTrimestral_K2_U_Regional.CODIGO_EQUIPO);
}

                        if(copyOfTrimestral_K2_U_Regional.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(4, copyOfTrimestral_K2_U_Regional.EQUIPO_TRABAJO);
}

                        if(copyOfTrimestral_K2_U_Regional.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(5, copyOfTrimestral_K2_U_Regional.UNIDAD_OPERATIVA);
}

                        if(copyOfTrimestral_K2_U_Regional.NAME_ == null) {
pstmtUpdate_tDBOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(6, copyOfTrimestral_K2_U_Regional.NAME_);
}

                        if(copyOfTrimestral_K2_U_Regional.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(7, copyOfTrimestral_K2_U_Regional.NUMBER_ID);
}

                        if(copyOfTrimestral_K2_U_Regional.TAREA == null) {
pstmtUpdate_tDBOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(8, copyOfTrimestral_K2_U_Regional.TAREA);
}

                        if(copyOfTrimestral_K2_U_Regional.DESCTAREA == null) {
pstmtUpdate_tDBOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(9, copyOfTrimestral_K2_U_Regional.DESCTAREA);
}

                        if(copyOfTrimestral_K2_U_Regional.CICLO == null) {
pstmtUpdate_tDBOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(10, copyOfTrimestral_K2_U_Regional.CICLO);
}

                        if(copyOfTrimestral_K2_U_Regional.SERVICIO == null) {
pstmtUpdate_tDBOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(11, copyOfTrimestral_K2_U_Regional.SERVICIO);
}

                        if(copyOfTrimestral_K2_U_Regional.ESTADO == null) {
pstmtUpdate_tDBOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(12, copyOfTrimestral_K2_U_Regional.ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(13, copyOfTrimestral_K2_U_Regional.DESC_ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional.FECHACREATED == null) {
pstmtUpdate_tDBOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(14, copyOfTrimestral_K2_U_Regional.FECHACREATED);
}

                        if(copyOfTrimestral_K2_U_Regional.OOPEN == null) {
pstmtUpdate_tDBOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(15, copyOfTrimestral_K2_U_Regional.OOPEN);
}

                        if(copyOfTrimestral_K2_U_Regional.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(16, copyOfTrimestral_K2_U_Regional.FECHALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(17, copyOfTrimestral_K2_U_Regional.HORALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional.INSTALACION == null) {
pstmtUpdate_tDBOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(18, copyOfTrimestral_K2_U_Regional.INSTALACION);
}

                        if(copyOfTrimestral_K2_U_Regional.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(19, copyOfTrimestral_K2_U_Regional.URBANO_RURAL);
}

                        if(copyOfTrimestral_K2_U_Regional.ORTRINUR == null) {
pstmtUpdate_tDBOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(20, copyOfTrimestral_K2_U_Regional.ORTRINUR);
}

                        if(copyOfTrimestral_K2_U_Regional.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(21, copyOfTrimestral_K2_U_Regional.DESCRIPCIONA);
}

                        if(copyOfTrimestral_K2_U_Regional.CIUDAD == null) {
pstmtUpdate_tDBOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(22, copyOfTrimestral_K2_U_Regional.CIUDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.CMRUDESC == null) {
pstmtUpdate_tDBOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(23, copyOfTrimestral_K2_U_Regional.CMRUDESC);
}

                        if(copyOfTrimestral_K2_U_Regional.REGION == null) {
pstmtUpdate_tDBOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(24, copyOfTrimestral_K2_U_Regional.REGION);
}

                        if(copyOfTrimestral_K2_U_Regional.REGNDESC == null) {
pstmtUpdate_tDBOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(25, copyOfTrimestral_K2_U_Regional.REGNDESC);
}

                        if(copyOfTrimestral_K2_U_Regional.DEPACODI == null) {
pstmtUpdate_tDBOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(26, copyOfTrimestral_K2_U_Regional.DEPACODI);
}

                        if(copyOfTrimestral_K2_U_Regional.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(27, copyOfTrimestral_K2_U_Regional.CODIGORESPUESTA);
}

                        if(copyOfTrimestral_K2_U_Regional.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_2.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(28, copyOfTrimestral_K2_U_Regional.RESPUESTATENCION);
}

                        if(copyOfTrimestral_K2_U_Regional.X == null) {
pstmtUpdate_tDBOutput_2.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(29, copyOfTrimestral_K2_U_Regional.X);
}

                        if(copyOfTrimestral_K2_U_Regional.Y == null) {
pstmtUpdate_tDBOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(30, copyOfTrimestral_K2_U_Regional.Y);
}

                        if(copyOfTrimestral_K2_U_Regional.ANO == null) {
pstmtUpdate_tDBOutput_2.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(31, copyOfTrimestral_K2_U_Regional.ANO);
}

                        if(copyOfTrimestral_K2_U_Regional.MES == null) {
pstmtUpdate_tDBOutput_2.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(32, copyOfTrimestral_K2_U_Regional.MES);
}

                        if(copyOfTrimestral_K2_U_Regional.DIA == null) {
pstmtUpdate_tDBOutput_2.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(33, copyOfTrimestral_K2_U_Regional.DIA);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_CNA == null) {
pstmtUpdate_tDBOutput_2.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(34, copyOfTrimestral_K2_U_Regional.DESC_CNA);
}

                        if(copyOfTrimestral_K2_U_Regional.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_2.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(35, copyOfTrimestral_K2_U_Regional.ORDEN_OPEN);
}

                        if(copyOfTrimestral_K2_U_Regional.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_2.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(36, copyOfTrimestral_K2_U_Regional.ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_2.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(37, copyOfTrimestral_K2_U_Regional.TIPO_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_2.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(38, copyOfTrimestral_K2_U_Regional.DESC_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_2.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(39, copyOfTrimestral_K2_U_Regional.FRECUENCIA);
}

                        if(copyOfTrimestral_K2_U_Regional.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_2.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(40, copyOfTrimestral_K2_U_Regional.CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_2.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(41, copyOfTrimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_2.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(42, copyOfTrimestral_K2_U_Regional.ESTADO_CORTE);
}

                        if(copyOfTrimestral_K2_U_Regional.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_2.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(43, copyOfTrimestral_K2_U_Regional.ROUTE_ID);
}

                        if(copyOfTrimestral_K2_U_Regional.k_Dispersion == null) {
pstmtUpdate_tDBOutput_2.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(44, copyOfTrimestral_K2_U_Regional.k_Dispersion);
}

                        if(copyOfTrimestral_K2_U_Regional.Valor_Total == null) {
pstmtUpdate_tDBOutput_2.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(45, copyOfTrimestral_K2_U_Regional.Valor_Total);
}

                        if(copyOfTrimestral_K2_U_Regional.ORDEN == null) {
pstmtUpdate_tDBOutput_2.setNull(46 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(46 + count_tDBOutput_2, copyOfTrimestral_K2_U_Regional.ORDEN);
}

                try {
                    updatedCount_tDBOutput_2 = updatedCount_tDBOutput_2 + pstmtUpdate_tDBOutput_2.executeUpdate();
                    nb_line_tDBOutput_2++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_2 = true;
                        nb_line_tDBOutput_2++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfTrimestral_K2_U_Regional.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(1, copyOfTrimestral_K2_U_Regional.CODIGO_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(2, copyOfTrimestral_K2_U_Regional.DESC_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(3, copyOfTrimestral_K2_U_Regional.CODIGO_EQUIPO);
}

                        if(copyOfTrimestral_K2_U_Regional.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(4, copyOfTrimestral_K2_U_Regional.EQUIPO_TRABAJO);
}

                        if(copyOfTrimestral_K2_U_Regional.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(5, copyOfTrimestral_K2_U_Regional.UNIDAD_OPERATIVA);
}

                        if(copyOfTrimestral_K2_U_Regional.NAME_ == null) {
pstmtInsert_tDBOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(6, copyOfTrimestral_K2_U_Regional.NAME_);
}

                        if(copyOfTrimestral_K2_U_Regional.NUMBER_ID == null) {
pstmtInsert_tDBOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(7, copyOfTrimestral_K2_U_Regional.NUMBER_ID);
}

                        if(copyOfTrimestral_K2_U_Regional.TAREA == null) {
pstmtInsert_tDBOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(8, copyOfTrimestral_K2_U_Regional.TAREA);
}

                        if(copyOfTrimestral_K2_U_Regional.DESCTAREA == null) {
pstmtInsert_tDBOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(9, copyOfTrimestral_K2_U_Regional.DESCTAREA);
}

                        if(copyOfTrimestral_K2_U_Regional.ORDEN == null) {
pstmtInsert_tDBOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(10, copyOfTrimestral_K2_U_Regional.ORDEN);
}

                        if(copyOfTrimestral_K2_U_Regional.CICLO == null) {
pstmtInsert_tDBOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(11, copyOfTrimestral_K2_U_Regional.CICLO);
}

                        if(copyOfTrimestral_K2_U_Regional.SERVICIO == null) {
pstmtInsert_tDBOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(12, copyOfTrimestral_K2_U_Regional.SERVICIO);
}

                        if(copyOfTrimestral_K2_U_Regional.ESTADO == null) {
pstmtInsert_tDBOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(13, copyOfTrimestral_K2_U_Regional.ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(14, copyOfTrimestral_K2_U_Regional.DESC_ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional.FECHACREATED == null) {
pstmtInsert_tDBOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(15, copyOfTrimestral_K2_U_Regional.FECHACREATED);
}

                        if(copyOfTrimestral_K2_U_Regional.OOPEN == null) {
pstmtInsert_tDBOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(16, copyOfTrimestral_K2_U_Regional.OOPEN);
}

                        if(copyOfTrimestral_K2_U_Regional.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(17, copyOfTrimestral_K2_U_Regional.FECHALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(18, copyOfTrimestral_K2_U_Regional.HORALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional.INSTALACION == null) {
pstmtInsert_tDBOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(19, copyOfTrimestral_K2_U_Regional.INSTALACION);
}

                        if(copyOfTrimestral_K2_U_Regional.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(20, copyOfTrimestral_K2_U_Regional.URBANO_RURAL);
}

                        if(copyOfTrimestral_K2_U_Regional.ORTRINUR == null) {
pstmtInsert_tDBOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(21, copyOfTrimestral_K2_U_Regional.ORTRINUR);
}

                        if(copyOfTrimestral_K2_U_Regional.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(22, copyOfTrimestral_K2_U_Regional.DESCRIPCIONA);
}

                        if(copyOfTrimestral_K2_U_Regional.CIUDAD == null) {
pstmtInsert_tDBOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(23, copyOfTrimestral_K2_U_Regional.CIUDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.CMRUDESC == null) {
pstmtInsert_tDBOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(24, copyOfTrimestral_K2_U_Regional.CMRUDESC);
}

                        if(copyOfTrimestral_K2_U_Regional.REGION == null) {
pstmtInsert_tDBOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(25, copyOfTrimestral_K2_U_Regional.REGION);
}

                        if(copyOfTrimestral_K2_U_Regional.REGNDESC == null) {
pstmtInsert_tDBOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(26, copyOfTrimestral_K2_U_Regional.REGNDESC);
}

                        if(copyOfTrimestral_K2_U_Regional.DEPACODI == null) {
pstmtInsert_tDBOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(27, copyOfTrimestral_K2_U_Regional.DEPACODI);
}

                        if(copyOfTrimestral_K2_U_Regional.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_2.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(28, copyOfTrimestral_K2_U_Regional.CODIGORESPUESTA);
}

                        if(copyOfTrimestral_K2_U_Regional.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_2.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(29, copyOfTrimestral_K2_U_Regional.RESPUESTATENCION);
}

                        if(copyOfTrimestral_K2_U_Regional.X == null) {
pstmtInsert_tDBOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(30, copyOfTrimestral_K2_U_Regional.X);
}

                        if(copyOfTrimestral_K2_U_Regional.Y == null) {
pstmtInsert_tDBOutput_2.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(31, copyOfTrimestral_K2_U_Regional.Y);
}

                        if(copyOfTrimestral_K2_U_Regional.ANO == null) {
pstmtInsert_tDBOutput_2.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(32, copyOfTrimestral_K2_U_Regional.ANO);
}

                        if(copyOfTrimestral_K2_U_Regional.MES == null) {
pstmtInsert_tDBOutput_2.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(33, copyOfTrimestral_K2_U_Regional.MES);
}

                        if(copyOfTrimestral_K2_U_Regional.DIA == null) {
pstmtInsert_tDBOutput_2.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(34, copyOfTrimestral_K2_U_Regional.DIA);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_CNA == null) {
pstmtInsert_tDBOutput_2.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(35, copyOfTrimestral_K2_U_Regional.DESC_CNA);
}

                        if(copyOfTrimestral_K2_U_Regional.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_2.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(36, copyOfTrimestral_K2_U_Regional.ORDEN_OPEN);
}

                        if(copyOfTrimestral_K2_U_Regional.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_2.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(37, copyOfTrimestral_K2_U_Regional.ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_2.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(38, copyOfTrimestral_K2_U_Regional.TIPO_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_2.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(39, copyOfTrimestral_K2_U_Regional.DESC_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional.FRECUENCIA == null) {
pstmtInsert_tDBOutput_2.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(40, copyOfTrimestral_K2_U_Regional.FRECUENCIA);
}

                        if(copyOfTrimestral_K2_U_Regional.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_2.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(41, copyOfTrimestral_K2_U_Regional.CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_2.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(42, copyOfTrimestral_K2_U_Regional.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_2.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(43, copyOfTrimestral_K2_U_Regional.ESTADO_CORTE);
}

                        if(copyOfTrimestral_K2_U_Regional.ROUTE_ID == null) {
pstmtInsert_tDBOutput_2.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(44, copyOfTrimestral_K2_U_Regional.ROUTE_ID);
}

                        if(copyOfTrimestral_K2_U_Regional.k_Dispersion == null) {
pstmtInsert_tDBOutput_2.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(45, copyOfTrimestral_K2_U_Regional.k_Dispersion);
}

                        if(copyOfTrimestral_K2_U_Regional.Valor_Total == null) {
pstmtInsert_tDBOutput_2.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(46, copyOfTrimestral_K2_U_Regional.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_2 = insertedCount_tDBOutput_2 + pstmtInsert_tDBOutput_2.executeUpdate();
                    nb_line_tDBOutput_2++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_2 = true;
                        nb_line_tDBOutput_2++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_2) {
            }
                commitCounter_tDBOutput_2++;

                if(commitEvery_tDBOutput_2 <= commitCounter_tDBOutput_2) {

                    conn_tDBOutput_2.commit();
                    commitCounter_tDBOutput_2=0;

                }


 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "copyOfTrimestral_K2_U_Regional"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
		if(conn_tDBInput_2 != null && !conn_tDBInput_2.isClosed()) {
			
			conn_tDBInput_2.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);
		


 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	



        if(pstmtUpdate_tDBOutput_2 != null){
            pstmtUpdate_tDBOutput_2.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_2");
        }
        if(pstmtInsert_tDBOutput_2 != null){
            pstmtInsert_tDBOutput_2.close();
            resourceMap.remove("pstmtInsert_tDBOutput_2");
        }
        if(pstmt_tDBOutput_2 != null) {
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);
    	if (commitCounter_tDBOutput_2 > 0) {
    		
    		conn_tDBOutput_2.commit();
    		
    	}
    		
		
    	conn_tDBOutput_2 .close();
    	
    	resourceMap.put("finish_tDBOutput_2", true);
    	

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfTrimestral_K2_U_Regional");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tDBInput_3Process(globalMap);



/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_2 = null;
                if ((pstmtUpdateToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_2")) != null) {
                    pstmtUpdateToClose_tDBOutput_2.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_2 = null;
                if ((pstmtInsertToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_2")) != null) {
                    pstmtInsertToClose_tDBOutput_2.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_2") == null){
            java.sql.Connection ctn_tDBOutput_2 = null;
            if((ctn_tDBOutput_2 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_2")) != null){
                try {
                    ctn_tDBOutput_2.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_2) {
                    String errorMessage_tDBOutput_2 = "failed to close the connection in tDBOutput_2 :" + sqlEx_tDBOutput_2.getMessage();
                    System.err.println(errorMessage_tDBOutput_2);
                }
            }
        }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfTrimestral_K2_U_Regional_0Struct implements routines.system.IPersistableRow<copyOfTrimestral_K2_U_Regional_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfTrimestral_K2_U_Regional_0Struct other = (copyOfTrimestral_K2_U_Regional_0Struct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfTrimestral_K2_U_Regional_0Struct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfTrimestral_K2_U_Regional_0Struct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfTrimestral_K2_U_Regional_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
copyOfTrimestral_K2_U_Regional_0Struct copyOfTrimestral_K2_U_Regional_0 = new copyOfTrimestral_K2_U_Regional_0Struct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfTrimestral_K2_U_Regional_0");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





        int updateKeyCount_tDBOutput_3 = 1;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;

int rejectedCount_tDBOutput_3=0;

String tableName_tDBOutput_3 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_3 = false;

java.util.Calendar calendar_tDBOutput_3 = java.util.Calendar.getInstance();
calendar_tDBOutput_3.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_3 = calendar_tDBOutput_3.getTime().getTime();
calendar_tDBOutput_3.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_3 = calendar_tDBOutput_3.getTime().getTime();
long date_tDBOutput_3;

java.sql.Connection conn_tDBOutput_3 = null;
		String dbProperties_tDBOutput_3 = "noDatetimeStringSync=true";
		String url_tDBOutput_3 = null;
		if(dbProperties_tDBOutput_3 == null || dbProperties_tDBOutput_3.trim().length() == 0) {
			url_tDBOutput_3 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_3 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_3.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_3 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_3 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_3;
		}
		String driverClass_tDBOutput_3 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_3 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_3 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:9zJznhGXju7DNoEQOiS9EyM9ypLT1T0HNOMIl4ArJgB2+vbfimptLJM=");

		String dbPwd_tDBOutput_3 = decryptedPassword_tDBOutput_3;
		java.lang.Class.forName(driverClass_tDBOutput_3);
		
		conn_tDBOutput_3 = java.sql.DriverManager.getConnection(url_tDBOutput_3, dbUser_tDBOutput_3, dbPwd_tDBOutput_3);
		
	
	resourceMap.put("conn_tDBOutput_3", conn_tDBOutput_3);
        conn_tDBOutput_3.setAutoCommit(false);
        int commitEvery_tDBOutput_3 = 10000;
        int commitCounter_tDBOutput_3 = 0;

int count_tDBOutput_3=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    String insert_tDBOutput_3 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(insert_tDBOutput_3);
	    resourceMap.put("pstmtInsert_tDBOutput_3", pstmtInsert_tDBOutput_3);
	    String update_tDBOutput_3 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmtUpdate_tDBOutput_3", pstmtUpdate_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfTrimestral_K2_U_Regional_0Struct copyOfTrimestral_K2_U_Regional_0_tmp = new copyOfTrimestral_K2_U_Regional_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";

	
		int tos_count_tDBInput_3 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_3 = java.util.Calendar.getInstance();
		    calendar_tDBInput_3.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_3 = calendar_tDBInput_3.getTime();
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				String driverClass_tDBInput_3 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_3 = java.lang.Class.forName(driverClass_tDBInput_3);
				String dbUser_tDBInput_3 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_3 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:8m0Y+HRe9eRKeIJEoTgcRaVIKW8o7yd1tLUIqzSbY5JS/Cx8+1FG5JA=");
				
				String dbPwd_tDBInput_3 = decryptedPassword_tDBInput_3;
				
				String url_tDBInput_3 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_3 = java.sql.DriverManager.getConnection(url_tDBInput_3,dbUser_tDBInput_3,dbPwd_tDBInput_3);
		        
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (1) as k_Dispersion\n,((SELECT c.PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO = 'RE"
+"GIONAL' )*1) Valor_Total\nfrom modulo_orden_personal a\nwhere\na.REGION <>8\nand FECHALEGALIZATION >= (select (CONCAT(CO"
+"D_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO,"
+"COD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'U'\nand FRECUENCIA<>3\n"
+"and ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546, \n1547,\n1548, \n15"
+"49,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n1569,\n1571,\n1577, \n"
+"1578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595, \n1596, \n1598,\n16"
+"02,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n1629,\n1630, \n1631,"
+" \n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658, \n1660, \n1662, \n"
+"1663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n1699,\n1701,\n1704,"
+"\n1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733, \n1735, \n1736, \n1"
+"752, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);
		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row3.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row3.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row3.DESC_PROGRAMA = null;
							} else {
	                         		
        	row3.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 2, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row3.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row3.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 3, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row3.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row3.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 4, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 5) {
								row3.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row3.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 5, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 6) {
								row3.TAREA = null;
							} else {
	                         		
        	row3.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 6, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 7) {
								row3.DESCTAREA = null;
							} else {
	                         		
        	row3.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 7, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 8) {
								row3.ORDEN = null;
							} else {
	                         		
        	row3.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_3, 8, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 9) {
								row3.CICLO = null;
							} else {
	                         		
        	row3.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 9, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 10) {
								row3.SERVICIO = null;
							} else {
	                         		
        	row3.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 10, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 11) {
								row3.ESTADO = null;
							} else {
	                         		
        	row3.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 11, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 12) {
								row3.DESC_ESTADO = null;
							} else {
	                         		
        	row3.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 12, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 13) {
								row3.FECHACREATED = null;
							} else {
	                         		
        	row3.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_3, 13, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 14) {
								row3.OOPEN = null;
							} else {
	                         		
        	row3.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_3, 14, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 15) {
								row3.FECHALEGALIZATION = null;
							} else {
	                         		
        	row3.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_3, 15, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 16) {
								row3.HORALEGALIZATION = null;
							} else {
	                         		
        	row3.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_3, 16, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 17) {
								row3.INSTALACION = null;
							} else {
	                         		
        	row3.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_3, 17, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 18) {
								row3.URBANO_RURAL = null;
							} else {
	                         		
        	row3.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_3, 18, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 19) {
								row3.ORTRINUR = null;
							} else {
	                         		
        	row3.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_3, 19, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 20) {
								row3.DESCRIPCIONA = null;
							} else {
	                         		
        	row3.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 20, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 21) {
								row3.CIUDAD = null;
							} else {
	                         		
        	row3.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_3, 21, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 22) {
								row3.CMRUDESC = null;
							} else {
	                         		
        	row3.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_3, 22, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 23) {
								row3.REGION = null;
							} else {
	                         		
        	row3.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_3, 23, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 24) {
								row3.REGNDESC = null;
							} else {
	                         		
        	row3.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_3, 24, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 25) {
								row3.DEPACODI = null;
							} else {
	                         		
        	row3.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_3, 25, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 26) {
								row3.CODIGORESPUESTA = null;
							} else {
	                         		
        	row3.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 26, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 27) {
								row3.RESPUESTATENCION = null;
							} else {
	                         		
        	row3.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_3, 27, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 28) {
								row3.X = null;
							} else {
	                         		
        	row3.X = routines.system.JDBCUtil.getString(rs_tDBInput_3, 28, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 29) {
								row3.Y = null;
							} else {
	                         		
        	row3.Y = routines.system.JDBCUtil.getString(rs_tDBInput_3, 29, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 30) {
								row3.ANO = null;
							} else {
	                         		
        	row3.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 30, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 31) {
								row3.MES = null;
							} else {
	                         		
        	row3.MES = routines.system.JDBCUtil.getString(rs_tDBInput_3, 31, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 32) {
								row3.DIA = null;
							} else {
	                         		
        	row3.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 32, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 33) {
								row3.DESC_CNA = null;
							} else {
	                         		
        	row3.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 33, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 34) {
								row3.ORDEN_OPEN = null;
							} else {
	                         		
        	row3.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_3, 34, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 35) {
								row3.ACTIVIDAD = null;
							} else {
	                         		
        	row3.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_3, 35, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 36) {
								row3.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row3.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_3, 36, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 37) {
								row3.FRECUENCIA = null;
							} else {
	                         		
        	row3.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 37, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 38) {
								row3.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row3.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_3, 38, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 39) {
								row3.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row3.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_3, 39, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 40) {
								row3.ESTADO_CORTE = null;
							} else {
	                         		
        	row3.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_3, 40, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 41) {
								row3.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row3.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_3, 41, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 42) {
								row3.ROUTE_ID = null;
							} else {
	                         		
        	row3.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_3, 42, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 43) {
								row3.NAME_ = null;
							} else {
	                         		
        	row3.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_3, 43, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 44) {
								row3.NUMBER_ID = null;
							} else {
	                         		
        	row3.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_3, 44, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 45) {
								row3.k_Dispersion = null;
							} else {
	                         		
        	row3.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_3, 45, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 46) {
								row3.Valor_Total = null;
							} else {
	                         		
        	row3.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_3, 46, false);
		                    }
					

 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row3");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_3 = false;
		  boolean mainRowRejected_tMap_3 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

copyOfTrimestral_K2_U_Regional_0 = null;


// # Output table : 'copyOfTrimestral_K2_U_Regional_0'
copyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_PROGRAMA = row3.CODIGO_PROGRAMA;
copyOfTrimestral_K2_U_Regional_0_tmp.DESC_PROGRAMA = row3.DESC_PROGRAMA;
copyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_EQUIPO = row3.CODIGO_EQUIPO;
copyOfTrimestral_K2_U_Regional_0_tmp.EQUIPO_TRABAJO = row3.EQUIPO_TRABAJO;
copyOfTrimestral_K2_U_Regional_0_tmp.UNIDAD_OPERATIVA = row3.UNIDAD_OPERATIVA;
copyOfTrimestral_K2_U_Regional_0_tmp.NAME_ = row3.NAME_;
copyOfTrimestral_K2_U_Regional_0_tmp.NUMBER_ID = row3.NUMBER_ID;
copyOfTrimestral_K2_U_Regional_0_tmp.TAREA = row3.TAREA;
copyOfTrimestral_K2_U_Regional_0_tmp.DESCTAREA = row3.DESCTAREA;
copyOfTrimestral_K2_U_Regional_0_tmp.ORDEN = row3.ORDEN;
copyOfTrimestral_K2_U_Regional_0_tmp.CICLO = row3.CICLO;
copyOfTrimestral_K2_U_Regional_0_tmp.SERVICIO = row3.SERVICIO;
copyOfTrimestral_K2_U_Regional_0_tmp.ESTADO = row3.ESTADO;
copyOfTrimestral_K2_U_Regional_0_tmp.DESC_ESTADO = row3.DESC_ESTADO;
copyOfTrimestral_K2_U_Regional_0_tmp.FECHACREATED = row3.FECHACREATED;
copyOfTrimestral_K2_U_Regional_0_tmp.OOPEN = row3.OOPEN;
copyOfTrimestral_K2_U_Regional_0_tmp.FECHALEGALIZATION = row3.FECHALEGALIZATION;
copyOfTrimestral_K2_U_Regional_0_tmp.HORALEGALIZATION = row3.HORALEGALIZATION;
copyOfTrimestral_K2_U_Regional_0_tmp.INSTALACION = row3.INSTALACION;
copyOfTrimestral_K2_U_Regional_0_tmp.URBANO_RURAL = row3.URBANO_RURAL;
copyOfTrimestral_K2_U_Regional_0_tmp.ORTRINUR = row3.ORTRINUR;
copyOfTrimestral_K2_U_Regional_0_tmp.DESCRIPCIONA = row3.DESCRIPCIONA;
copyOfTrimestral_K2_U_Regional_0_tmp.CIUDAD = row3.CIUDAD;
copyOfTrimestral_K2_U_Regional_0_tmp.CMRUDESC = row3.CMRUDESC;
copyOfTrimestral_K2_U_Regional_0_tmp.REGION = row3.REGION;
copyOfTrimestral_K2_U_Regional_0_tmp.REGNDESC = row3.REGNDESC;
copyOfTrimestral_K2_U_Regional_0_tmp.DEPACODI = row3.DEPACODI;
copyOfTrimestral_K2_U_Regional_0_tmp.CODIGORESPUESTA = row3.CODIGORESPUESTA;
copyOfTrimestral_K2_U_Regional_0_tmp.RESPUESTATENCION = row3.RESPUESTATENCION;
copyOfTrimestral_K2_U_Regional_0_tmp.X = row3.X;
copyOfTrimestral_K2_U_Regional_0_tmp.Y = row3.Y;
copyOfTrimestral_K2_U_Regional_0_tmp.ANO = row3.ANO;
copyOfTrimestral_K2_U_Regional_0_tmp.MES = row3.MES;
copyOfTrimestral_K2_U_Regional_0_tmp.DIA = row3.DIA;
copyOfTrimestral_K2_U_Regional_0_tmp.DESC_CNA = row3.DESC_CNA;
copyOfTrimestral_K2_U_Regional_0_tmp.ORDEN_OPEN = row3.ORDEN_OPEN;
copyOfTrimestral_K2_U_Regional_0_tmp.ACTIVIDAD = row3.ACTIVIDAD;
copyOfTrimestral_K2_U_Regional_0_tmp.TIPO_ACTIVIDAD = row3.TIPO_ACTIVIDAD;
copyOfTrimestral_K2_U_Regional_0_tmp.DESC_ACTIVIDAD = row3.DESC_ACTIVIDAD;
copyOfTrimestral_K2_U_Regional_0_tmp.FRECUENCIA = row3.FRECUENCIA;
copyOfTrimestral_K2_U_Regional_0_tmp.CUENTAS_VENCIDAS = row3.CUENTAS_VENCIDAS;
copyOfTrimestral_K2_U_Regional_0_tmp.SALDO_CUENTAS_VENCIDAS = row3.SALDO_CUENTAS_VENCIDAS;
copyOfTrimestral_K2_U_Regional_0_tmp.ESTADO_CORTE = row3.ESTADO_CORTE;
copyOfTrimestral_K2_U_Regional_0_tmp.ROUTE_ID = row3.ROUTE_ID;
copyOfTrimestral_K2_U_Regional_0_tmp.k_Dispersion = row3.k_Dispersion;
copyOfTrimestral_K2_U_Regional_0_tmp.Valor_Total = row3.Valor_Total;
copyOfTrimestral_K2_U_Regional_0 = copyOfTrimestral_K2_U_Regional_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "copyOfTrimestral_K2_U_Regional_0"
if(copyOfTrimestral_K2_U_Regional_0 != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfTrimestral_K2_U_Regional_0");
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(copyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, copyOfTrimestral_K2_U_Regional_0.ORDEN);
}

            int checkCount_tDBOutput_3 = -1;
            try (java.sql.ResultSet rs_tDBOutput_3 = pstmt_tDBOutput_3.executeQuery()) {
                while(rs_tDBOutput_3.next()) {
                    checkCount_tDBOutput_3 = rs_tDBOutput_3.getInt(1);
                }
            }
            if(checkCount_tDBOutput_3 > 0) {
                        if(copyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(1, copyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(2, copyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_3.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(3, copyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(4, copyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_3.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(5, copyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtUpdate_tDBOutput_3.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(6, copyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_3.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(7, copyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtUpdate_tDBOutput_3.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(8, copyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtUpdate_tDBOutput_3.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(9, copyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtUpdate_tDBOutput_3.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(10, copyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtUpdate_tDBOutput_3.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(11, copyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtUpdate_tDBOutput_3.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(12, copyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_3.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(13, copyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtUpdate_tDBOutput_3.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(14, copyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtUpdate_tDBOutput_3.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(15, copyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_3.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(16, copyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_3.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(17, copyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtUpdate_tDBOutput_3.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(18, copyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_3.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(19, copyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtUpdate_tDBOutput_3.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(20, copyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_3.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(21, copyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtUpdate_tDBOutput_3.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(22, copyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtUpdate_tDBOutput_3.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(23, copyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtUpdate_tDBOutput_3.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(24, copyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtUpdate_tDBOutput_3.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(25, copyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtUpdate_tDBOutput_3.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(26, copyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_3.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(27, copyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_3.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(28, copyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtUpdate_tDBOutput_3.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(29, copyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtUpdate_tDBOutput_3.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(30, copyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtUpdate_tDBOutput_3.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(31, copyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtUpdate_tDBOutput_3.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(32, copyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtUpdate_tDBOutput_3.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(33, copyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtUpdate_tDBOutput_3.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(34, copyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_3.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(35, copyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_3.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(36, copyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_3.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(37, copyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_3.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(38, copyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_3.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(39, copyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_3.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(40, copyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_3.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(41, copyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_3.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(42, copyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_3.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(43, copyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtUpdate_tDBOutput_3.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(44, copyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtUpdate_tDBOutput_3.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(45, copyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtUpdate_tDBOutput_3.setNull(46 + count_tDBOutput_3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(46 + count_tDBOutput_3, copyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                try {
                    updatedCount_tDBOutput_3 = updatedCount_tDBOutput_3 + pstmtUpdate_tDBOutput_3.executeUpdate();
                    nb_line_tDBOutput_3++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_3 = true;
                        nb_line_tDBOutput_3++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(1, copyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(2, copyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_3.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(3, copyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(4, copyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_3.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(5, copyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtInsert_tDBOutput_3.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(6, copyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_3.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(7, copyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtInsert_tDBOutput_3.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(8, copyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtInsert_tDBOutput_3.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(9, copyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtInsert_tDBOutput_3.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(10, copyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtInsert_tDBOutput_3.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(11, copyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtInsert_tDBOutput_3.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(12, copyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtInsert_tDBOutput_3.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(13, copyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_3.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(14, copyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtInsert_tDBOutput_3.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(15, copyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtInsert_tDBOutput_3.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(16, copyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_3.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(17, copyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_3.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(18, copyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtInsert_tDBOutput_3.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(19, copyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_3.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(20, copyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtInsert_tDBOutput_3.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(21, copyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_3.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(22, copyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtInsert_tDBOutput_3.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(23, copyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtInsert_tDBOutput_3.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(24, copyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtInsert_tDBOutput_3.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(25, copyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtInsert_tDBOutput_3.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(26, copyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtInsert_tDBOutput_3.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(27, copyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_3.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(28, copyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_3.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(29, copyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtInsert_tDBOutput_3.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(30, copyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtInsert_tDBOutput_3.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(31, copyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtInsert_tDBOutput_3.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(32, copyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtInsert_tDBOutput_3.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(33, copyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtInsert_tDBOutput_3.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(34, copyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtInsert_tDBOutput_3.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(35, copyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_3.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(36, copyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_3.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(37, copyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_3.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(38, copyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_3.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(39, copyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_3.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(40, copyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_3.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(41, copyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_3.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(42, copyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_3.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(43, copyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_3.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(44, copyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtInsert_tDBOutput_3.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(45, copyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtInsert_tDBOutput_3.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(46, copyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_3 = insertedCount_tDBOutput_3 + pstmtInsert_tDBOutput_3.executeUpdate();
                    nb_line_tDBOutput_3++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_3 = true;
                        nb_line_tDBOutput_3++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_3) {
            }
                commitCounter_tDBOutput_3++;

                if(commitEvery_tDBOutput_3 <= commitCounter_tDBOutput_3) {

                    conn_tDBOutput_3.commit();
                    commitCounter_tDBOutput_3=0;

                }


 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "copyOfTrimestral_K2_U_Regional_0"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
		if(conn_tDBInput_3 != null && !conn_tDBInput_3.isClosed()) {
			
			conn_tDBInput_3.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
		


 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	



        if(pstmtUpdate_tDBOutput_3 != null){
            pstmtUpdate_tDBOutput_3.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_3");
        }
        if(pstmtInsert_tDBOutput_3 != null){
            pstmtInsert_tDBOutput_3.close();
            resourceMap.remove("pstmtInsert_tDBOutput_3");
        }
        if(pstmt_tDBOutput_3 != null) {
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);
    	if (commitCounter_tDBOutput_3 > 0) {
    		
    		conn_tDBOutput_3.commit();
    		
    	}
    		
		
    	conn_tDBOutput_3 .close();
    	
    	resourceMap.put("finish_tDBOutput_3", true);
    	

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfTrimestral_K2_U_Regional_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tDBInput_4Process(globalMap);



/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_3 = null;
                if ((pstmtUpdateToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_3")) != null) {
                    pstmtUpdateToClose_tDBOutput_3.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_3 = null;
                if ((pstmtInsertToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_3")) != null) {
                    pstmtInsertToClose_tDBOutput_3.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_3") == null){
            java.sql.Connection ctn_tDBOutput_3 = null;
            if((ctn_tDBOutput_3 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_3")) != null){
                try {
                    ctn_tDBOutput_3.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_3) {
                    String errorMessage_tDBOutput_3 = "failed to close the connection in tDBOutput_3 :" + sqlEx_tDBOutput_3.getMessage();
                    System.err.println(errorMessage_tDBOutput_3);
                }
            }
        }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfTrimestral_K2_U_Regional_0Struct implements routines.system.IPersistableRow<copyOfcopyOfTrimestral_K2_U_Regional_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfTrimestral_K2_U_Regional_0Struct other = (copyOfcopyOfTrimestral_K2_U_Regional_0Struct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row4Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row4Struct row4 = new row4Struct();
copyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfTrimestral_K2_U_Regional_0 = new copyOfcopyOfTrimestral_K2_U_Regional_0Struct();





	
	/**
	 * [tDBOutput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_4", false);
		start_Hash.put("tDBOutput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfTrimestral_K2_U_Regional_0");
					}
				
		int tos_count_tDBOutput_4 = 0;
		





        int updateKeyCount_tDBOutput_4 = 1;
        if(updateKeyCount_tDBOutput_4 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_4 = 0;
int nb_line_update_tDBOutput_4 = 0;
int nb_line_inserted_tDBOutput_4 = 0;
int nb_line_deleted_tDBOutput_4 = 0;
int nb_line_rejected_tDBOutput_4 = 0;

int deletedCount_tDBOutput_4=0;
int updatedCount_tDBOutput_4=0;
int insertedCount_tDBOutput_4=0;

int rejectedCount_tDBOutput_4=0;

String tableName_tDBOutput_4 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_4 = false;

java.util.Calendar calendar_tDBOutput_4 = java.util.Calendar.getInstance();
calendar_tDBOutput_4.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_4 = calendar_tDBOutput_4.getTime().getTime();
calendar_tDBOutput_4.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_4 = calendar_tDBOutput_4.getTime().getTime();
long date_tDBOutput_4;

java.sql.Connection conn_tDBOutput_4 = null;
		String dbProperties_tDBOutput_4 = "noDatetimeStringSync=true";
		String url_tDBOutput_4 = null;
		if(dbProperties_tDBOutput_4 == null || dbProperties_tDBOutput_4.trim().length() == 0) {
			url_tDBOutput_4 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_4 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_4.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_4 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_4 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_4;
		}
		String driverClass_tDBOutput_4 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_4 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_4 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:S3OjG8UADGcBCgxor8tkLHJSgBSJqB/W+CXGEujNcZbFbeVcmD82KQM=");

		String dbPwd_tDBOutput_4 = decryptedPassword_tDBOutput_4;
		java.lang.Class.forName(driverClass_tDBOutput_4);
		
		conn_tDBOutput_4 = java.sql.DriverManager.getConnection(url_tDBOutput_4, dbUser_tDBOutput_4, dbPwd_tDBOutput_4);
		
	
	resourceMap.put("conn_tDBOutput_4", conn_tDBOutput_4);
        conn_tDBOutput_4.setAutoCommit(false);
        int commitEvery_tDBOutput_4 = 10000;
        int commitCounter_tDBOutput_4 = 0;

int count_tDBOutput_4=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);
	    String insert_tDBOutput_4 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(insert_tDBOutput_4);
	    resourceMap.put("pstmtInsert_tDBOutput_4", pstmtInsert_tDBOutput_4);
	    String update_tDBOutput_4 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(update_tDBOutput_4);
	    resourceMap.put("pstmtUpdate_tDBOutput_4", pstmtUpdate_tDBOutput_4);
	    

 



/**
 * [tDBOutput_4 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row4");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfTrimestral_K2_U_Regional_0_tmp = new copyOfcopyOfTrimestral_K2_U_Regional_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";

	
		int tos_count_tDBInput_4 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_4 = java.util.Calendar.getInstance();
		    calendar_tDBInput_4.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_4 = calendar_tDBInput_4.getTime();
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				String driverClass_tDBInput_4 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_4 = java.lang.Class.forName(driverClass_tDBInput_4);
				String dbUser_tDBInput_4 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_4 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:cFk+A7Xjb5EFyNzkwalY7r+Wv0FHPxz9AsnNeie2kLJAJX5vh+lVhKM=");
				
				String dbPwd_tDBInput_4 = decryptedPassword_tDBInput_4;
				
				String url_tDBInput_4 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_4 = java.sql.DriverManager.getConnection(url_tDBInput_4,dbUser_tDBInput_4,dbPwd_tDBInput_4);
		        
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (1) as k_Dispersion\n,((SELECT c.RURAL_PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO"
+" = 'REGIONAL' )*1) Valor_Total\nfrom modulo_orden_personal a\nwhere\na.REGION <>8\nand FECHALEGALIZATION >= (select (CON"
+"CAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(CO"
+"D_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'R'\nand FRECUENCI"
+"A<>3\nand ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546, \n1547,\n1548"
+", \n1549,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n1569,\n1571,\n15"
+"77, \n1578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595, \n1596, \n159"
+"8,\n1602,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n1629,\n1630, "
+"\n1631, \n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658, \n1660, \n16"
+"62, \n1663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n1699,\n1701,\n"
+"1704,\n1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733, \n1735, \n173"
+"6, \n1752, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);
		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row4.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row4.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row4.DESC_PROGRAMA = null;
							} else {
	                         		
        	row4.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row4.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row4.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 3, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row4.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row4.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 4, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row4.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row4.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 5, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row4.TAREA = null;
							} else {
	                         		
        	row4.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 6, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 7) {
								row4.DESCTAREA = null;
							} else {
	                         		
        	row4.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 7, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 8) {
								row4.ORDEN = null;
							} else {
	                         		
        	row4.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_4, 8, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 9) {
								row4.CICLO = null;
							} else {
	                         		
        	row4.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 9, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 10) {
								row4.SERVICIO = null;
							} else {
	                         		
        	row4.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 10, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 11) {
								row4.ESTADO = null;
							} else {
	                         		
        	row4.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 11, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 12) {
								row4.DESC_ESTADO = null;
							} else {
	                         		
        	row4.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 12, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 13) {
								row4.FECHACREATED = null;
							} else {
	                         		
        	row4.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_4, 13, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 14) {
								row4.OOPEN = null;
							} else {
	                         		
        	row4.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_4, 14, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 15) {
								row4.FECHALEGALIZATION = null;
							} else {
	                         		
        	row4.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_4, 15, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 16) {
								row4.HORALEGALIZATION = null;
							} else {
	                         		
        	row4.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_4, 16, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 17) {
								row4.INSTALACION = null;
							} else {
	                         		
        	row4.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_4, 17, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 18) {
								row4.URBANO_RURAL = null;
							} else {
	                         		
        	row4.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_4, 18, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 19) {
								row4.ORTRINUR = null;
							} else {
	                         		
        	row4.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_4, 19, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 20) {
								row4.DESCRIPCIONA = null;
							} else {
	                         		
        	row4.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 20, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 21) {
								row4.CIUDAD = null;
							} else {
	                         		
        	row4.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 21, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 22) {
								row4.CMRUDESC = null;
							} else {
	                         		
        	row4.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_4, 22, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 23) {
								row4.REGION = null;
							} else {
	                         		
        	row4.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_4, 23, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 24) {
								row4.REGNDESC = null;
							} else {
	                         		
        	row4.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_4, 24, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 25) {
								row4.DEPACODI = null;
							} else {
	                         		
        	row4.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_4, 25, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 26) {
								row4.CODIGORESPUESTA = null;
							} else {
	                         		
        	row4.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 26, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 27) {
								row4.RESPUESTATENCION = null;
							} else {
	                         		
        	row4.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_4, 27, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 28) {
								row4.X = null;
							} else {
	                         		
        	row4.X = routines.system.JDBCUtil.getString(rs_tDBInput_4, 28, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 29) {
								row4.Y = null;
							} else {
	                         		
        	row4.Y = routines.system.JDBCUtil.getString(rs_tDBInput_4, 29, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 30) {
								row4.ANO = null;
							} else {
	                         		
        	row4.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 30, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 31) {
								row4.MES = null;
							} else {
	                         		
        	row4.MES = routines.system.JDBCUtil.getString(rs_tDBInput_4, 31, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 32) {
								row4.DIA = null;
							} else {
	                         		
        	row4.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 32, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 33) {
								row4.DESC_CNA = null;
							} else {
	                         		
        	row4.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 33, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 34) {
								row4.ORDEN_OPEN = null;
							} else {
	                         		
        	row4.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_4, 34, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 35) {
								row4.ACTIVIDAD = null;
							} else {
	                         		
        	row4.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 35, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 36) {
								row4.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row4.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 36, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 37) {
								row4.FRECUENCIA = null;
							} else {
	                         		
        	row4.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 37, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 38) {
								row4.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row4.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_4, 38, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 39) {
								row4.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row4.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_4, 39, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 40) {
								row4.ESTADO_CORTE = null;
							} else {
	                         		
        	row4.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_4, 40, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 41) {
								row4.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row4.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 41, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 42) {
								row4.ROUTE_ID = null;
							} else {
	                         		
        	row4.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_4, 42, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 43) {
								row4.NAME_ = null;
							} else {
	                         		
        	row4.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_4, 43, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 44) {
								row4.NUMBER_ID = null;
							} else {
	                         		
        	row4.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_4, 44, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 45) {
								row4.k_Dispersion = null;
							} else {
	                         		
        	row4.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_4, 45, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 46) {
								row4.Valor_Total = null;
							} else {
	                         		
        	row4.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_4, 46, false);
		                    }
					

 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row4");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_4 = false;
		  boolean mainRowRejected_tMap_4 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfTrimestral_K2_U_Regional_0 = null;


// # Output table : 'copyOfcopyOfTrimestral_K2_U_Regional_0'
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_PROGRAMA = row4.CODIGO_PROGRAMA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_PROGRAMA = row4.DESC_PROGRAMA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_EQUIPO = row4.CODIGO_EQUIPO;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.EQUIPO_TRABAJO = row4.EQUIPO_TRABAJO;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.UNIDAD_OPERATIVA = row4.UNIDAD_OPERATIVA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NAME_ = row4.NAME_;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NUMBER_ID = row4.NUMBER_ID;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TAREA = row4.TAREA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCTAREA = row4.DESCTAREA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN = row4.ORDEN;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CICLO = row4.CICLO;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SERVICIO = row4.SERVICIO;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO = row4.ESTADO;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ESTADO = row4.DESC_ESTADO;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHACREATED = row4.FECHACREATED;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.OOPEN = row4.OOPEN;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHALEGALIZATION = row4.FECHALEGALIZATION;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.HORALEGALIZATION = row4.HORALEGALIZATION;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.INSTALACION = row4.INSTALACION;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.URBANO_RURAL = row4.URBANO_RURAL;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORTRINUR = row4.ORTRINUR;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCRIPCIONA = row4.DESCRIPCIONA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CIUDAD = row4.CIUDAD;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CMRUDESC = row4.CMRUDESC;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGION = row4.REGION;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGNDESC = row4.REGNDESC;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DEPACODI = row4.DEPACODI;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGORESPUESTA = row4.CODIGORESPUESTA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.RESPUESTATENCION = row4.RESPUESTATENCION;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.X = row4.X;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Y = row4.Y;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ANO = row4.ANO;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.MES = row4.MES;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DIA = row4.DIA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_CNA = row4.DESC_CNA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN_OPEN = row4.ORDEN_OPEN;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ACTIVIDAD = row4.ACTIVIDAD;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TIPO_ACTIVIDAD = row4.TIPO_ACTIVIDAD;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ACTIVIDAD = row4.DESC_ACTIVIDAD;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FRECUENCIA = row4.FRECUENCIA;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CUENTAS_VENCIDAS = row4.CUENTAS_VENCIDAS;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SALDO_CUENTAS_VENCIDAS = row4.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO_CORTE = row4.ESTADO_CORTE;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ROUTE_ID = row4.ROUTE_ID;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.k_Dispersion = row4.k_Dispersion;
copyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Valor_Total = row4.Valor_Total;
copyOfcopyOfTrimestral_K2_U_Regional_0 = copyOfcopyOfTrimestral_K2_U_Regional_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfTrimestral_K2_U_Regional_0"
if(copyOfcopyOfTrimestral_K2_U_Regional_0 != null) { 



	
	/**
	 * [tDBOutput_4 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfTrimestral_K2_U_Regional_0");
					}
					



        whetherReject_tDBOutput_4 = false;
                    if(copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_4.setString(1, copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

            int checkCount_tDBOutput_4 = -1;
            try (java.sql.ResultSet rs_tDBOutput_4 = pstmt_tDBOutput_4.executeQuery()) {
                while(rs_tDBOutput_4.next()) {
                    checkCount_tDBOutput_4 = rs_tDBOutput_4.getInt(1);
                }
            }
            if(checkCount_tDBOutput_4 > 0) {
                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(1, copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(2, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_4.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(3, copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_4.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(4, copyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(5, copyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtUpdate_tDBOutput_4.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(6, copyOfcopyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_4.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(7, copyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtUpdate_tDBOutput_4.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(8, copyOfcopyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtUpdate_tDBOutput_4.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(9, copyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtUpdate_tDBOutput_4.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(10, copyOfcopyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtUpdate_tDBOutput_4.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(11, copyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtUpdate_tDBOutput_4.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(12, copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_4.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(13, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtUpdate_tDBOutput_4.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(14, copyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtUpdate_tDBOutput_4.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(15, copyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_4.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(16, copyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_4.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(17, copyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtUpdate_tDBOutput_4.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(18, copyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_4.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(19, copyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtUpdate_tDBOutput_4.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(20, copyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_4.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(21, copyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtUpdate_tDBOutput_4.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(22, copyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtUpdate_tDBOutput_4.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(23, copyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtUpdate_tDBOutput_4.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(24, copyOfcopyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtUpdate_tDBOutput_4.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(25, copyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtUpdate_tDBOutput_4.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(26, copyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_4.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(27, copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_4.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(28, copyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtUpdate_tDBOutput_4.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(29, copyOfcopyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtUpdate_tDBOutput_4.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(30, copyOfcopyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtUpdate_tDBOutput_4.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(31, copyOfcopyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtUpdate_tDBOutput_4.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(32, copyOfcopyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtUpdate_tDBOutput_4.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(33, copyOfcopyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtUpdate_tDBOutput_4.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(34, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_4.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(35, copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_4.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(36, copyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_4.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(37, copyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_4.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(38, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_4.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(39, copyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_4.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(40, copyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_4.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(41, copyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_4.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(42, copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_4.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(43, copyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtUpdate_tDBOutput_4.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(44, copyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtUpdate_tDBOutput_4.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(45, copyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtUpdate_tDBOutput_4.setNull(46 + count_tDBOutput_4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_4.setString(46 + count_tDBOutput_4, copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                try {
                    updatedCount_tDBOutput_4 = updatedCount_tDBOutput_4 + pstmtUpdate_tDBOutput_4.executeUpdate();
                    nb_line_tDBOutput_4++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_4 = true;
                        nb_line_tDBOutput_4++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(1, copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_4.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(2, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_4.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(3, copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_4.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(4, copyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_4.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(5, copyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtInsert_tDBOutput_4.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(6, copyOfcopyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_4.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(7, copyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtInsert_tDBOutput_4.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(8, copyOfcopyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtInsert_tDBOutput_4.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(9, copyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtInsert_tDBOutput_4.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(10, copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtInsert_tDBOutput_4.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(11, copyOfcopyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtInsert_tDBOutput_4.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(12, copyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtInsert_tDBOutput_4.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(13, copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_4.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(14, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtInsert_tDBOutput_4.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(15, copyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtInsert_tDBOutput_4.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(16, copyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_4.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(17, copyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_4.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(18, copyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtInsert_tDBOutput_4.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(19, copyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_4.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(20, copyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtInsert_tDBOutput_4.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(21, copyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_4.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(22, copyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtInsert_tDBOutput_4.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(23, copyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtInsert_tDBOutput_4.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(24, copyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtInsert_tDBOutput_4.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(25, copyOfcopyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtInsert_tDBOutput_4.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(26, copyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtInsert_tDBOutput_4.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(27, copyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_4.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(28, copyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_4.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(29, copyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtInsert_tDBOutput_4.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(30, copyOfcopyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtInsert_tDBOutput_4.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(31, copyOfcopyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtInsert_tDBOutput_4.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(32, copyOfcopyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtInsert_tDBOutput_4.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(33, copyOfcopyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtInsert_tDBOutput_4.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(34, copyOfcopyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtInsert_tDBOutput_4.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(35, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_4.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(36, copyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_4.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(37, copyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_4.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(38, copyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_4.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(39, copyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_4.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(40, copyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_4.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(41, copyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_4.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(42, copyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_4.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(43, copyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_4.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(44, copyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtInsert_tDBOutput_4.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(45, copyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtInsert_tDBOutput_4.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_4.setString(46, copyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_4 = insertedCount_tDBOutput_4 + pstmtInsert_tDBOutput_4.executeUpdate();
                    nb_line_tDBOutput_4++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_4 = true;
                        nb_line_tDBOutput_4++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_4) {
            }
                commitCounter_tDBOutput_4++;

                if(commitEvery_tDBOutput_4 <= commitCounter_tDBOutput_4) {

                    conn_tDBOutput_4.commit();
                    commitCounter_tDBOutput_4=0;

                }


 


	tos_count_tDBOutput_4++;

/**
 * [tDBOutput_4 main ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";

	

 



/**
 * [tDBOutput_4 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";

	

 



/**
 * [tDBOutput_4 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfTrimestral_K2_U_Regional_0"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
		if(conn_tDBInput_4 != null && !conn_tDBInput_4.isClosed()) {
			
			conn_tDBInput_4.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
		


 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row4");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tDBOutput_4 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";

	



        if(pstmtUpdate_tDBOutput_4 != null){
            pstmtUpdate_tDBOutput_4.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_4");
        }
        if(pstmtInsert_tDBOutput_4 != null){
            pstmtInsert_tDBOutput_4.close();
            resourceMap.remove("pstmtInsert_tDBOutput_4");
        }
        if(pstmt_tDBOutput_4 != null) {
            pstmt_tDBOutput_4.close();
            resourceMap.remove("pstmt_tDBOutput_4");
        }
    resourceMap.put("statementClosed_tDBOutput_4", true);
    	if (commitCounter_tDBOutput_4 > 0) {
    		
    		conn_tDBOutput_4.commit();
    		
    	}
    		
		
    	conn_tDBOutput_4 .close();
    	
    	resourceMap.put("finish_tDBOutput_4", true);
    	

	nb_line_deleted_tDBOutput_4=nb_line_deleted_tDBOutput_4+ deletedCount_tDBOutput_4;
	nb_line_update_tDBOutput_4=nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
	nb_line_inserted_tDBOutput_4=nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
	nb_line_rejected_tDBOutput_4=nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;
	
        globalMap.put("tDBOutput_4_NB_LINE",nb_line_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_UPDATED",nb_line_update_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_DELETED",nb_line_deleted_tDBOutput_4);
        globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfTrimestral_K2_U_Regional_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_4", true);
end_Hash.put("tDBOutput_4", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk4", 0, "ok");
				}
				tDBInput_5Process(globalMap);



/**
 * [tDBOutput_4 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tDBOutput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_4";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_4 = null;
                if ((pstmtUpdateToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_4")) != null) {
                    pstmtUpdateToClose_tDBOutput_4.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_4 = null;
                if ((pstmtInsertToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_4")) != null) {
                    pstmtInsertToClose_tDBOutput_4.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
                if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_4")) != null) {
                    pstmtToClose_tDBOutput_4.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_4") == null){
            java.sql.Connection ctn_tDBOutput_4 = null;
            if((ctn_tDBOutput_4 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_4")) != null){
                try {
                    ctn_tDBOutput_4.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_4) {
                    String errorMessage_tDBOutput_4 = "failed to close the connection in tDBOutput_4 :" + sqlEx_tDBOutput_4.getMessage();
                    System.err.println(errorMessage_tDBOutput_4);
                }
            }
        }
    }
 



/**
 * [tDBOutput_4 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other = (copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row5Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_5_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row5Struct row5 = new row5Struct();
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = new copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct();





	
	/**
	 * [tDBOutput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_5", false);
		start_Hash.put("tDBOutput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
					}
				
		int tos_count_tDBOutput_5 = 0;
		





        int updateKeyCount_tDBOutput_5 = 1;
        if(updateKeyCount_tDBOutput_5 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_5 = 0;
int nb_line_update_tDBOutput_5 = 0;
int nb_line_inserted_tDBOutput_5 = 0;
int nb_line_deleted_tDBOutput_5 = 0;
int nb_line_rejected_tDBOutput_5 = 0;

int deletedCount_tDBOutput_5=0;
int updatedCount_tDBOutput_5=0;
int insertedCount_tDBOutput_5=0;

int rejectedCount_tDBOutput_5=0;

String tableName_tDBOutput_5 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_5 = false;

java.util.Calendar calendar_tDBOutput_5 = java.util.Calendar.getInstance();
calendar_tDBOutput_5.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_5 = calendar_tDBOutput_5.getTime().getTime();
calendar_tDBOutput_5.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_5 = calendar_tDBOutput_5.getTime().getTime();
long date_tDBOutput_5;

java.sql.Connection conn_tDBOutput_5 = null;
		String dbProperties_tDBOutput_5 = "noDatetimeStringSync=true";
		String url_tDBOutput_5 = null;
		if(dbProperties_tDBOutput_5 == null || dbProperties_tDBOutput_5.trim().length() == 0) {
			url_tDBOutput_5 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_5 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_5.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_5 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_5 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_5;
		}
		String driverClass_tDBOutput_5 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_5 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_5 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:hGDKiMTyxxCiJjxjFCJyxZ72agxu2lHefYCk9+yng16+7QpJQl5xXJY=");

		String dbPwd_tDBOutput_5 = decryptedPassword_tDBOutput_5;
		java.lang.Class.forName(driverClass_tDBOutput_5);
		
		conn_tDBOutput_5 = java.sql.DriverManager.getConnection(url_tDBOutput_5, dbUser_tDBOutput_5, dbPwd_tDBOutput_5);
		
	
	resourceMap.put("conn_tDBOutput_5", conn_tDBOutput_5);
        conn_tDBOutput_5.setAutoCommit(false);
        int commitEvery_tDBOutput_5 = 10000;
        int commitCounter_tDBOutput_5 = 0;

int count_tDBOutput_5=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_5 = conn_tDBOutput_5.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_5", pstmt_tDBOutput_5);
	    String insert_tDBOutput_5 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_5 = conn_tDBOutput_5.prepareStatement(insert_tDBOutput_5);
	    resourceMap.put("pstmtInsert_tDBOutput_5", pstmtInsert_tDBOutput_5);
	    String update_tDBOutput_5 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_5 = conn_tDBOutput_5.prepareStatement(update_tDBOutput_5);
	    resourceMap.put("pstmtUpdate_tDBOutput_5", pstmtUpdate_tDBOutput_5);
	    

 



/**
 * [tDBOutput_5 begin ] stop
 */



	
	/**
	 * [tMap_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_5", false);
		start_Hash.put("tMap_5", System.currentTimeMillis());
		
	
	currentComponent="tMap_5";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row5");
					}
				
		int tos_count_tMap_5 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_5__Struct  {
}
Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp = new copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_5 begin ] stop
 */



	
	/**
	 * [tDBInput_5 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_5", false);
		start_Hash.put("tDBInput_5", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_5";

	
		int tos_count_tDBInput_5 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_5 = java.util.Calendar.getInstance();
		    calendar_tDBInput_5.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_5 = calendar_tDBInput_5.getTime();
		    int nb_line_tDBInput_5 = 0;
		    java.sql.Connection conn_tDBInput_5 = null;
				String driverClass_tDBInput_5 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_5 = java.lang.Class.forName(driverClass_tDBInput_5);
				String dbUser_tDBInput_5 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_5 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:kt9AGLT2VMZATmePX8FIU+/3RlZF9ULrn5haPBfpIDxscrdSzJiq8TE=");
				
				String dbPwd_tDBInput_5 = decryptedPassword_tDBInput_5;
				
				String url_tDBInput_5 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_5 = java.sql.DriverManager.getConnection(url_tDBInput_5,dbUser_tDBInput_5,dbPwd_tDBInput_5);
		        
		    
			java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

		    String dbquery_tDBInput_5 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (2) as k_Dispersion\n,((SELECT c.PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO = 'MA"
+"LAMBO' )*2) Valor_Total\nfrom modulo_orden_personal a\nwhere\n a.REGION= 8\nand FECHALEGALIZATION >= (select (CONCAT(COD"
+"_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO,C"
+"OD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'U'\nand FRECUENCIA= 3\na"
+"nd ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546, \n1547,\n1548, \n154"
+"9,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n1569,\n1571,\n1577, \n1"
+"578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595, \n1596, \n1598,\n160"
+"2,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n1629,\n1630, \n1631, "
+"\n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658, \n1660, \n1662, \n1"
+"663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n1699,\n1701,\n1704,\n"
+"1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733, \n1735, \n1736, \n17"
+"52, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_5_QUERY",dbquery_tDBInput_5);
		    java.sql.ResultSet rs_tDBInput_5 = null;

		    try {
		    	rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
		    	int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

		    String tmpContent_tDBInput_5 = null;
		    
		    
		    while (rs_tDBInput_5.next()) {
		        nb_line_tDBInput_5++;
		        
							if(colQtyInRs_tDBInput_5 < 1) {
								row5.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row5.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 1, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 2) {
								row5.DESC_PROGRAMA = null;
							} else {
	                         		
        	row5.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 2, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 3) {
								row5.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row5.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 3, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 4) {
								row5.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row5.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 4, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 5) {
								row5.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row5.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 5, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 6) {
								row5.TAREA = null;
							} else {
	                         		
        	row5.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 6, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 7) {
								row5.DESCTAREA = null;
							} else {
	                         		
        	row5.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 7, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 8) {
								row5.ORDEN = null;
							} else {
	                         		
        	row5.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_5, 8, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 9) {
								row5.CICLO = null;
							} else {
	                         		
        	row5.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 9, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 10) {
								row5.SERVICIO = null;
							} else {
	                         		
        	row5.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 10, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 11) {
								row5.ESTADO = null;
							} else {
	                         		
        	row5.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 11, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 12) {
								row5.DESC_ESTADO = null;
							} else {
	                         		
        	row5.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 12, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 13) {
								row5.FECHACREATED = null;
							} else {
	                         		
        	row5.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_5, 13, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 14) {
								row5.OOPEN = null;
							} else {
	                         		
        	row5.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_5, 14, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 15) {
								row5.FECHALEGALIZATION = null;
							} else {
	                         		
        	row5.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_5, 15, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 16) {
								row5.HORALEGALIZATION = null;
							} else {
	                         		
        	row5.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_5, 16, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 17) {
								row5.INSTALACION = null;
							} else {
	                         		
        	row5.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_5, 17, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 18) {
								row5.URBANO_RURAL = null;
							} else {
	                         		
        	row5.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_5, 18, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 19) {
								row5.ORTRINUR = null;
							} else {
	                         		
        	row5.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_5, 19, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 20) {
								row5.DESCRIPCIONA = null;
							} else {
	                         		
        	row5.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 20, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 21) {
								row5.CIUDAD = null;
							} else {
	                         		
        	row5.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_5, 21, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 22) {
								row5.CMRUDESC = null;
							} else {
	                         		
        	row5.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_5, 22, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 23) {
								row5.REGION = null;
							} else {
	                         		
        	row5.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_5, 23, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 24) {
								row5.REGNDESC = null;
							} else {
	                         		
        	row5.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_5, 24, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 25) {
								row5.DEPACODI = null;
							} else {
	                         		
        	row5.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_5, 25, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 26) {
								row5.CODIGORESPUESTA = null;
							} else {
	                         		
        	row5.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 26, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 27) {
								row5.RESPUESTATENCION = null;
							} else {
	                         		
        	row5.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_5, 27, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 28) {
								row5.X = null;
							} else {
	                         		
        	row5.X = routines.system.JDBCUtil.getString(rs_tDBInput_5, 28, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 29) {
								row5.Y = null;
							} else {
	                         		
        	row5.Y = routines.system.JDBCUtil.getString(rs_tDBInput_5, 29, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 30) {
								row5.ANO = null;
							} else {
	                         		
        	row5.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_5, 30, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 31) {
								row5.MES = null;
							} else {
	                         		
        	row5.MES = routines.system.JDBCUtil.getString(rs_tDBInput_5, 31, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 32) {
								row5.DIA = null;
							} else {
	                         		
        	row5.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 32, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 33) {
								row5.DESC_CNA = null;
							} else {
	                         		
        	row5.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 33, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 34) {
								row5.ORDEN_OPEN = null;
							} else {
	                         		
        	row5.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_5, 34, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 35) {
								row5.ACTIVIDAD = null;
							} else {
	                         		
        	row5.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_5, 35, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 36) {
								row5.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row5.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_5, 36, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 37) {
								row5.FRECUENCIA = null;
							} else {
	                         		
        	row5.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_5, 37, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 38) {
								row5.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row5.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_5, 38, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 39) {
								row5.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row5.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_5, 39, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 40) {
								row5.ESTADO_CORTE = null;
							} else {
	                         		
        	row5.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_5, 40, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 41) {
								row5.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row5.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_5, 41, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 42) {
								row5.ROUTE_ID = null;
							} else {
	                         		
        	row5.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_5, 42, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 43) {
								row5.NAME_ = null;
							} else {
	                         		
        	row5.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_5, 43, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 44) {
								row5.NUMBER_ID = null;
							} else {
	                         		
        	row5.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_5, 44, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 45) {
								row5.k_Dispersion = null;
							} else {
	                         		
        	row5.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_5, 45, false);
		                    }
							if(colQtyInRs_tDBInput_5 < 46) {
								row5.Valor_Total = null;
							} else {
	                         		
        	row5.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_5, 46, false);
		                    }
					

 



/**
 * [tDBInput_5 begin ] stop
 */
	
	/**
	 * [tDBInput_5 main ] start
	 */

	

	
	
	currentComponent="tDBInput_5";

	

 


	tos_count_tDBInput_5++;

/**
 * [tDBInput_5 main ] stop
 */
	
	/**
	 * [tDBInput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_5";

	

 



/**
 * [tDBInput_5 process_data_begin ] stop
 */

	
	/**
	 * [tMap_5 main ] start
	 */

	

	
	
	currentComponent="tMap_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row5");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_5 = false;
		  boolean mainRowRejected_tMap_5 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = null;


// # Output table : 'copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0'
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_PROGRAMA = row5.CODIGO_PROGRAMA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_PROGRAMA = row5.DESC_PROGRAMA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_EQUIPO = row5.CODIGO_EQUIPO;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.EQUIPO_TRABAJO = row5.EQUIPO_TRABAJO;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.UNIDAD_OPERATIVA = row5.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NAME_ = row5.NAME_;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NUMBER_ID = row5.NUMBER_ID;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TAREA = row5.TAREA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCTAREA = row5.DESCTAREA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN = row5.ORDEN;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CICLO = row5.CICLO;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SERVICIO = row5.SERVICIO;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO = row5.ESTADO;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ESTADO = row5.DESC_ESTADO;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHACREATED = row5.FECHACREATED;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.OOPEN = row5.OOPEN;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHALEGALIZATION = row5.FECHALEGALIZATION;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.HORALEGALIZATION = row5.HORALEGALIZATION;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.INSTALACION = row5.INSTALACION;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.URBANO_RURAL = row5.URBANO_RURAL;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORTRINUR = row5.ORTRINUR;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCRIPCIONA = row5.DESCRIPCIONA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CIUDAD = row5.CIUDAD;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CMRUDESC = row5.CMRUDESC;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGION = row5.REGION;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGNDESC = row5.REGNDESC;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DEPACODI = row5.DEPACODI;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGORESPUESTA = row5.CODIGORESPUESTA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.RESPUESTATENCION = row5.RESPUESTATENCION;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.X = row5.X;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Y = row5.Y;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ANO = row5.ANO;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.MES = row5.MES;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DIA = row5.DIA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_CNA = row5.DESC_CNA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN_OPEN = row5.ORDEN_OPEN;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ACTIVIDAD = row5.ACTIVIDAD;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TIPO_ACTIVIDAD = row5.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ACTIVIDAD = row5.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FRECUENCIA = row5.FRECUENCIA;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CUENTAS_VENCIDAS = row5.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SALDO_CUENTAS_VENCIDAS = row5.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO_CORTE = row5.ESTADO_CORTE;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ROUTE_ID = row5.ROUTE_ID;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.k_Dispersion = row5.k_Dispersion;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Valor_Total = row5.Valor_Total;
copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_5 = false;










 


	tos_count_tMap_5++;

/**
 * [tMap_5 main ] stop
 */
	
	/**
	 * [tMap_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0"
if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 != null) { 



	
	/**
	 * [tDBOutput_5 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
					}
					



        whetherReject_tDBOutput_5 = false;
                    if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmt_tDBOutput_5.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_5.setString(1, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

            int checkCount_tDBOutput_5 = -1;
            try (java.sql.ResultSet rs_tDBOutput_5 = pstmt_tDBOutput_5.executeQuery()) {
                while(rs_tDBOutput_5.next()) {
                    checkCount_tDBOutput_5 = rs_tDBOutput_5.getInt(1);
                }
            }
            if(checkCount_tDBOutput_5 > 0) {
                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_5.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(1, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_5.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(2, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_5.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(3, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_5.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(4, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_5.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(5, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtUpdate_tDBOutput_5.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(6, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_5.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(7, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtUpdate_tDBOutput_5.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(8, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtUpdate_tDBOutput_5.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(9, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtUpdate_tDBOutput_5.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(10, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtUpdate_tDBOutput_5.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(11, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtUpdate_tDBOutput_5.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(12, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_5.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(13, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtUpdate_tDBOutput_5.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(14, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtUpdate_tDBOutput_5.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(15, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_5.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(16, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_5.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(17, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtUpdate_tDBOutput_5.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(18, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_5.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(19, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtUpdate_tDBOutput_5.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(20, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_5.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(21, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtUpdate_tDBOutput_5.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(22, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtUpdate_tDBOutput_5.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(23, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtUpdate_tDBOutput_5.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(24, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtUpdate_tDBOutput_5.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(25, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtUpdate_tDBOutput_5.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(26, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_5.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(27, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_5.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(28, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtUpdate_tDBOutput_5.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(29, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtUpdate_tDBOutput_5.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(30, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtUpdate_tDBOutput_5.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(31, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtUpdate_tDBOutput_5.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(32, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtUpdate_tDBOutput_5.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(33, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtUpdate_tDBOutput_5.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(34, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_5.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(35, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_5.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(36, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_5.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(37, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_5.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(38, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_5.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(39, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_5.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(40, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_5.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(41, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_5.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(42, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_5.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(43, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtUpdate_tDBOutput_5.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(44, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtUpdate_tDBOutput_5.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(45, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtUpdate_tDBOutput_5.setNull(46 + count_tDBOutput_5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_5.setString(46 + count_tDBOutput_5, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                try {
                    updatedCount_tDBOutput_5 = updatedCount_tDBOutput_5 + pstmtUpdate_tDBOutput_5.executeUpdate();
                    nb_line_tDBOutput_5++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_5 = true;
                        nb_line_tDBOutput_5++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_5.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(1, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_5.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(2, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_5.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(3, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_5.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(4, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_5.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(5, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtInsert_tDBOutput_5.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(6, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_5.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(7, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtInsert_tDBOutput_5.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(8, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtInsert_tDBOutput_5.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(9, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtInsert_tDBOutput_5.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(10, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtInsert_tDBOutput_5.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(11, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtInsert_tDBOutput_5.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(12, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtInsert_tDBOutput_5.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(13, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_5.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(14, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtInsert_tDBOutput_5.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(15, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtInsert_tDBOutput_5.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(16, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_5.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(17, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_5.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(18, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtInsert_tDBOutput_5.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(19, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_5.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(20, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtInsert_tDBOutput_5.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(21, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_5.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(22, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtInsert_tDBOutput_5.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(23, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtInsert_tDBOutput_5.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(24, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtInsert_tDBOutput_5.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(25, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtInsert_tDBOutput_5.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(26, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtInsert_tDBOutput_5.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(27, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_5.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(28, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_5.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(29, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtInsert_tDBOutput_5.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(30, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtInsert_tDBOutput_5.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(31, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtInsert_tDBOutput_5.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(32, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtInsert_tDBOutput_5.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(33, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtInsert_tDBOutput_5.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(34, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtInsert_tDBOutput_5.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(35, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_5.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(36, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_5.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(37, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_5.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(38, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_5.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(39, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_5.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(40, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_5.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(41, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_5.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(42, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_5.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(43, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_5.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(44, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtInsert_tDBOutput_5.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(45, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtInsert_tDBOutput_5.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_5.setString(46, copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_5 = insertedCount_tDBOutput_5 + pstmtInsert_tDBOutput_5.executeUpdate();
                    nb_line_tDBOutput_5++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_5 = true;
                        nb_line_tDBOutput_5++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_5) {
            }
                commitCounter_tDBOutput_5++;

                if(commitEvery_tDBOutput_5 <= commitCounter_tDBOutput_5) {

                    conn_tDBOutput_5.commit();
                    commitCounter_tDBOutput_5=0;

                }


 


	tos_count_tDBOutput_5++;

/**
 * [tDBOutput_5 main ] stop
 */
	
	/**
	 * [tDBOutput_5 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";

	

 



/**
 * [tDBOutput_5 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";

	

 



/**
 * [tDBOutput_5 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0"




	
	/**
	 * [tMap_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_5 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";

	

 



/**
 * [tDBInput_5 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_5 end ] start
	 */

	

	
	
	currentComponent="tDBInput_5";

	

	}
}finally{
	if (rs_tDBInput_5 != null) {
		rs_tDBInput_5.close();
	}
	if (stmt_tDBInput_5 != null) {
		stmt_tDBInput_5.close();
	}
		if(conn_tDBInput_5 != null && !conn_tDBInput_5.isClosed()) {
			
			conn_tDBInput_5.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_5_NB_LINE",nb_line_tDBInput_5);
		


 

ok_Hash.put("tDBInput_5", true);
end_Hash.put("tDBInput_5", System.currentTimeMillis());




/**
 * [tDBInput_5 end ] stop
 */

	
	/**
	 * [tMap_5 end ] start
	 */

	

	
	
	currentComponent="tMap_5";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row5");
			  	}
			  	
 

ok_Hash.put("tMap_5", true);
end_Hash.put("tMap_5", System.currentTimeMillis());




/**
 * [tMap_5 end ] stop
 */

	
	/**
	 * [tDBOutput_5 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";

	



        if(pstmtUpdate_tDBOutput_5 != null){
            pstmtUpdate_tDBOutput_5.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_5");
        }
        if(pstmtInsert_tDBOutput_5 != null){
            pstmtInsert_tDBOutput_5.close();
            resourceMap.remove("pstmtInsert_tDBOutput_5");
        }
        if(pstmt_tDBOutput_5 != null) {
            pstmt_tDBOutput_5.close();
            resourceMap.remove("pstmt_tDBOutput_5");
        }
    resourceMap.put("statementClosed_tDBOutput_5", true);
    	if (commitCounter_tDBOutput_5 > 0) {
    		
    		conn_tDBOutput_5.commit();
    		
    	}
    		
		
    	conn_tDBOutput_5 .close();
    	
    	resourceMap.put("finish_tDBOutput_5", true);
    	

	nb_line_deleted_tDBOutput_5=nb_line_deleted_tDBOutput_5+ deletedCount_tDBOutput_5;
	nb_line_update_tDBOutput_5=nb_line_update_tDBOutput_5 + updatedCount_tDBOutput_5;
	nb_line_inserted_tDBOutput_5=nb_line_inserted_tDBOutput_5 + insertedCount_tDBOutput_5;
	nb_line_rejected_tDBOutput_5=nb_line_rejected_tDBOutput_5 + rejectedCount_tDBOutput_5;
	
        globalMap.put("tDBOutput_5_NB_LINE",nb_line_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_UPDATED",nb_line_update_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_DELETED",nb_line_deleted_tDBOutput_5);
        globalMap.put("tDBOutput_5_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_5);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_5", true);
end_Hash.put("tDBOutput_5", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk5", 0, "ok");
				}
				tDBInput_8Process(globalMap);



/**
 * [tDBOutput_5 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_5";

	

 



/**
 * [tDBInput_5 finally ] stop
 */

	
	/**
	 * [tMap_5 finally ] start
	 */

	

	
	
	currentComponent="tMap_5";

	

 



/**
 * [tMap_5 finally ] stop
 */

	
	/**
	 * [tDBOutput_5 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_5";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_5") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_5 = null;
                if ((pstmtUpdateToClose_tDBOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_5")) != null) {
                    pstmtUpdateToClose_tDBOutput_5.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_5 = null;
                if ((pstmtInsertToClose_tDBOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_5")) != null) {
                    pstmtInsertToClose_tDBOutput_5.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_5 = null;
                if ((pstmtToClose_tDBOutput_5 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_5")) != null) {
                    pstmtToClose_tDBOutput_5.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_5") == null){
            java.sql.Connection ctn_tDBOutput_5 = null;
            if((ctn_tDBOutput_5 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_5")) != null){
                try {
                    ctn_tDBOutput_5.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_5) {
                    String errorMessage_tDBOutput_5 = "failed to close the connection in tDBOutput_5 :" + sqlEx_tDBOutput_5.getMessage();
                    System.err.println(errorMessage_tDBOutput_5);
                }
            }
        }
    }
 



/**
 * [tDBOutput_5 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other = (copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row8Struct implements routines.system.IPersistableRow<row8Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row8Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_8_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row8Struct row8 = new row8Struct();
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 = new copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct();





	
	/**
	 * [tDBOutput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_7", false);
		start_Hash.put("tDBOutput_7", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_7";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0");
					}
				
		int tos_count_tDBOutput_7 = 0;
		





        int updateKeyCount_tDBOutput_7 = 1;
        if(updateKeyCount_tDBOutput_7 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_7 = 0;
int nb_line_update_tDBOutput_7 = 0;
int nb_line_inserted_tDBOutput_7 = 0;
int nb_line_deleted_tDBOutput_7 = 0;
int nb_line_rejected_tDBOutput_7 = 0;

int deletedCount_tDBOutput_7=0;
int updatedCount_tDBOutput_7=0;
int insertedCount_tDBOutput_7=0;

int rejectedCount_tDBOutput_7=0;

String tableName_tDBOutput_7 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_7 = false;

java.util.Calendar calendar_tDBOutput_7 = java.util.Calendar.getInstance();
calendar_tDBOutput_7.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_7 = calendar_tDBOutput_7.getTime().getTime();
calendar_tDBOutput_7.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_7 = calendar_tDBOutput_7.getTime().getTime();
long date_tDBOutput_7;

java.sql.Connection conn_tDBOutput_7 = null;
		String dbProperties_tDBOutput_7 = "noDatetimeStringSync=true";
		String url_tDBOutput_7 = null;
		if(dbProperties_tDBOutput_7 == null || dbProperties_tDBOutput_7.trim().length() == 0) {
			url_tDBOutput_7 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_7 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_7.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_7 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_7 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_7;
		}
		String driverClass_tDBOutput_7 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_7 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_7 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:LIcJKQ1BJOvyTR4LP1tmCxaVWK++fm6P0sj7JQ/QgDsa+GAEpzIbiYE=");

		String dbPwd_tDBOutput_7 = decryptedPassword_tDBOutput_7;
		java.lang.Class.forName(driverClass_tDBOutput_7);
		
		conn_tDBOutput_7 = java.sql.DriverManager.getConnection(url_tDBOutput_7, dbUser_tDBOutput_7, dbPwd_tDBOutput_7);
		
	
	resourceMap.put("conn_tDBOutput_7", conn_tDBOutput_7);
        conn_tDBOutput_7.setAutoCommit(false);
        int commitEvery_tDBOutput_7 = 10000;
        int commitCounter_tDBOutput_7 = 0;

int count_tDBOutput_7=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_7 = conn_tDBOutput_7.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_7", pstmt_tDBOutput_7);
	    String insert_tDBOutput_7 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_7 = conn_tDBOutput_7.prepareStatement(insert_tDBOutput_7);
	    resourceMap.put("pstmtInsert_tDBOutput_7", pstmtInsert_tDBOutput_7);
	    String update_tDBOutput_7 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_7 = conn_tDBOutput_7.prepareStatement(update_tDBOutput_7);
	    resourceMap.put("pstmtUpdate_tDBOutput_7", pstmtUpdate_tDBOutput_7);
	    

 



/**
 * [tDBOutput_7 begin ] stop
 */



	
	/**
	 * [tMap_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_8", false);
		start_Hash.put("tMap_8", System.currentTimeMillis());
		
	
	currentComponent="tMap_8";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row8");
					}
				
		int tos_count_tMap_8 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_8__Struct  {
}
Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp = new copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_8 begin ] stop
 */



	
	/**
	 * [tDBInput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_8", false);
		start_Hash.put("tDBInput_8", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_8";

	
		int tos_count_tDBInput_8 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_8 = java.util.Calendar.getInstance();
		    calendar_tDBInput_8.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_8 = calendar_tDBInput_8.getTime();
		    int nb_line_tDBInput_8 = 0;
		    java.sql.Connection conn_tDBInput_8 = null;
				String driverClass_tDBInput_8 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_8 = java.lang.Class.forName(driverClass_tDBInput_8);
				String dbUser_tDBInput_8 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_8 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:vYOjK+hfySeED1G7H05ZPRaqteI1ETMa7U2yIMR0yQIlPGAh0qBP0vI=");
				
				String dbPwd_tDBInput_8 = decryptedPassword_tDBInput_8;
				
				String url_tDBInput_8 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_8 = java.sql.DriverManager.getConnection(url_tDBInput_8,dbUser_tDBInput_8,dbPwd_tDBInput_8);
		        
		    
			java.sql.Statement stmt_tDBInput_8 = conn_tDBInput_8.createStatement();

		    String dbquery_tDBInput_8 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (2) as k_Dispersion\n,((SELECT c.RURAL_PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO"
+" = 'MALAMBO' )*2) Valor_Total\nfrom modulo_orden_personal a, acta_precios b\nwhere\na.REGION= 8\nand FECHALEGALIZATION >"
+"= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (sel"
+"ect (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'R'"
+"\nand FRECUENCIA= 3\nand ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546,"
+" \n1547,\n1548, \n1549,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n15"
+"69,\n1571,\n1577, \n1578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595,"
+" \n1596, \n1598,\n1602,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n"
+"1629,\n1630, \n1631, \n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658"
+", \n1660, \n1662, \n1663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n"
+"1699,\n1701,\n1704,\n1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733,"
+" \n1735, \n1736, \n1752, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_8_QUERY",dbquery_tDBInput_8);
		    java.sql.ResultSet rs_tDBInput_8 = null;

		    try {
		    	rs_tDBInput_8 = stmt_tDBInput_8.executeQuery(dbquery_tDBInput_8);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_8 = rs_tDBInput_8.getMetaData();
		    	int colQtyInRs_tDBInput_8 = rsmd_tDBInput_8.getColumnCount();

		    String tmpContent_tDBInput_8 = null;
		    
		    
		    while (rs_tDBInput_8.next()) {
		        nb_line_tDBInput_8++;
		        
							if(colQtyInRs_tDBInput_8 < 1) {
								row8.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row8.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 1, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 2) {
								row8.DESC_PROGRAMA = null;
							} else {
	                         		
        	row8.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 2, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 3) {
								row8.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row8.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 3, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 4) {
								row8.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row8.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 4, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 5) {
								row8.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row8.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 5, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 6) {
								row8.TAREA = null;
							} else {
	                         		
        	row8.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 6, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 7) {
								row8.DESCTAREA = null;
							} else {
	                         		
        	row8.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 7, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 8) {
								row8.ORDEN = null;
							} else {
	                         		
        	row8.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_8, 8, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 9) {
								row8.CICLO = null;
							} else {
	                         		
        	row8.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 9, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 10) {
								row8.SERVICIO = null;
							} else {
	                         		
        	row8.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 10, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 11) {
								row8.ESTADO = null;
							} else {
	                         		
        	row8.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 11, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 12) {
								row8.DESC_ESTADO = null;
							} else {
	                         		
        	row8.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 12, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 13) {
								row8.FECHACREATED = null;
							} else {
	                         		
        	row8.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_8, 13, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 14) {
								row8.OOPEN = null;
							} else {
	                         		
        	row8.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_8, 14, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 15) {
								row8.FECHALEGALIZATION = null;
							} else {
	                         		
        	row8.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_8, 15, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 16) {
								row8.HORALEGALIZATION = null;
							} else {
	                         		
        	row8.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_8, 16, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 17) {
								row8.INSTALACION = null;
							} else {
	                         		
        	row8.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_8, 17, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 18) {
								row8.URBANO_RURAL = null;
							} else {
	                         		
        	row8.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_8, 18, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 19) {
								row8.ORTRINUR = null;
							} else {
	                         		
        	row8.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_8, 19, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 20) {
								row8.DESCRIPCIONA = null;
							} else {
	                         		
        	row8.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 20, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 21) {
								row8.CIUDAD = null;
							} else {
	                         		
        	row8.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_8, 21, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 22) {
								row8.CMRUDESC = null;
							} else {
	                         		
        	row8.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_8, 22, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 23) {
								row8.REGION = null;
							} else {
	                         		
        	row8.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_8, 23, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 24) {
								row8.REGNDESC = null;
							} else {
	                         		
        	row8.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_8, 24, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 25) {
								row8.DEPACODI = null;
							} else {
	                         		
        	row8.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_8, 25, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 26) {
								row8.CODIGORESPUESTA = null;
							} else {
	                         		
        	row8.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 26, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 27) {
								row8.RESPUESTATENCION = null;
							} else {
	                         		
        	row8.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_8, 27, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 28) {
								row8.X = null;
							} else {
	                         		
        	row8.X = routines.system.JDBCUtil.getString(rs_tDBInput_8, 28, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 29) {
								row8.Y = null;
							} else {
	                         		
        	row8.Y = routines.system.JDBCUtil.getString(rs_tDBInput_8, 29, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 30) {
								row8.ANO = null;
							} else {
	                         		
        	row8.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_8, 30, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 31) {
								row8.MES = null;
							} else {
	                         		
        	row8.MES = routines.system.JDBCUtil.getString(rs_tDBInput_8, 31, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 32) {
								row8.DIA = null;
							} else {
	                         		
        	row8.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 32, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 33) {
								row8.DESC_CNA = null;
							} else {
	                         		
        	row8.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 33, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 34) {
								row8.ORDEN_OPEN = null;
							} else {
	                         		
        	row8.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_8, 34, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 35) {
								row8.ACTIVIDAD = null;
							} else {
	                         		
        	row8.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_8, 35, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 36) {
								row8.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row8.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_8, 36, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 37) {
								row8.FRECUENCIA = null;
							} else {
	                         		
        	row8.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_8, 37, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 38) {
								row8.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row8.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_8, 38, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 39) {
								row8.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row8.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_8, 39, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 40) {
								row8.ESTADO_CORTE = null;
							} else {
	                         		
        	row8.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_8, 40, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 41) {
								row8.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row8.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_8, 41, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 42) {
								row8.ROUTE_ID = null;
							} else {
	                         		
        	row8.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_8, 42, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 43) {
								row8.NAME_ = null;
							} else {
	                         		
        	row8.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_8, 43, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 44) {
								row8.NUMBER_ID = null;
							} else {
	                         		
        	row8.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_8, 44, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 45) {
								row8.k_Dispersion = null;
							} else {
	                         		
        	row8.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_8, 45, false);
		                    }
							if(colQtyInRs_tDBInput_8 < 46) {
								row8.Valor_Total = null;
							} else {
	                         		
        	row8.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_8, 46, false);
		                    }
					

 



/**
 * [tDBInput_8 begin ] stop
 */
	
	/**
	 * [tDBInput_8 main ] start
	 */

	

	
	
	currentComponent="tDBInput_8";

	

 


	tos_count_tDBInput_8++;

/**
 * [tDBInput_8 main ] stop
 */
	
	/**
	 * [tDBInput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_8";

	

 



/**
 * [tDBInput_8 process_data_begin ] stop
 */

	
	/**
	 * [tMap_8 main ] start
	 */

	

	
	
	currentComponent="tMap_8";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row8");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_8 = false;
		  boolean mainRowRejected_tMap_8 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0'
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CODIGO_PROGRAMA = row8.CODIGO_PROGRAMA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_PROGRAMA = row8.DESC_PROGRAMA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CODIGO_EQUIPO = row8.CODIGO_EQUIPO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.EQUIPO_TRABAJO = row8.EQUIPO_TRABAJO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.UNIDAD_OPERATIVA = row8.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.NAME_ = row8.NAME_;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.NUMBER_ID = row8.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.TAREA = row8.TAREA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESCTAREA = row8.DESCTAREA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ORDEN = row8.ORDEN;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CICLO = row8.CICLO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.SERVICIO = row8.SERVICIO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ESTADO = row8.ESTADO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_ESTADO = row8.DESC_ESTADO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.FECHACREATED = row8.FECHACREATED;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.OOPEN = row8.OOPEN;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.FECHALEGALIZATION = row8.FECHALEGALIZATION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.HORALEGALIZATION = row8.HORALEGALIZATION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.INSTALACION = row8.INSTALACION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.URBANO_RURAL = row8.URBANO_RURAL;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ORTRINUR = row8.ORTRINUR;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESCRIPCIONA = row8.DESCRIPCIONA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CIUDAD = row8.CIUDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CMRUDESC = row8.CMRUDESC;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.REGION = row8.REGION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.REGNDESC = row8.REGNDESC;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DEPACODI = row8.DEPACODI;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CODIGORESPUESTA = row8.CODIGORESPUESTA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.RESPUESTATENCION = row8.RESPUESTATENCION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.X = row8.X;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.Y = row8.Y;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ANO = row8.ANO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.MES = row8.MES;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DIA = row8.DIA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_CNA = row8.DESC_CNA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ORDEN_OPEN = row8.ORDEN_OPEN;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ACTIVIDAD = row8.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.TIPO_ACTIVIDAD = row8.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_ACTIVIDAD = row8.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.FRECUENCIA = row8.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CUENTAS_VENCIDAS = row8.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.SALDO_CUENTAS_VENCIDAS = row8.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ESTADO_CORTE = row8.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ROUTE_ID = row8.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.k_Dispersion = row8.k_Dispersion;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.Valor_Total = row8.Valor_Total;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 = copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_8 = false;










 


	tos_count_tMap_8++;

/**
 * [tMap_8 main ] stop
 */
	
	/**
	 * [tMap_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0"
if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 != null) { 



	
	/**
	 * [tDBOutput_7 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0");
					}
					



        whetherReject_tDBOutput_7 = false;
                    if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN == null) {
pstmt_tDBOutput_7.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_7.setString(1, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN);
}

            int checkCount_tDBOutput_7 = -1;
            try (java.sql.ResultSet rs_tDBOutput_7 = pstmt_tDBOutput_7.executeQuery()) {
                while(rs_tDBOutput_7.next()) {
                    checkCount_tDBOutput_7 = rs_tDBOutput_7.getInt(1);
                }
            }
            if(checkCount_tDBOutput_7 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_7.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(1, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_7.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(2, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_7.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(3, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_7.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(4, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_7.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(5, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_ == null) {
pstmtUpdate_tDBOutput_7.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(6, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_7.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(7, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA == null) {
pstmtUpdate_tDBOutput_7.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(8, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA == null) {
pstmtUpdate_tDBOutput_7.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(9, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO == null) {
pstmtUpdate_tDBOutput_7.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(10, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO == null) {
pstmtUpdate_tDBOutput_7.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(11, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO == null) {
pstmtUpdate_tDBOutput_7.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(12, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_7.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(13, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED == null) {
pstmtUpdate_tDBOutput_7.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(14, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN == null) {
pstmtUpdate_tDBOutput_7.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(15, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_7.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(16, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_7.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(17, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION == null) {
pstmtUpdate_tDBOutput_7.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(18, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_7.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(19, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR == null) {
pstmtUpdate_tDBOutput_7.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(20, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_7.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(21, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD == null) {
pstmtUpdate_tDBOutput_7.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(22, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC == null) {
pstmtUpdate_tDBOutput_7.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(23, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION == null) {
pstmtUpdate_tDBOutput_7.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(24, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC == null) {
pstmtUpdate_tDBOutput_7.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(25, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI == null) {
pstmtUpdate_tDBOutput_7.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(26, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_7.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(27, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_7.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(28, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X == null) {
pstmtUpdate_tDBOutput_7.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(29, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y == null) {
pstmtUpdate_tDBOutput_7.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(30, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO == null) {
pstmtUpdate_tDBOutput_7.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(31, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES == null) {
pstmtUpdate_tDBOutput_7.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(32, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA == null) {
pstmtUpdate_tDBOutput_7.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(33, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA == null) {
pstmtUpdate_tDBOutput_7.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(34, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_7.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(35, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_7.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(36, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_7.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(37, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_7.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(38, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_7.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(39, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_7.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(40, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_7.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(41, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_7.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(42, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_7.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(43, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion == null) {
pstmtUpdate_tDBOutput_7.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(44, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total == null) {
pstmtUpdate_tDBOutput_7.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(45, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN == null) {
pstmtUpdate_tDBOutput_7.setNull(46 + count_tDBOutput_7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_7.setString(46 + count_tDBOutput_7, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN);
}

                try {
                    updatedCount_tDBOutput_7 = updatedCount_tDBOutput_7 + pstmtUpdate_tDBOutput_7.executeUpdate();
                    nb_line_tDBOutput_7++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_7 = true;
                        nb_line_tDBOutput_7++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_7.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(1, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_7.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(2, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_7.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(3, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_7.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(4, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_7.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(5, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_ == null) {
pstmtInsert_tDBOutput_7.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(6, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_7.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(7, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA == null) {
pstmtInsert_tDBOutput_7.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(8, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA == null) {
pstmtInsert_tDBOutput_7.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(9, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN == null) {
pstmtInsert_tDBOutput_7.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(10, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO == null) {
pstmtInsert_tDBOutput_7.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(11, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO == null) {
pstmtInsert_tDBOutput_7.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(12, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO == null) {
pstmtInsert_tDBOutput_7.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(13, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_7.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(14, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED == null) {
pstmtInsert_tDBOutput_7.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(15, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN == null) {
pstmtInsert_tDBOutput_7.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(16, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_7.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(17, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_7.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(18, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION == null) {
pstmtInsert_tDBOutput_7.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(19, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_7.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(20, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR == null) {
pstmtInsert_tDBOutput_7.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(21, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_7.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(22, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD == null) {
pstmtInsert_tDBOutput_7.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(23, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC == null) {
pstmtInsert_tDBOutput_7.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(24, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION == null) {
pstmtInsert_tDBOutput_7.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(25, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC == null) {
pstmtInsert_tDBOutput_7.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(26, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI == null) {
pstmtInsert_tDBOutput_7.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(27, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_7.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(28, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_7.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(29, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X == null) {
pstmtInsert_tDBOutput_7.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(30, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y == null) {
pstmtInsert_tDBOutput_7.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(31, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO == null) {
pstmtInsert_tDBOutput_7.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(32, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES == null) {
pstmtInsert_tDBOutput_7.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(33, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA == null) {
pstmtInsert_tDBOutput_7.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(34, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA == null) {
pstmtInsert_tDBOutput_7.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(35, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_7.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(36, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_7.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(37, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_7.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(38, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_7.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(39, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_7.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(40, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_7.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(41, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_7.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(42, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_7.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(43, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_7.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(44, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion == null) {
pstmtInsert_tDBOutput_7.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(45, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total == null) {
pstmtInsert_tDBOutput_7.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_7.setString(46, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_7 = insertedCount_tDBOutput_7 + pstmtInsert_tDBOutput_7.executeUpdate();
                    nb_line_tDBOutput_7++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_7 = true;
                        nb_line_tDBOutput_7++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_7) {
            }
                commitCounter_tDBOutput_7++;

                if(commitEvery_tDBOutput_7 <= commitCounter_tDBOutput_7) {

                    conn_tDBOutput_7.commit();
                    commitCounter_tDBOutput_7=0;

                }


 


	tos_count_tDBOutput_7++;

/**
 * [tDBOutput_7 main ] stop
 */
	
	/**
	 * [tDBOutput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";

	

 



/**
 * [tDBOutput_7 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";

	

 



/**
 * [tDBOutput_7 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0"




	
	/**
	 * [tMap_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";

	

 



/**
 * [tDBInput_8 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_8 end ] start
	 */

	

	
	
	currentComponent="tDBInput_8";

	

	}
}finally{
	if (rs_tDBInput_8 != null) {
		rs_tDBInput_8.close();
	}
	if (stmt_tDBInput_8 != null) {
		stmt_tDBInput_8.close();
	}
		if(conn_tDBInput_8 != null && !conn_tDBInput_8.isClosed()) {
			
			conn_tDBInput_8.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_8_NB_LINE",nb_line_tDBInput_8);
		


 

ok_Hash.put("tDBInput_8", true);
end_Hash.put("tDBInput_8", System.currentTimeMillis());




/**
 * [tDBInput_8 end ] stop
 */

	
	/**
	 * [tMap_8 end ] start
	 */

	

	
	
	currentComponent="tMap_8";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row8");
			  	}
			  	
 

ok_Hash.put("tMap_8", true);
end_Hash.put("tMap_8", System.currentTimeMillis());




/**
 * [tMap_8 end ] stop
 */

	
	/**
	 * [tDBOutput_7 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";

	



        if(pstmtUpdate_tDBOutput_7 != null){
            pstmtUpdate_tDBOutput_7.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_7");
        }
        if(pstmtInsert_tDBOutput_7 != null){
            pstmtInsert_tDBOutput_7.close();
            resourceMap.remove("pstmtInsert_tDBOutput_7");
        }
        if(pstmt_tDBOutput_7 != null) {
            pstmt_tDBOutput_7.close();
            resourceMap.remove("pstmt_tDBOutput_7");
        }
    resourceMap.put("statementClosed_tDBOutput_7", true);
    	if (commitCounter_tDBOutput_7 > 0) {
    		
    		conn_tDBOutput_7.commit();
    		
    	}
    		
		
    	conn_tDBOutput_7 .close();
    	
    	resourceMap.put("finish_tDBOutput_7", true);
    	

	nb_line_deleted_tDBOutput_7=nb_line_deleted_tDBOutput_7+ deletedCount_tDBOutput_7;
	nb_line_update_tDBOutput_7=nb_line_update_tDBOutput_7 + updatedCount_tDBOutput_7;
	nb_line_inserted_tDBOutput_7=nb_line_inserted_tDBOutput_7 + insertedCount_tDBOutput_7;
	nb_line_rejected_tDBOutput_7=nb_line_rejected_tDBOutput_7 + rejectedCount_tDBOutput_7;
	
        globalMap.put("tDBOutput_7_NB_LINE",nb_line_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_UPDATED",nb_line_update_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_DELETED",nb_line_deleted_tDBOutput_7);
        globalMap.put("tDBOutput_7_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_7);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_7", true);
end_Hash.put("tDBOutput_7", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk7", 0, "ok");
				}
				tDBInput_6Process(globalMap);



/**
 * [tDBOutput_7 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_8 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_8";

	

 



/**
 * [tDBInput_8 finally ] stop
 */

	
	/**
	 * [tMap_8 finally ] start
	 */

	

	
	
	currentComponent="tMap_8";

	

 



/**
 * [tMap_8 finally ] stop
 */

	
	/**
	 * [tDBOutput_7 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_7";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_7") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_7 = null;
                if ((pstmtUpdateToClose_tDBOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_7")) != null) {
                    pstmtUpdateToClose_tDBOutput_7.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_7 = null;
                if ((pstmtInsertToClose_tDBOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_7")) != null) {
                    pstmtInsertToClose_tDBOutput_7.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_7 = null;
                if ((pstmtToClose_tDBOutput_7 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_7")) != null) {
                    pstmtToClose_tDBOutput_7.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_7") == null){
            java.sql.Connection ctn_tDBOutput_7 = null;
            if((ctn_tDBOutput_7 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_7")) != null){
                try {
                    ctn_tDBOutput_7.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_7) {
                    String errorMessage_tDBOutput_7 = "failed to close the connection in tDBOutput_7 :" + sqlEx_tDBOutput_7.getMessage();
                    System.err.println(errorMessage_tDBOutput_7);
                }
            }
        }
    }
 



/**
 * [tDBOutput_7 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_8_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other = (copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row6Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_6_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row6Struct row6 = new row6Struct();
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = new copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct();





	
	/**
	 * [tDBOutput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_6", false);
		start_Hash.put("tDBOutput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
					}
				
		int tos_count_tDBOutput_6 = 0;
		





        int updateKeyCount_tDBOutput_6 = 1;
        if(updateKeyCount_tDBOutput_6 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_6 = 0;
int nb_line_update_tDBOutput_6 = 0;
int nb_line_inserted_tDBOutput_6 = 0;
int nb_line_deleted_tDBOutput_6 = 0;
int nb_line_rejected_tDBOutput_6 = 0;

int deletedCount_tDBOutput_6=0;
int updatedCount_tDBOutput_6=0;
int insertedCount_tDBOutput_6=0;

int rejectedCount_tDBOutput_6=0;

String tableName_tDBOutput_6 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_6 = false;

java.util.Calendar calendar_tDBOutput_6 = java.util.Calendar.getInstance();
calendar_tDBOutput_6.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_6 = calendar_tDBOutput_6.getTime().getTime();
calendar_tDBOutput_6.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_6 = calendar_tDBOutput_6.getTime().getTime();
long date_tDBOutput_6;

java.sql.Connection conn_tDBOutput_6 = null;
		String dbProperties_tDBOutput_6 = "noDatetimeStringSync=true";
		String url_tDBOutput_6 = null;
		if(dbProperties_tDBOutput_6 == null || dbProperties_tDBOutput_6.trim().length() == 0) {
			url_tDBOutput_6 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_6 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_6.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_6 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_6 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_6;
		}
		String driverClass_tDBOutput_6 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_6 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_6 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:bRJuOCsotDWnwvkFxfdFM44Ywd7bs8pyX1V0tLj7WCDdOOksPbgLcsI=");

		String dbPwd_tDBOutput_6 = decryptedPassword_tDBOutput_6;
		java.lang.Class.forName(driverClass_tDBOutput_6);
		
		conn_tDBOutput_6 = java.sql.DriverManager.getConnection(url_tDBOutput_6, dbUser_tDBOutput_6, dbPwd_tDBOutput_6);
		
	
	resourceMap.put("conn_tDBOutput_6", conn_tDBOutput_6);
        conn_tDBOutput_6.setAutoCommit(false);
        int commitEvery_tDBOutput_6 = 10000;
        int commitCounter_tDBOutput_6 = 0;

int count_tDBOutput_6=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_6 = conn_tDBOutput_6.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_6", pstmt_tDBOutput_6);
	    String insert_tDBOutput_6 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_6 = conn_tDBOutput_6.prepareStatement(insert_tDBOutput_6);
	    resourceMap.put("pstmtInsert_tDBOutput_6", pstmtInsert_tDBOutput_6);
	    String update_tDBOutput_6 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_6 = conn_tDBOutput_6.prepareStatement(update_tDBOutput_6);
	    resourceMap.put("pstmtUpdate_tDBOutput_6", pstmtUpdate_tDBOutput_6);
	    

 



/**
 * [tDBOutput_6 begin ] stop
 */



	
	/**
	 * [tMap_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_6", false);
		start_Hash.put("tMap_6", System.currentTimeMillis());
		
	
	currentComponent="tMap_6";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row6");
					}
				
		int tos_count_tMap_6 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_6__Struct  {
}
Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp = new copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_6 begin ] stop
 */



	
	/**
	 * [tDBInput_6 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_6", false);
		start_Hash.put("tDBInput_6", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_6";

	
		int tos_count_tDBInput_6 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_6 = java.util.Calendar.getInstance();
		    calendar_tDBInput_6.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_6 = calendar_tDBInput_6.getTime();
		    int nb_line_tDBInput_6 = 0;
		    java.sql.Connection conn_tDBInput_6 = null;
				String driverClass_tDBInput_6 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_6 = java.lang.Class.forName(driverClass_tDBInput_6);
				String dbUser_tDBInput_6 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_6 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:0jNSYsrdBacLiYDkHjAZO8cZT7umsLlRLUrPQ91Q7j2FJ2GZFnI0Vg8=");
				
				String dbPwd_tDBInput_6 = decryptedPassword_tDBInput_6;
				
				String url_tDBInput_6 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_6 = java.sql.DriverManager.getConnection(url_tDBInput_6,dbUser_tDBInput_6,dbPwd_tDBInput_6);
		        
		    
			java.sql.Statement stmt_tDBInput_6 = conn_tDBInput_6.createStatement();

		    String dbquery_tDBInput_6 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (1) as k_Dispersion\n,((SELECT c.PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO = 'MA"
+"LAMBO' )*1) Valor_Total\nfrom modulo_orden_personal a\nwhere\n a.REGION= 8\nand FECHALEGALIZATION >= (select (CONCAT(COD"
+"_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO,C"
+"OD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'U'\nand FRECUENCIA<>3\na"
+"nd ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546, \n1547,\n1548, \n154"
+"9,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n1569,\n1571,\n1577, \n1"
+"578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595, \n1596, \n1598,\n160"
+"2,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n1629,\n1630, \n1631, "
+"\n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658, \n1660, \n1662, \n1"
+"663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n1699,\n1701,\n1704,\n"
+"1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733, \n1735, \n1736, \n17"
+"52, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_6_QUERY",dbquery_tDBInput_6);
		    java.sql.ResultSet rs_tDBInput_6 = null;

		    try {
		    	rs_tDBInput_6 = stmt_tDBInput_6.executeQuery(dbquery_tDBInput_6);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_6 = rs_tDBInput_6.getMetaData();
		    	int colQtyInRs_tDBInput_6 = rsmd_tDBInput_6.getColumnCount();

		    String tmpContent_tDBInput_6 = null;
		    
		    
		    while (rs_tDBInput_6.next()) {
		        nb_line_tDBInput_6++;
		        
							if(colQtyInRs_tDBInput_6 < 1) {
								row6.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row6.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 1, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 2) {
								row6.DESC_PROGRAMA = null;
							} else {
	                         		
        	row6.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 2, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 3) {
								row6.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row6.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 3, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 4) {
								row6.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row6.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 4, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 5) {
								row6.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row6.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 5, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 6) {
								row6.TAREA = null;
							} else {
	                         		
        	row6.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 6, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 7) {
								row6.DESCTAREA = null;
							} else {
	                         		
        	row6.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 7, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 8) {
								row6.ORDEN = null;
							} else {
	                         		
        	row6.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_6, 8, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 9) {
								row6.CICLO = null;
							} else {
	                         		
        	row6.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 9, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 10) {
								row6.SERVICIO = null;
							} else {
	                         		
        	row6.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 10, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 11) {
								row6.ESTADO = null;
							} else {
	                         		
        	row6.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 11, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 12) {
								row6.DESC_ESTADO = null;
							} else {
	                         		
        	row6.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 12, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 13) {
								row6.FECHACREATED = null;
							} else {
	                         		
        	row6.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_6, 13, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 14) {
								row6.OOPEN = null;
							} else {
	                         		
        	row6.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_6, 14, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 15) {
								row6.FECHALEGALIZATION = null;
							} else {
	                         		
        	row6.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_6, 15, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 16) {
								row6.HORALEGALIZATION = null;
							} else {
	                         		
        	row6.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_6, 16, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 17) {
								row6.INSTALACION = null;
							} else {
	                         		
        	row6.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_6, 17, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 18) {
								row6.URBANO_RURAL = null;
							} else {
	                         		
        	row6.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_6, 18, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 19) {
								row6.ORTRINUR = null;
							} else {
	                         		
        	row6.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_6, 19, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 20) {
								row6.DESCRIPCIONA = null;
							} else {
	                         		
        	row6.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 20, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 21) {
								row6.CIUDAD = null;
							} else {
	                         		
        	row6.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_6, 21, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 22) {
								row6.CMRUDESC = null;
							} else {
	                         		
        	row6.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_6, 22, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 23) {
								row6.REGION = null;
							} else {
	                         		
        	row6.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_6, 23, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 24) {
								row6.REGNDESC = null;
							} else {
	                         		
        	row6.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_6, 24, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 25) {
								row6.DEPACODI = null;
							} else {
	                         		
        	row6.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_6, 25, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 26) {
								row6.CODIGORESPUESTA = null;
							} else {
	                         		
        	row6.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 26, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 27) {
								row6.RESPUESTATENCION = null;
							} else {
	                         		
        	row6.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_6, 27, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 28) {
								row6.X = null;
							} else {
	                         		
        	row6.X = routines.system.JDBCUtil.getString(rs_tDBInput_6, 28, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 29) {
								row6.Y = null;
							} else {
	                         		
        	row6.Y = routines.system.JDBCUtil.getString(rs_tDBInput_6, 29, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 30) {
								row6.ANO = null;
							} else {
	                         		
        	row6.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_6, 30, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 31) {
								row6.MES = null;
							} else {
	                         		
        	row6.MES = routines.system.JDBCUtil.getString(rs_tDBInput_6, 31, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 32) {
								row6.DIA = null;
							} else {
	                         		
        	row6.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 32, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 33) {
								row6.DESC_CNA = null;
							} else {
	                         		
        	row6.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 33, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 34) {
								row6.ORDEN_OPEN = null;
							} else {
	                         		
        	row6.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_6, 34, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 35) {
								row6.ACTIVIDAD = null;
							} else {
	                         		
        	row6.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_6, 35, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 36) {
								row6.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row6.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_6, 36, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 37) {
								row6.FRECUENCIA = null;
							} else {
	                         		
        	row6.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_6, 37, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 38) {
								row6.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row6.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_6, 38, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 39) {
								row6.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row6.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_6, 39, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 40) {
								row6.ESTADO_CORTE = null;
							} else {
	                         		
        	row6.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_6, 40, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 41) {
								row6.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row6.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_6, 41, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 42) {
								row6.ROUTE_ID = null;
							} else {
	                         		
        	row6.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_6, 42, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 43) {
								row6.NAME_ = null;
							} else {
	                         		
        	row6.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_6, 43, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 44) {
								row6.NUMBER_ID = null;
							} else {
	                         		
        	row6.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_6, 44, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 45) {
								row6.k_Dispersion = null;
							} else {
	                         		
        	row6.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_6, 45, false);
		                    }
							if(colQtyInRs_tDBInput_6 < 46) {
								row6.Valor_Total = null;
							} else {
	                         		
        	row6.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_6, 46, false);
		                    }
					

 



/**
 * [tDBInput_6 begin ] stop
 */
	
	/**
	 * [tDBInput_6 main ] start
	 */

	

	
	
	currentComponent="tDBInput_6";

	

 


	tos_count_tDBInput_6++;

/**
 * [tDBInput_6 main ] stop
 */
	
	/**
	 * [tDBInput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_6";

	

 



/**
 * [tDBInput_6 process_data_begin ] stop
 */

	
	/**
	 * [tMap_6 main ] start
	 */

	

	
	
	currentComponent="tMap_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row6");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_6 = false;
		  boolean mainRowRejected_tMap_6 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0'
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_PROGRAMA = row6.CODIGO_PROGRAMA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_PROGRAMA = row6.DESC_PROGRAMA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_EQUIPO = row6.CODIGO_EQUIPO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.EQUIPO_TRABAJO = row6.EQUIPO_TRABAJO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.UNIDAD_OPERATIVA = row6.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NAME_ = row6.NAME_;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NUMBER_ID = row6.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TAREA = row6.TAREA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCTAREA = row6.DESCTAREA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN = row6.ORDEN;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CICLO = row6.CICLO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SERVICIO = row6.SERVICIO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO = row6.ESTADO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ESTADO = row6.DESC_ESTADO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHACREATED = row6.FECHACREATED;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.OOPEN = row6.OOPEN;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHALEGALIZATION = row6.FECHALEGALIZATION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.HORALEGALIZATION = row6.HORALEGALIZATION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.INSTALACION = row6.INSTALACION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.URBANO_RURAL = row6.URBANO_RURAL;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORTRINUR = row6.ORTRINUR;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCRIPCIONA = row6.DESCRIPCIONA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CIUDAD = row6.CIUDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CMRUDESC = row6.CMRUDESC;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGION = row6.REGION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGNDESC = row6.REGNDESC;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DEPACODI = row6.DEPACODI;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGORESPUESTA = row6.CODIGORESPUESTA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.RESPUESTATENCION = row6.RESPUESTATENCION;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.X = row6.X;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Y = row6.Y;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ANO = row6.ANO;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.MES = row6.MES;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DIA = row6.DIA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_CNA = row6.DESC_CNA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN_OPEN = row6.ORDEN_OPEN;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ACTIVIDAD = row6.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TIPO_ACTIVIDAD = row6.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ACTIVIDAD = row6.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FRECUENCIA = row6.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CUENTAS_VENCIDAS = row6.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SALDO_CUENTAS_VENCIDAS = row6.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO_CORTE = row6.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ROUTE_ID = row6.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.k_Dispersion = row6.k_Dispersion;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Valor_Total = row6.Valor_Total;
copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_6 = false;










 


	tos_count_tMap_6++;

/**
 * [tMap_6 main ] stop
 */
	
	/**
	 * [tMap_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0"
if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 != null) { 



	
	/**
	 * [tDBOutput_6 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
					}
					



        whetherReject_tDBOutput_6 = false;
                    if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmt_tDBOutput_6.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_6.setString(1, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

            int checkCount_tDBOutput_6 = -1;
            try (java.sql.ResultSet rs_tDBOutput_6 = pstmt_tDBOutput_6.executeQuery()) {
                while(rs_tDBOutput_6.next()) {
                    checkCount_tDBOutput_6 = rs_tDBOutput_6.getInt(1);
                }
            }
            if(checkCount_tDBOutput_6 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_6.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(1, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_6.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(2, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_6.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(3, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_6.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(4, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_6.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(5, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtUpdate_tDBOutput_6.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(6, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_6.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(7, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtUpdate_tDBOutput_6.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(8, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtUpdate_tDBOutput_6.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(9, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtUpdate_tDBOutput_6.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(10, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtUpdate_tDBOutput_6.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(11, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtUpdate_tDBOutput_6.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(12, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_6.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(13, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtUpdate_tDBOutput_6.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(14, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtUpdate_tDBOutput_6.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(15, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_6.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(16, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_6.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(17, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtUpdate_tDBOutput_6.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(18, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_6.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(19, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtUpdate_tDBOutput_6.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(20, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_6.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(21, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtUpdate_tDBOutput_6.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(22, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtUpdate_tDBOutput_6.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(23, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtUpdate_tDBOutput_6.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(24, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtUpdate_tDBOutput_6.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(25, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtUpdate_tDBOutput_6.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(26, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_6.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(27, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_6.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(28, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtUpdate_tDBOutput_6.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(29, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtUpdate_tDBOutput_6.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(30, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtUpdate_tDBOutput_6.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(31, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtUpdate_tDBOutput_6.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(32, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtUpdate_tDBOutput_6.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(33, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtUpdate_tDBOutput_6.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(34, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_6.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(35, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_6.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(36, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_6.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(37, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_6.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(38, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_6.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(39, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_6.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(40, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_6.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(41, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_6.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(42, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_6.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(43, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtUpdate_tDBOutput_6.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(44, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtUpdate_tDBOutput_6.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(45, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtUpdate_tDBOutput_6.setNull(46 + count_tDBOutput_6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_6.setString(46 + count_tDBOutput_6, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                try {
                    updatedCount_tDBOutput_6 = updatedCount_tDBOutput_6 + pstmtUpdate_tDBOutput_6.executeUpdate();
                    nb_line_tDBOutput_6++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_6 = true;
                        nb_line_tDBOutput_6++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_6.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(1, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_6.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(2, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_6.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(3, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_6.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(4, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_6.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(5, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_ == null) {
pstmtInsert_tDBOutput_6.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(6, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_6.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(7, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA == null) {
pstmtInsert_tDBOutput_6.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(8, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA == null) {
pstmtInsert_tDBOutput_6.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(9, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN == null) {
pstmtInsert_tDBOutput_6.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(10, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO == null) {
pstmtInsert_tDBOutput_6.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(11, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO == null) {
pstmtInsert_tDBOutput_6.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(12, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO == null) {
pstmtInsert_tDBOutput_6.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(13, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_6.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(14, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED == null) {
pstmtInsert_tDBOutput_6.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(15, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN == null) {
pstmtInsert_tDBOutput_6.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(16, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_6.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(17, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_6.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(18, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION == null) {
pstmtInsert_tDBOutput_6.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(19, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_6.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(20, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR == null) {
pstmtInsert_tDBOutput_6.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(21, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_6.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(22, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD == null) {
pstmtInsert_tDBOutput_6.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(23, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC == null) {
pstmtInsert_tDBOutput_6.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(24, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION == null) {
pstmtInsert_tDBOutput_6.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(25, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC == null) {
pstmtInsert_tDBOutput_6.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(26, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI == null) {
pstmtInsert_tDBOutput_6.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(27, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_6.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(28, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_6.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(29, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X == null) {
pstmtInsert_tDBOutput_6.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(30, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y == null) {
pstmtInsert_tDBOutput_6.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(31, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO == null) {
pstmtInsert_tDBOutput_6.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(32, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES == null) {
pstmtInsert_tDBOutput_6.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(33, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA == null) {
pstmtInsert_tDBOutput_6.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(34, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA == null) {
pstmtInsert_tDBOutput_6.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(35, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_6.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(36, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_6.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(37, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_6.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(38, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_6.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(39, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_6.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(40, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_6.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(41, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_6.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(42, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_6.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(43, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_6.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(44, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion == null) {
pstmtInsert_tDBOutput_6.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(45, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total == null) {
pstmtInsert_tDBOutput_6.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_6.setString(46, copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_6 = insertedCount_tDBOutput_6 + pstmtInsert_tDBOutput_6.executeUpdate();
                    nb_line_tDBOutput_6++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_6 = true;
                        nb_line_tDBOutput_6++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_6) {
            }
                commitCounter_tDBOutput_6++;

                if(commitEvery_tDBOutput_6 <= commitCounter_tDBOutput_6) {

                    conn_tDBOutput_6.commit();
                    commitCounter_tDBOutput_6=0;

                }


 


	tos_count_tDBOutput_6++;

/**
 * [tDBOutput_6 main ] stop
 */
	
	/**
	 * [tDBOutput_6 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";

	

 



/**
 * [tDBOutput_6 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";

	

 



/**
 * [tDBOutput_6 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0"




	
	/**
	 * [tMap_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_6 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";

	

 



/**
 * [tDBInput_6 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_6 end ] start
	 */

	

	
	
	currentComponent="tDBInput_6";

	

	}
}finally{
	if (rs_tDBInput_6 != null) {
		rs_tDBInput_6.close();
	}
	if (stmt_tDBInput_6 != null) {
		stmt_tDBInput_6.close();
	}
		if(conn_tDBInput_6 != null && !conn_tDBInput_6.isClosed()) {
			
			conn_tDBInput_6.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_6_NB_LINE",nb_line_tDBInput_6);
		


 

ok_Hash.put("tDBInput_6", true);
end_Hash.put("tDBInput_6", System.currentTimeMillis());




/**
 * [tDBInput_6 end ] stop
 */

	
	/**
	 * [tMap_6 end ] start
	 */

	

	
	
	currentComponent="tMap_6";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row6");
			  	}
			  	
 

ok_Hash.put("tMap_6", true);
end_Hash.put("tMap_6", System.currentTimeMillis());




/**
 * [tMap_6 end ] stop
 */

	
	/**
	 * [tDBOutput_6 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";

	



        if(pstmtUpdate_tDBOutput_6 != null){
            pstmtUpdate_tDBOutput_6.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_6");
        }
        if(pstmtInsert_tDBOutput_6 != null){
            pstmtInsert_tDBOutput_6.close();
            resourceMap.remove("pstmtInsert_tDBOutput_6");
        }
        if(pstmt_tDBOutput_6 != null) {
            pstmt_tDBOutput_6.close();
            resourceMap.remove("pstmt_tDBOutput_6");
        }
    resourceMap.put("statementClosed_tDBOutput_6", true);
    	if (commitCounter_tDBOutput_6 > 0) {
    		
    		conn_tDBOutput_6.commit();
    		
    	}
    		
		
    	conn_tDBOutput_6 .close();
    	
    	resourceMap.put("finish_tDBOutput_6", true);
    	

	nb_line_deleted_tDBOutput_6=nb_line_deleted_tDBOutput_6+ deletedCount_tDBOutput_6;
	nb_line_update_tDBOutput_6=nb_line_update_tDBOutput_6 + updatedCount_tDBOutput_6;
	nb_line_inserted_tDBOutput_6=nb_line_inserted_tDBOutput_6 + insertedCount_tDBOutput_6;
	nb_line_rejected_tDBOutput_6=nb_line_rejected_tDBOutput_6 + rejectedCount_tDBOutput_6;
	
        globalMap.put("tDBOutput_6_NB_LINE",nb_line_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_UPDATED",nb_line_update_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_DELETED",nb_line_deleted_tDBOutput_6);
        globalMap.put("tDBOutput_6_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_6);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_6", true);
end_Hash.put("tDBOutput_6", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk6", 0, "ok");
				}
				tDBInput_9Process(globalMap);



/**
 * [tDBOutput_6 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_6";

	

 



/**
 * [tDBInput_6 finally ] stop
 */

	
	/**
	 * [tMap_6 finally ] start
	 */

	

	
	
	currentComponent="tMap_6";

	

 



/**
 * [tMap_6 finally ] stop
 */

	
	/**
	 * [tDBOutput_6 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_6";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_6") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_6 = null;
                if ((pstmtUpdateToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_6")) != null) {
                    pstmtUpdateToClose_tDBOutput_6.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_6 = null;
                if ((pstmtInsertToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_6")) != null) {
                    pstmtInsertToClose_tDBOutput_6.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_6 = null;
                if ((pstmtToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_6")) != null) {
                    pstmtToClose_tDBOutput_6.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_6") == null){
            java.sql.Connection ctn_tDBOutput_6 = null;
            if((ctn_tDBOutput_6 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_6")) != null){
                try {
                    ctn_tDBOutput_6.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_6) {
                    String errorMessage_tDBOutput_6 = "failed to close the connection in tDBOutput_6 :" + sqlEx_tDBOutput_6.getMessage();
                    System.err.println(errorMessage_tDBOutput_6);
                }
            }
        }
    }
 



/**
 * [tDBOutput_6 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_6_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row9Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_9_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row9Struct row9 = new row9Struct();
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 = new copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct();





	
	/**
	 * [tDBOutput_8 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_8", false);
		start_Hash.put("tDBOutput_8", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_8";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0");
					}
				
		int tos_count_tDBOutput_8 = 0;
		





        int updateKeyCount_tDBOutput_8 = 1;
        if(updateKeyCount_tDBOutput_8 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_8 = 0;
int nb_line_update_tDBOutput_8 = 0;
int nb_line_inserted_tDBOutput_8 = 0;
int nb_line_deleted_tDBOutput_8 = 0;
int nb_line_rejected_tDBOutput_8 = 0;

int deletedCount_tDBOutput_8=0;
int updatedCount_tDBOutput_8=0;
int insertedCount_tDBOutput_8=0;

int rejectedCount_tDBOutput_8=0;

String tableName_tDBOutput_8 = "modulo_orden_kdispersion";
boolean whetherReject_tDBOutput_8 = false;

java.util.Calendar calendar_tDBOutput_8 = java.util.Calendar.getInstance();
calendar_tDBOutput_8.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_8 = calendar_tDBOutput_8.getTime().getTime();
calendar_tDBOutput_8.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_8 = calendar_tDBOutput_8.getTime().getTime();
long date_tDBOutput_8;

java.sql.Connection conn_tDBOutput_8 = null;
		String dbProperties_tDBOutput_8 = "noDatetimeStringSync=true";
		String url_tDBOutput_8 = null;
		if(dbProperties_tDBOutput_8 == null || dbProperties_tDBOutput_8.trim().length() == 0) {
			url_tDBOutput_8 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_8 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_8.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_8 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_8 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_8;
		}
		String driverClass_tDBOutput_8 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_8 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_8 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:bBjZ8l/c/SnHVW0LPSFrEiugY6i8FXwXf8ItoG9wf2wrXs8irMjyZ9A=");

		String dbPwd_tDBOutput_8 = decryptedPassword_tDBOutput_8;
		java.lang.Class.forName(driverClass_tDBOutput_8);
		
		conn_tDBOutput_8 = java.sql.DriverManager.getConnection(url_tDBOutput_8, dbUser_tDBOutput_8, dbPwd_tDBOutput_8);
		
	
	resourceMap.put("conn_tDBOutput_8", conn_tDBOutput_8);
        conn_tDBOutput_8.setAutoCommit(false);
        int commitEvery_tDBOutput_8 = 10000;
        int commitCounter_tDBOutput_8 = 0;

int count_tDBOutput_8=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_8 = conn_tDBOutput_8.prepareStatement("SELECT COUNT(1) FROM `" + "modulo_orden_kdispersion" + "` WHERE `ORDEN` = ?");
	    resourceMap.put("pstmt_tDBOutput_8", pstmt_tDBOutput_8);
	    String insert_tDBOutput_8 = "INSERT INTO `" + "modulo_orden_kdispersion" + "` (`CODIGO_PROGRAMA`,`DESC_PROGRAMA`,`CODIGO_EQUIPO`,`EQUIPO_TRABAJO`,`UNIDAD_OPERATIVA`,`NAME_`,`NUMBER_ID`,`TAREA`,`DESCTAREA`,`ORDEN`,`CICLO`,`SERVICIO`,`ESTADO`,`DESC_ESTADO`,`FECHACREATED`,`OOPEN`,`FECHALEGALIZATION`,`HORALEGALIZATION`,`INSTALACION`,`URBANO_RURAL`,`ORTRINUR`,`DESCRIPCIONA`,`CIUDAD`,`CMRUDESC`,`REGION`,`REGNDESC`,`DEPACODI`,`CODIGORESPUESTA`,`RESPUESTATENCION`,`X`,`Y`,`ANO`,`MES`,`DIA`,`DESC_CNA`,`ORDEN_OPEN`,`ACTIVIDAD`,`TIPO_ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`ROUTE_ID`,`k_Dispersion`,`Valor_Total`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_8 = conn_tDBOutput_8.prepareStatement(insert_tDBOutput_8);
	    resourceMap.put("pstmtInsert_tDBOutput_8", pstmtInsert_tDBOutput_8);
	    String update_tDBOutput_8 = "UPDATE `" + "modulo_orden_kdispersion" + "` SET `CODIGO_PROGRAMA` = ?,`DESC_PROGRAMA` = ?,`CODIGO_EQUIPO` = ?,`EQUIPO_TRABAJO` = ?,`UNIDAD_OPERATIVA` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`TAREA` = ?,`DESCTAREA` = ?,`CICLO` = ?,`SERVICIO` = ?,`ESTADO` = ?,`DESC_ESTADO` = ?,`FECHACREATED` = ?,`OOPEN` = ?,`FECHALEGALIZATION` = ?,`HORALEGALIZATION` = ?,`INSTALACION` = ?,`URBANO_RURAL` = ?,`ORTRINUR` = ?,`DESCRIPCIONA` = ?,`CIUDAD` = ?,`CMRUDESC` = ?,`REGION` = ?,`REGNDESC` = ?,`DEPACODI` = ?,`CODIGORESPUESTA` = ?,`RESPUESTATENCION` = ?,`X` = ?,`Y` = ?,`ANO` = ?,`MES` = ?,`DIA` = ?,`DESC_CNA` = ?,`ORDEN_OPEN` = ?,`ACTIVIDAD` = ?,`TIPO_ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`ROUTE_ID` = ?,`k_Dispersion` = ?,`Valor_Total` = ? WHERE `ORDEN` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_8 = conn_tDBOutput_8.prepareStatement(update_tDBOutput_8);
	    resourceMap.put("pstmtUpdate_tDBOutput_8", pstmtUpdate_tDBOutput_8);
	    

 



/**
 * [tDBOutput_8 begin ] stop
 */



	
	/**
	 * [tMap_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_9", false);
		start_Hash.put("tMap_9", System.currentTimeMillis());
		
	
	currentComponent="tMap_9";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row9");
					}
				
		int tos_count_tMap_9 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_9__Struct  {
}
Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_9 begin ] stop
 */



	
	/**
	 * [tDBInput_9 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_9", false);
		start_Hash.put("tDBInput_9", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_9";

	
		int tos_count_tDBInput_9 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_9 = java.util.Calendar.getInstance();
		    calendar_tDBInput_9.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_9 = calendar_tDBInput_9.getTime();
		    int nb_line_tDBInput_9 = 0;
		    java.sql.Connection conn_tDBInput_9 = null;
				String driverClass_tDBInput_9 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_9 = java.lang.Class.forName(driverClass_tDBInput_9);
				String dbUser_tDBInput_9 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_9 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:XlGN2sB8Lh3MLiVIcJvBbXZdCdeged2ymKGyiR2J2BLyQAuGs77C/J4=");
				
				String dbPwd_tDBInput_9 = decryptedPassword_tDBInput_9;
				
				String url_tDBInput_9 = "jdbc:mysql://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_9 = java.sql.DriverManager.getConnection(url_tDBInput_9,dbUser_tDBInput_9,dbPwd_tDBInput_9);
		        
		    
			java.sql.Statement stmt_tDBInput_9 = conn_tDBInput_9.createStatement();

		    String dbquery_tDBInput_9 = "SELECT a.CODIGO_PROGRAMA\n, a.DESC_PROGRAMA\n, a.CODIGO_EQUIPO\n, a.EQUIPO_TRABAJO\n, a.UNIDAD_OPERATIVA\n, a.TAREA\n, "
+"a.DESCTAREA\n, a.ORDEN\n, a.CICLO\n, a.SERVICIO\n, a.ESTADO\n, a.DESC_ESTADO\n, a.FECHACREATED\n, a.OOPEN\n, a.FECHALEGA"
+"LIZATION\n, a.HORALEGALIZATION\n, CONCAT('_',a.INSTALACION) AS NRO_INSTALACION\n, a.URBANO_RURAL\n, a.ORTRINUR\n, a.DESC"
+"RIPCIONA\n, a.CIUDAD\n, a.CMRUDESC\n, a.REGION\n, a.REGNDESC\n, a.DEPACODI\n, a.CODIGORESPUESTA\n, a.RESPUESTATENCION\n,"
+" a.X\n, a.Y\n, a.ANO\n, a.MES\n, a.DIA\n, a.DESC_CNA\n, a.ORDEN_OPEN\n, a.ACTIVIDAD\n, a.DESC_ACTIVIDAD\n, a.FRECUENCIA"
+"\n, a.CUENTAS_VENCIDAS\n, a.SALDO_CUENTAS_VENCIDAS\n, a.ESTADO_CORTE\n, a.TIPO_ACTIVIDAD\n, a.ROUTE_ID\n, a.NAME_\n, a.NU"
+"MBER_ID\n, (1) as k_Dispersion\n,((SELECT c.RURAL_PRICE FROM acta_precios c where c.ITEMS_ID = a.ACTIVIDAD AND c.MERCADO"
+" = 'MALAMBO' )*1) Valor_Total\nfrom modulo_orden_personal a\nwhere\na.REGION= 8\nand FECHALEGALIZATION >= (select (CONCA"
+"T(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(COD_"
+"ANO,COD_MES,'31')) from consulta_fecha_k_dispersion_ordcomerciales)\nand ESTADO = 8\nand ORTRINUR = 'R'\nand FRECUENCIA<"
+">3\nand ACTIVIDAD IN (147, \n1518, \n1534,\n1538, \n1539, \n1540, \n1541, \n1542, \n1544,\n1545, \n1546, \n1547,\n1548, "
+"\n1549,\n1550, \n1551, \n1552,\n1557,\n1558, \n1559, \n1560,\n1562, \n1564, \n1566, \n1567, \n1568, \n1569,\n1571,\n1577"
+", \n1578, \n1579, \n1581, \n1582, \n1584, \n1585,\n1586, \n1587, \n1591, \n1592, \n1593, \n1594, \n1595, \n1596, \n1598,"
+"\n1602,\n1606,\n1608, \n1611, \n1612, \n1613, \n1614, \n1615, \n1617, \n1618, \n1620, \n1625, \n1626, \n1629,\n1630, \n1"
+"631, \n1632,\n1633, \n1635, \n1638, \n1639, \n1640, \n1643, \n1644, \n1649,\n1650,\n1655, \n1656, \n1658, \n1660, \n1662"
+", \n1663, \n1664,\n1665, \n1666, \n1668, \n1670, \n1671, \n1672, \n1676, \n1677, \n1691,\n1693,\n1695,\n1699,\n1701,\n17"
+"04,\n1711, \n1712, \n1713, \n1717, \n1719, \n1720, \n1723, \n1724, \n1727, \n1728, \n1731,\n1732,\n1733, \n1735, \n1736,"
+" \n1752, \n1755,\n1757, \n1758,\n1763,\n1766, \n1777,\n1778,\n103198, \n103199, \n103200, \n7400024)";
			

            	globalMap.put("tDBInput_9_QUERY",dbquery_tDBInput_9);
		    java.sql.ResultSet rs_tDBInput_9 = null;

		    try {
		    	rs_tDBInput_9 = stmt_tDBInput_9.executeQuery(dbquery_tDBInput_9);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_9 = rs_tDBInput_9.getMetaData();
		    	int colQtyInRs_tDBInput_9 = rsmd_tDBInput_9.getColumnCount();

		    String tmpContent_tDBInput_9 = null;
		    
		    
		    while (rs_tDBInput_9.next()) {
		        nb_line_tDBInput_9++;
		        
							if(colQtyInRs_tDBInput_9 < 1) {
								row9.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row9.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 1, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 2) {
								row9.DESC_PROGRAMA = null;
							} else {
	                         		
        	row9.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 2, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 3) {
								row9.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row9.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_9, 3, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 4) {
								row9.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row9.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_9, 4, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 5) {
								row9.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row9.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 5, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 6) {
								row9.TAREA = null;
							} else {
	                         		
        	row9.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 6, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 7) {
								row9.DESCTAREA = null;
							} else {
	                         		
        	row9.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 7, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 8) {
								row9.ORDEN = null;
							} else {
	                         		
        	row9.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_9, 8, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 9) {
								row9.CICLO = null;
							} else {
	                         		
        	row9.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_9, 9, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 10) {
								row9.SERVICIO = null;
							} else {
	                         		
        	row9.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_9, 10, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 11) {
								row9.ESTADO = null;
							} else {
	                         		
        	row9.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_9, 11, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 12) {
								row9.DESC_ESTADO = null;
							} else {
	                         		
        	row9.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_9, 12, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 13) {
								row9.FECHACREATED = null;
							} else {
	                         		
        	row9.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_9, 13, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 14) {
								row9.OOPEN = null;
							} else {
	                         		
        	row9.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_9, 14, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 15) {
								row9.FECHALEGALIZATION = null;
							} else {
	                         		
        	row9.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_9, 15, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 16) {
								row9.HORALEGALIZATION = null;
							} else {
	                         		
        	row9.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_9, 16, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 17) {
								row9.INSTALACION = null;
							} else {
	                         		
        	row9.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_9, 17, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 18) {
								row9.URBANO_RURAL = null;
							} else {
	                         		
        	row9.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_9, 18, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 19) {
								row9.ORTRINUR = null;
							} else {
	                         		
        	row9.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_9, 19, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 20) {
								row9.DESCRIPCIONA = null;
							} else {
	                         		
        	row9.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 20, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 21) {
								row9.CIUDAD = null;
							} else {
	                         		
        	row9.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_9, 21, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 22) {
								row9.CMRUDESC = null;
							} else {
	                         		
        	row9.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_9, 22, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 23) {
								row9.REGION = null;
							} else {
	                         		
        	row9.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_9, 23, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 24) {
								row9.REGNDESC = null;
							} else {
	                         		
        	row9.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_9, 24, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 25) {
								row9.DEPACODI = null;
							} else {
	                         		
        	row9.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_9, 25, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 26) {
								row9.CODIGORESPUESTA = null;
							} else {
	                         		
        	row9.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 26, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 27) {
								row9.RESPUESTATENCION = null;
							} else {
	                         		
        	row9.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_9, 27, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 28) {
								row9.X = null;
							} else {
	                         		
        	row9.X = routines.system.JDBCUtil.getString(rs_tDBInput_9, 28, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 29) {
								row9.Y = null;
							} else {
	                         		
        	row9.Y = routines.system.JDBCUtil.getString(rs_tDBInput_9, 29, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 30) {
								row9.ANO = null;
							} else {
	                         		
        	row9.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_9, 30, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 31) {
								row9.MES = null;
							} else {
	                         		
        	row9.MES = routines.system.JDBCUtil.getString(rs_tDBInput_9, 31, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 32) {
								row9.DIA = null;
							} else {
	                         		
        	row9.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 32, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 33) {
								row9.DESC_CNA = null;
							} else {
	                         		
        	row9.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 33, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 34) {
								row9.ORDEN_OPEN = null;
							} else {
	                         		
        	row9.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_9, 34, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 35) {
								row9.ACTIVIDAD = null;
							} else {
	                         		
        	row9.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_9, 35, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 36) {
								row9.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row9.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_9, 36, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 37) {
								row9.FRECUENCIA = null;
							} else {
	                         		
        	row9.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_9, 37, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 38) {
								row9.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row9.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_9, 38, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 39) {
								row9.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row9.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_9, 39, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 40) {
								row9.ESTADO_CORTE = null;
							} else {
	                         		
        	row9.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_9, 40, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 41) {
								row9.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row9.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_9, 41, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 42) {
								row9.ROUTE_ID = null;
							} else {
	                         		
        	row9.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_9, 42, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 43) {
								row9.NAME_ = null;
							} else {
	                         		
        	row9.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_9, 43, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 44) {
								row9.NUMBER_ID = null;
							} else {
	                         		
        	row9.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_9, 44, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 45) {
								row9.k_Dispersion = null;
							} else {
	                         		
        	row9.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_9, 45, false);
		                    }
							if(colQtyInRs_tDBInput_9 < 46) {
								row9.Valor_Total = null;
							} else {
	                         		
        	row9.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_9, 46, false);
		                    }
					

 



/**
 * [tDBInput_9 begin ] stop
 */
	
	/**
	 * [tDBInput_9 main ] start
	 */

	

	
	
	currentComponent="tDBInput_9";

	

 


	tos_count_tDBInput_9++;

/**
 * [tDBInput_9 main ] stop
 */
	
	/**
	 * [tDBInput_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_9";

	

 



/**
 * [tDBInput_9 process_data_begin ] stop
 */

	
	/**
	 * [tMap_9 main ] start
	 */

	

	
	
	currentComponent="tMap_9";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row9");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_9 = false;
		  boolean mainRowRejected_tMap_9 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0'
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CODIGO_PROGRAMA = row9.CODIGO_PROGRAMA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_PROGRAMA = row9.DESC_PROGRAMA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CODIGO_EQUIPO = row9.CODIGO_EQUIPO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.EQUIPO_TRABAJO = row9.EQUIPO_TRABAJO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.UNIDAD_OPERATIVA = row9.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.NAME_ = row9.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.NUMBER_ID = row9.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.TAREA = row9.TAREA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESCTAREA = row9.DESCTAREA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ORDEN = row9.ORDEN;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CICLO = row9.CICLO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.SERVICIO = row9.SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ESTADO = row9.ESTADO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_ESTADO = row9.DESC_ESTADO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.FECHACREATED = row9.FECHACREATED;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.OOPEN = row9.OOPEN;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.FECHALEGALIZATION = row9.FECHALEGALIZATION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.HORALEGALIZATION = row9.HORALEGALIZATION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.INSTALACION = row9.INSTALACION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.URBANO_RURAL = row9.URBANO_RURAL;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ORTRINUR = row9.ORTRINUR;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESCRIPCIONA = row9.DESCRIPCIONA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CIUDAD = row9.CIUDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CMRUDESC = row9.CMRUDESC;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.REGION = row9.REGION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.REGNDESC = row9.REGNDESC;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DEPACODI = row9.DEPACODI;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CODIGORESPUESTA = row9.CODIGORESPUESTA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.RESPUESTATENCION = row9.RESPUESTATENCION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.X = row9.X;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.Y = row9.Y;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ANO = row9.ANO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.MES = row9.MES;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DIA = row9.DIA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_CNA = row9.DESC_CNA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ORDEN_OPEN = row9.ORDEN_OPEN;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ACTIVIDAD = row9.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.TIPO_ACTIVIDAD = row9.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.DESC_ACTIVIDAD = row9.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.FRECUENCIA = row9.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.CUENTAS_VENCIDAS = row9.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.SALDO_CUENTAS_VENCIDAS = row9.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ESTADO_CORTE = row9.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.ROUTE_ID = row9.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.k_Dispersion = row9.k_Dispersion;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp.Valor_Total = row9.Valor_Total;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 = copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_9 = false;










 


	tos_count_tMap_9++;

/**
 * [tMap_9 main ] stop
 */
	
	/**
	 * [tMap_9 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0"
if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0 != null) { 



	
	/**
	 * [tDBOutput_8 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0");
					}
					



        whetherReject_tDBOutput_8 = false;
                    if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN == null) {
pstmt_tDBOutput_8.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_8.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN);
}

            int checkCount_tDBOutput_8 = -1;
            try (java.sql.ResultSet rs_tDBOutput_8 = pstmt_tDBOutput_8.executeQuery()) {
                while(rs_tDBOutput_8.next()) {
                    checkCount_tDBOutput_8 = rs_tDBOutput_8.getInt(1);
                }
            }
            if(checkCount_tDBOutput_8 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA == null) {
pstmtUpdate_tDBOutput_8.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA == null) {
pstmtUpdate_tDBOutput_8.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO == null) {
pstmtUpdate_tDBOutput_8.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO == null) {
pstmtUpdate_tDBOutput_8.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_8.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_ == null) {
pstmtUpdate_tDBOutput_8.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_8.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA == null) {
pstmtUpdate_tDBOutput_8.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA == null) {
pstmtUpdate_tDBOutput_8.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO == null) {
pstmtUpdate_tDBOutput_8.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO == null) {
pstmtUpdate_tDBOutput_8.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO == null) {
pstmtUpdate_tDBOutput_8.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO == null) {
pstmtUpdate_tDBOutput_8.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED == null) {
pstmtUpdate_tDBOutput_8.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN == null) {
pstmtUpdate_tDBOutput_8.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION == null) {
pstmtUpdate_tDBOutput_8.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION == null) {
pstmtUpdate_tDBOutput_8.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION == null) {
pstmtUpdate_tDBOutput_8.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL == null) {
pstmtUpdate_tDBOutput_8.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR == null) {
pstmtUpdate_tDBOutput_8.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA == null) {
pstmtUpdate_tDBOutput_8.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD == null) {
pstmtUpdate_tDBOutput_8.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC == null) {
pstmtUpdate_tDBOutput_8.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION == null) {
pstmtUpdate_tDBOutput_8.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC == null) {
pstmtUpdate_tDBOutput_8.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI == null) {
pstmtUpdate_tDBOutput_8.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA == null) {
pstmtUpdate_tDBOutput_8.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION == null) {
pstmtUpdate_tDBOutput_8.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X == null) {
pstmtUpdate_tDBOutput_8.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y == null) {
pstmtUpdate_tDBOutput_8.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO == null) {
pstmtUpdate_tDBOutput_8.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES == null) {
pstmtUpdate_tDBOutput_8.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA == null) {
pstmtUpdate_tDBOutput_8.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA == null) {
pstmtUpdate_tDBOutput_8.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN == null) {
pstmtUpdate_tDBOutput_8.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_8.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_8.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_8.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_8.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_8.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_8.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_8.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_8.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion == null) {
pstmtUpdate_tDBOutput_8.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total == null) {
pstmtUpdate_tDBOutput_8.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN == null) {
pstmtUpdate_tDBOutput_8.setNull(46 + count_tDBOutput_8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_8.setString(46 + count_tDBOutput_8, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN);
}

                try {
                    updatedCount_tDBOutput_8 = updatedCount_tDBOutput_8 + pstmtUpdate_tDBOutput_8.executeUpdate();
                    nb_line_tDBOutput_8++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_8 = true;
                        nb_line_tDBOutput_8++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA == null) {
pstmtInsert_tDBOutput_8.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA == null) {
pstmtInsert_tDBOutput_8.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_PROGRAMA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO == null) {
pstmtInsert_tDBOutput_8.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGO_EQUIPO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO == null) {
pstmtInsert_tDBOutput_8.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.EQUIPO_TRABAJO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_8.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_ == null) {
pstmtInsert_tDBOutput_8.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_8.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA == null) {
pstmtInsert_tDBOutput_8.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA == null) {
pstmtInsert_tDBOutput_8.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCTAREA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN == null) {
pstmtInsert_tDBOutput_8.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO == null) {
pstmtInsert_tDBOutput_8.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CICLO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO == null) {
pstmtInsert_tDBOutput_8.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO == null) {
pstmtInsert_tDBOutput_8.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO == null) {
pstmtInsert_tDBOutput_8.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ESTADO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED == null) {
pstmtInsert_tDBOutput_8.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHACREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN == null) {
pstmtInsert_tDBOutput_8.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.OOPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION == null) {
pstmtInsert_tDBOutput_8.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FECHALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION == null) {
pstmtInsert_tDBOutput_8.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.HORALEGALIZATION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION == null) {
pstmtInsert_tDBOutput_8.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.INSTALACION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL == null) {
pstmtInsert_tDBOutput_8.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.URBANO_RURAL);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR == null) {
pstmtInsert_tDBOutput_8.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORTRINUR);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA == null) {
pstmtInsert_tDBOutput_8.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESCRIPCIONA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD == null) {
pstmtInsert_tDBOutput_8.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CIUDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC == null) {
pstmtInsert_tDBOutput_8.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CMRUDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION == null) {
pstmtInsert_tDBOutput_8.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC == null) {
pstmtInsert_tDBOutput_8.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.REGNDESC);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI == null) {
pstmtInsert_tDBOutput_8.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DEPACODI);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA == null) {
pstmtInsert_tDBOutput_8.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CODIGORESPUESTA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION == null) {
pstmtInsert_tDBOutput_8.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.RESPUESTATENCION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X == null) {
pstmtInsert_tDBOutput_8.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.X);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y == null) {
pstmtInsert_tDBOutput_8.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO == null) {
pstmtInsert_tDBOutput_8.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ANO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES == null) {
pstmtInsert_tDBOutput_8.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.MES);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA == null) {
pstmtInsert_tDBOutput_8.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA == null) {
pstmtInsert_tDBOutput_8.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_CNA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN == null) {
pstmtInsert_tDBOutput_8.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ORDEN_OPEN);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_8.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_8.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_8.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_8.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_8.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_8.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_8.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_8.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion == null) {
pstmtInsert_tDBOutput_8.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.k_Dispersion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total == null) {
pstmtInsert_tDBOutput_8.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_8.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0.Valor_Total);
}

                try {
                    insertedCount_tDBOutput_8 = insertedCount_tDBOutput_8 + pstmtInsert_tDBOutput_8.executeUpdate();
                    nb_line_tDBOutput_8++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_8 = true;
                        nb_line_tDBOutput_8++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_8) {
            }
                commitCounter_tDBOutput_8++;

                if(commitEvery_tDBOutput_8 <= commitCounter_tDBOutput_8) {

                    conn_tDBOutput_8.commit();
                    commitCounter_tDBOutput_8=0;

                }


 


	tos_count_tDBOutput_8++;

/**
 * [tDBOutput_8 main ] stop
 */
	
	/**
	 * [tDBOutput_8 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";

	

 



/**
 * [tDBOutput_8 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_8 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";

	

 



/**
 * [tDBOutput_8 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0"




	
	/**
	 * [tMap_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_9 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_9";

	

 



/**
 * [tDBInput_9 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_9 end ] start
	 */

	

	
	
	currentComponent="tDBInput_9";

	

	}
}finally{
	if (rs_tDBInput_9 != null) {
		rs_tDBInput_9.close();
	}
	if (stmt_tDBInput_9 != null) {
		stmt_tDBInput_9.close();
	}
		if(conn_tDBInput_9 != null && !conn_tDBInput_9.isClosed()) {
			
			conn_tDBInput_9.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_9_NB_LINE",nb_line_tDBInput_9);
		


 

ok_Hash.put("tDBInput_9", true);
end_Hash.put("tDBInput_9", System.currentTimeMillis());




/**
 * [tDBInput_9 end ] stop
 */

	
	/**
	 * [tMap_9 end ] start
	 */

	

	
	
	currentComponent="tMap_9";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row9");
			  	}
			  	
 

ok_Hash.put("tMap_9", true);
end_Hash.put("tMap_9", System.currentTimeMillis());




/**
 * [tMap_9 end ] stop
 */

	
	/**
	 * [tDBOutput_8 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";

	



        if(pstmtUpdate_tDBOutput_8 != null){
            pstmtUpdate_tDBOutput_8.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_8");
        }
        if(pstmtInsert_tDBOutput_8 != null){
            pstmtInsert_tDBOutput_8.close();
            resourceMap.remove("pstmtInsert_tDBOutput_8");
        }
        if(pstmt_tDBOutput_8 != null) {
            pstmt_tDBOutput_8.close();
            resourceMap.remove("pstmt_tDBOutput_8");
        }
    resourceMap.put("statementClosed_tDBOutput_8", true);
    	if (commitCounter_tDBOutput_8 > 0) {
    		
    		conn_tDBOutput_8.commit();
    		
    	}
    		
		
    	conn_tDBOutput_8 .close();
    	
    	resourceMap.put("finish_tDBOutput_8", true);
    	

	nb_line_deleted_tDBOutput_8=nb_line_deleted_tDBOutput_8+ deletedCount_tDBOutput_8;
	nb_line_update_tDBOutput_8=nb_line_update_tDBOutput_8 + updatedCount_tDBOutput_8;
	nb_line_inserted_tDBOutput_8=nb_line_inserted_tDBOutput_8 + insertedCount_tDBOutput_8;
	nb_line_rejected_tDBOutput_8=nb_line_rejected_tDBOutput_8 + rejectedCount_tDBOutput_8;
	
        globalMap.put("tDBOutput_8_NB_LINE",nb_line_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_UPDATED",nb_line_update_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_DELETED",nb_line_deleted_tDBOutput_8);
        globalMap.put("tDBOutput_8_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_8);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_8", true);
end_Hash.put("tDBOutput_8", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk8", 0, "ok");
				}
				tDBInput_7Process(globalMap);



/**
 * [tDBOutput_8 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_9 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_9";

	

 



/**
 * [tDBInput_9 finally ] stop
 */

	
	/**
	 * [tMap_9 finally ] start
	 */

	

	
	
	currentComponent="tMap_9";

	

 



/**
 * [tMap_9 finally ] stop
 */

	
	/**
	 * [tDBOutput_8 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_8";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_8") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_8 = null;
                if ((pstmtUpdateToClose_tDBOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_8")) != null) {
                    pstmtUpdateToClose_tDBOutput_8.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_8 = null;
                if ((pstmtInsertToClose_tDBOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_8")) != null) {
                    pstmtInsertToClose_tDBOutput_8.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_8 = null;
                if ((pstmtToClose_tDBOutput_8 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_8")) != null) {
                    pstmtToClose_tDBOutput_8.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_8") == null){
            java.sql.Connection ctn_tDBOutput_8 = null;
            if((ctn_tDBOutput_8 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_8")) != null){
                try {
                    ctn_tDBOutput_8.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_8) {
                    String errorMessage_tDBOutput_8 = "failed to close the connection in tDBOutput_8 :" + sqlEx_tDBOutput_8.getMessage();
                    System.err.println(errorMessage_tDBOutput_8);
                }
            }
        }
    }
 



/**
 * [tDBOutput_8 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_9_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ORDEN == null) ? 0 : this.ORDEN.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct) obj;
		
						if (this.ORDEN == null) {
							if (other.ORDEN != null)
								return false;
						
						} else if (!this.ORDEN.equals(other.ORDEN))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.CODIGO_PROGRAMA = this.CODIGO_PROGRAMA;
	            other.DESC_PROGRAMA = this.DESC_PROGRAMA;
	            other.CODIGO_EQUIPO = this.CODIGO_EQUIPO;
	            other.EQUIPO_TRABAJO = this.EQUIPO_TRABAJO;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.TAREA = this.TAREA;
	            other.DESCTAREA = this.DESCTAREA;
	            other.ORDEN = this.ORDEN;
	            other.CICLO = this.CICLO;
	            other.SERVICIO = this.SERVICIO;
	            other.ESTADO = this.ESTADO;
	            other.DESC_ESTADO = this.DESC_ESTADO;
	            other.FECHACREATED = this.FECHACREATED;
	            other.OOPEN = this.OOPEN;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.HORALEGALIZATION = this.HORALEGALIZATION;
	            other.INSTALACION = this.INSTALACION;
	            other.URBANO_RURAL = this.URBANO_RURAL;
	            other.ORTRINUR = this.ORTRINUR;
	            other.DESCRIPCIONA = this.DESCRIPCIONA;
	            other.CIUDAD = this.CIUDAD;
	            other.CMRUDESC = this.CMRUDESC;
	            other.REGION = this.REGION;
	            other.REGNDESC = this.REGNDESC;
	            other.DEPACODI = this.DEPACODI;
	            other.CODIGORESPUESTA = this.CODIGORESPUESTA;
	            other.RESPUESTATENCION = this.RESPUESTATENCION;
	            other.X = this.X;
	            other.Y = this.Y;
	            other.ANO = this.ANO;
	            other.MES = this.MES;
	            other.DIA = this.DIA;
	            other.DESC_CNA = this.DESC_CNA;
	            other.ORDEN_OPEN = this.ORDEN_OPEN;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.k_Dispersion = this.k_Dispersion;
	            other.Valor_Total = this.Valor_Total;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		other.ORDEN = this.ORDEN;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ORDEN, other.ORDEN);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[0];

	
			    public String CODIGO_PROGRAMA;

				public String getCODIGO_PROGRAMA () {
					return this.CODIGO_PROGRAMA;
				}
				
			    public String DESC_PROGRAMA;

				public String getDESC_PROGRAMA () {
					return this.DESC_PROGRAMA;
				}
				
			    public String CODIGO_EQUIPO;

				public String getCODIGO_EQUIPO () {
					return this.CODIGO_EQUIPO;
				}
				
			    public String EQUIPO_TRABAJO;

				public String getEQUIPO_TRABAJO () {
					return this.EQUIPO_TRABAJO;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String TAREA;

				public String getTAREA () {
					return this.TAREA;
				}
				
			    public String DESCTAREA;

				public String getDESCTAREA () {
					return this.DESCTAREA;
				}
				
			    public String ORDEN;

				public String getORDEN () {
					return this.ORDEN;
				}
				
			    public String CICLO;

				public String getCICLO () {
					return this.CICLO;
				}
				
			    public String SERVICIO;

				public String getSERVICIO () {
					return this.SERVICIO;
				}
				
			    public String ESTADO;

				public String getESTADO () {
					return this.ESTADO;
				}
				
			    public String DESC_ESTADO;

				public String getDESC_ESTADO () {
					return this.DESC_ESTADO;
				}
				
			    public String FECHACREATED;

				public String getFECHACREATED () {
					return this.FECHACREATED;
				}
				
			    public String OOPEN;

				public String getOOPEN () {
					return this.OOPEN;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String HORALEGALIZATION;

				public String getHORALEGALIZATION () {
					return this.HORALEGALIZATION;
				}
				
			    public String INSTALACION;

				public String getINSTALACION () {
					return this.INSTALACION;
				}
				
			    public String URBANO_RURAL;

				public String getURBANO_RURAL () {
					return this.URBANO_RURAL;
				}
				
			    public String ORTRINUR;

				public String getORTRINUR () {
					return this.ORTRINUR;
				}
				
			    public String DESCRIPCIONA;

				public String getDESCRIPCIONA () {
					return this.DESCRIPCIONA;
				}
				
			    public String CIUDAD;

				public String getCIUDAD () {
					return this.CIUDAD;
				}
				
			    public String CMRUDESC;

				public String getCMRUDESC () {
					return this.CMRUDESC;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DEPACODI;

				public String getDEPACODI () {
					return this.DEPACODI;
				}
				
			    public String CODIGORESPUESTA;

				public String getCODIGORESPUESTA () {
					return this.CODIGORESPUESTA;
				}
				
			    public String RESPUESTATENCION;

				public String getRESPUESTATENCION () {
					return this.RESPUESTATENCION;
				}
				
			    public String X;

				public String getX () {
					return this.X;
				}
				
			    public String Y;

				public String getY () {
					return this.Y;
				}
				
			    public String ANO;

				public String getANO () {
					return this.ANO;
				}
				
			    public String MES;

				public String getMES () {
					return this.MES;
				}
				
			    public String DIA;

				public String getDIA () {
					return this.DIA;
				}
				
			    public String DESC_CNA;

				public String getDESC_CNA () {
					return this.DESC_CNA;
				}
				
			    public String ORDEN_OPEN;

				public String getORDEN_OPEN () {
					return this.ORDEN_OPEN;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String k_Dispersion;

				public String getK_Dispersion () {
					return this.k_Dispersion;
				}
				
			    public String Valor_Total;

				public String getValor_Total () {
					return this.Valor_Total;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio.length == 0) {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_ordenes_comerciales_k_precio, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_ordenes_comerciales_k_precio) {

        	try {

        		int length = 0;
		
					this.CODIGO_PROGRAMA = readString(dis);
					
					this.DESC_PROGRAMA = readString(dis);
					
					this.CODIGO_EQUIPO = readString(dis);
					
					this.EQUIPO_TRABAJO = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.TAREA = readString(dis);
					
					this.DESCTAREA = readString(dis);
					
					this.ORDEN = readString(dis);
					
					this.CICLO = readString(dis);
					
					this.SERVICIO = readString(dis);
					
					this.ESTADO = readString(dis);
					
					this.DESC_ESTADO = readString(dis);
					
					this.FECHACREATED = readString(dis);
					
					this.OOPEN = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.HORALEGALIZATION = readString(dis);
					
					this.INSTALACION = readString(dis);
					
					this.URBANO_RURAL = readString(dis);
					
					this.ORTRINUR = readString(dis);
					
					this.DESCRIPCIONA = readString(dis);
					
					this.CIUDAD = readString(dis);
					
					this.CMRUDESC = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DEPACODI = readString(dis);
					
					this.CODIGORESPUESTA = readString(dis);
					
					this.RESPUESTATENCION = readString(dis);
					
					this.X = readString(dis);
					
					this.Y = readString(dis);
					
					this.ANO = readString(dis);
					
					this.MES = readString(dis);
					
					this.DIA = readString(dis);
					
					this.DESC_CNA = readString(dis);
					
					this.ORDEN_OPEN = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.k_Dispersion = readString(dis);
					
					this.Valor_Total = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.CODIGO_PROGRAMA,dos);
					
					// String
				
						writeString(this.DESC_PROGRAMA,dos);
					
					// String
				
						writeString(this.CODIGO_EQUIPO,dos);
					
					// String
				
						writeString(this.EQUIPO_TRABAJO,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.TAREA,dos);
					
					// String
				
						writeString(this.DESCTAREA,dos);
					
					// String
				
						writeString(this.ORDEN,dos);
					
					// String
				
						writeString(this.CICLO,dos);
					
					// String
				
						writeString(this.SERVICIO,dos);
					
					// String
				
						writeString(this.ESTADO,dos);
					
					// String
				
						writeString(this.DESC_ESTADO,dos);
					
					// String
				
						writeString(this.FECHACREATED,dos);
					
					// String
				
						writeString(this.OOPEN,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.HORALEGALIZATION,dos);
					
					// String
				
						writeString(this.INSTALACION,dos);
					
					// String
				
						writeString(this.URBANO_RURAL,dos);
					
					// String
				
						writeString(this.ORTRINUR,dos);
					
					// String
				
						writeString(this.DESCRIPCIONA,dos);
					
					// String
				
						writeString(this.CIUDAD,dos);
					
					// String
				
						writeString(this.CMRUDESC,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DEPACODI,dos);
					
					// String
				
						writeString(this.CODIGORESPUESTA,dos);
					
					// String
				
						writeString(this.RESPUESTATENCION,dos);
					
					// String
				
						writeString(this.X,dos);
					
					// String
				
						writeString(this.Y,dos);
					
					// String
				
						writeString(this.ANO,dos);
					
					// String
				
						writeString(this.MES,dos);
					
					// String
				
						writeString(this.DIA,dos);
					
					// String
				
						writeString(this.DESC_CNA,dos);
					
					// String
				
						writeString(this.ORDEN_OPEN,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.k_Dispersion,dos);
					
					// String
				
						writeString(this.Valor_Total,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("CODIGO_PROGRAMA="+CODIGO_PROGRAMA);
		sb.append(",DESC_PROGRAMA="+DESC_PROGRAMA);
		sb.append(",CODIGO_EQUIPO="+CODIGO_EQUIPO);
		sb.append(",EQUIPO_TRABAJO="+EQUIPO_TRABAJO);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",TAREA="+TAREA);
		sb.append(",DESCTAREA="+DESCTAREA);
		sb.append(",ORDEN="+ORDEN);
		sb.append(",CICLO="+CICLO);
		sb.append(",SERVICIO="+SERVICIO);
		sb.append(",ESTADO="+ESTADO);
		sb.append(",DESC_ESTADO="+DESC_ESTADO);
		sb.append(",FECHACREATED="+FECHACREATED);
		sb.append(",OOPEN="+OOPEN);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",HORALEGALIZATION="+HORALEGALIZATION);
		sb.append(",INSTALACION="+INSTALACION);
		sb.append(",URBANO_RURAL="+URBANO_RURAL);
		sb.append(",ORTRINUR="+ORTRINUR);
		sb.append(",DESCRIPCIONA="+DESCRIPCIONA);
		sb.append(",CIUDAD="+CIUDAD);
		sb.append(",CMRUDESC="+CMRUDESC);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DEPACODI="+DEPACODI);
		sb.append(",CODIGORESPUESTA="+CODIGORESPUESTA);
		sb.append(",RESPUESTATENCION="+RESPUESTATENCION);
		sb.append(",X="+X);
		sb.append(",Y="+Y);
		sb.append(",ANO="+ANO);
		sb.append(",MES="+MES);
		sb.append(",DIA="+DIA);
		sb.append(",DESC_CNA="+DESC_CNA);
		sb.append(",ORDEN_OPEN="+ORDEN_OPEN);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",k_Dispersion="+k_Dispersion);
		sb.append(",Valor_Total="+Valor_Total);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row7Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_7_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row7Struct row7 = new row7Struct();
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = new copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct();





	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		int columnIndex_tFileOutputExcel_1 = 0;
		
		String fileName_tFileOutputExcel_1="C:/Users/Administrador/OneDrive - ingeomega.com/03_Procesos Informáticos/10 Alexander Orozco/02 Acta Con Precio/Ordenes Comerciales Cerradas Con Precio.xlsx";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		
		xlsxTool_tFileOutputExcel_1.setSheet("Ordenes_Comerciales_Cerrada_01_31");
		xlsxTool_tFileOutputExcel_1.setAppend(false,false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_PROGRAMA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESC_PROGRAMA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_EQUIPO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("EQUIPO_TRABAJO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("UNIDAD_OPERATIVA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NAME_");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NUMBER_ID");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TAREA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESCTAREA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ORDEN");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CICLO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("SERVICIO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ESTADO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESC_ESTADO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FECHACREATED");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("OOPEN");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FECHALEGALIZATION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("HORALEGALIZATION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("INSTALACION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("URBANO_RURAL");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ORTRINUR");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESCRIPCIONA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CIUDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CMRUDESC");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("REGION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("REGNDESC");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DEPACODI");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGORESPUESTA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("RESPUESTATENCION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("X");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Y");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ANO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("MES");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DIA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESC_CNA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ORDEN_OPEN");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TIPO_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESC_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FRECUENCIA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CUENTAS_VENCIDAS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("SALDO_CUENTAS_VENCIDAS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ESTADO_CORTE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ROUTE_ID");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("k_Dispersion");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Valor_Total");
		
		nb_line_tFileOutputExcel_1++; 
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tMap_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_7", false);
		start_Hash.put("tMap_7", System.currentTimeMillis());
		
	
	currentComponent="tMap_7";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row7");
					}
				
		int tos_count_tMap_7 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_7__Struct  {
}
Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_7 begin ] stop
 */



	
	/**
	 * [tDBInput_7 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_7", false);
		start_Hash.put("tDBInput_7", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_7";

	
		int tos_count_tDBInput_7 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_7 = java.util.Calendar.getInstance();
		    calendar_tDBInput_7.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_7 = calendar_tDBInput_7.getTime();
		    int nb_line_tDBInput_7 = 0;
		    java.sql.Connection conn_tDBInput_7 = null;
				String driverClass_tDBInput_7 = "org.mariadb.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_7 = java.lang.Class.forName(driverClass_tDBInput_7);
				String dbUser_tDBInput_7 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_7 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:ijBuBNGonz/IB60abAr+8i1Hdb6uM6hYmqgOC/jYr8vcNNl5iQsLO5U=");
				
				String dbPwd_tDBInput_7 = decryptedPassword_tDBInput_7;
				
				String url_tDBInput_7 = "jdbc:mariadb://" + "172.17.17.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_7 = java.sql.DriverManager.getConnection(url_tDBInput_7,dbUser_tDBInput_7,dbPwd_tDBInput_7);
		        
		    
			java.sql.Statement stmt_tDBInput_7 = conn_tDBInput_7.createStatement();

		    String dbquery_tDBInput_7 = "SELECT * FROM \nmodulo_orden_kdispersion\nWHERE\nFECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consu"
+"lta_fecha_k_dispersion_ordcomerciales)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fe"
+"cha_k_dispersion_ordcomerciales)\n";
			

            	globalMap.put("tDBInput_7_QUERY",dbquery_tDBInput_7);
		    java.sql.ResultSet rs_tDBInput_7 = null;

		    try {
		    	rs_tDBInput_7 = stmt_tDBInput_7.executeQuery(dbquery_tDBInput_7);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_7 = rs_tDBInput_7.getMetaData();
		    	int colQtyInRs_tDBInput_7 = rsmd_tDBInput_7.getColumnCount();

		    String tmpContent_tDBInput_7 = null;
		    
		    
		    while (rs_tDBInput_7.next()) {
		        nb_line_tDBInput_7++;
		        
							if(colQtyInRs_tDBInput_7 < 1) {
								row7.CODIGO_PROGRAMA = null;
							} else {
	                         		
        	row7.CODIGO_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 1, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 2) {
								row7.DESC_PROGRAMA = null;
							} else {
	                         		
        	row7.DESC_PROGRAMA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 2, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 3) {
								row7.CODIGO_EQUIPO = null;
							} else {
	                         		
        	row7.CODIGO_EQUIPO = routines.system.JDBCUtil.getString(rs_tDBInput_7, 3, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 4) {
								row7.EQUIPO_TRABAJO = null;
							} else {
	                         		
        	row7.EQUIPO_TRABAJO = routines.system.JDBCUtil.getString(rs_tDBInput_7, 4, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 5) {
								row7.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row7.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 5, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 6) {
								row7.NAME_ = null;
							} else {
	                         		
        	row7.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_7, 6, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 7) {
								row7.NUMBER_ID = null;
							} else {
	                         		
        	row7.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_7, 7, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 8) {
								row7.TAREA = null;
							} else {
	                         		
        	row7.TAREA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 8, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 9) {
								row7.DESCTAREA = null;
							} else {
	                         		
        	row7.DESCTAREA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 9, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 10) {
								row7.ORDEN = null;
							} else {
	                         		
        	row7.ORDEN = routines.system.JDBCUtil.getString(rs_tDBInput_7, 10, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 11) {
								row7.CICLO = null;
							} else {
	                         		
        	row7.CICLO = routines.system.JDBCUtil.getString(rs_tDBInput_7, 11, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 12) {
								row7.SERVICIO = null;
							} else {
	                         		
        	row7.SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_7, 12, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 13) {
								row7.ESTADO = null;
							} else {
	                         		
        	row7.ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_7, 13, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 14) {
								row7.DESC_ESTADO = null;
							} else {
	                         		
        	row7.DESC_ESTADO = routines.system.JDBCUtil.getString(rs_tDBInput_7, 14, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 15) {
								row7.FECHACREATED = null;
							} else {
	                         		
        	row7.FECHACREATED = routines.system.JDBCUtil.getString(rs_tDBInput_7, 15, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 16) {
								row7.OOPEN = null;
							} else {
	                         		
        	row7.OOPEN = routines.system.JDBCUtil.getString(rs_tDBInput_7, 16, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 17) {
								row7.FECHALEGALIZATION = null;
							} else {
	                         		
        	row7.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_7, 17, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 18) {
								row7.HORALEGALIZATION = null;
							} else {
	                         		
        	row7.HORALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_7, 18, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 19) {
								row7.INSTALACION = null;
							} else {
	                         		
        	row7.INSTALACION = routines.system.JDBCUtil.getString(rs_tDBInput_7, 19, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 20) {
								row7.URBANO_RURAL = null;
							} else {
	                         		
        	row7.URBANO_RURAL = routines.system.JDBCUtil.getString(rs_tDBInput_7, 20, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 21) {
								row7.ORTRINUR = null;
							} else {
	                         		
        	row7.ORTRINUR = routines.system.JDBCUtil.getString(rs_tDBInput_7, 21, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 22) {
								row7.DESCRIPCIONA = null;
							} else {
	                         		
        	row7.DESCRIPCIONA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 22, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 23) {
								row7.CIUDAD = null;
							} else {
	                         		
        	row7.CIUDAD = routines.system.JDBCUtil.getString(rs_tDBInput_7, 23, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 24) {
								row7.CMRUDESC = null;
							} else {
	                         		
        	row7.CMRUDESC = routines.system.JDBCUtil.getString(rs_tDBInput_7, 24, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 25) {
								row7.REGION = null;
							} else {
	                         		
        	row7.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_7, 25, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 26) {
								row7.REGNDESC = null;
							} else {
	                         		
        	row7.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_7, 26, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 27) {
								row7.DEPACODI = null;
							} else {
	                         		
        	row7.DEPACODI = routines.system.JDBCUtil.getString(rs_tDBInput_7, 27, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 28) {
								row7.CODIGORESPUESTA = null;
							} else {
	                         		
        	row7.CODIGORESPUESTA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 28, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 29) {
								row7.RESPUESTATENCION = null;
							} else {
	                         		
        	row7.RESPUESTATENCION = routines.system.JDBCUtil.getString(rs_tDBInput_7, 29, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 30) {
								row7.X = null;
							} else {
	                         		
        	row7.X = routines.system.JDBCUtil.getString(rs_tDBInput_7, 30, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 31) {
								row7.Y = null;
							} else {
	                         		
        	row7.Y = routines.system.JDBCUtil.getString(rs_tDBInput_7, 31, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 32) {
								row7.ANO = null;
							} else {
	                         		
        	row7.ANO = routines.system.JDBCUtil.getString(rs_tDBInput_7, 32, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 33) {
								row7.MES = null;
							} else {
	                         		
        	row7.MES = routines.system.JDBCUtil.getString(rs_tDBInput_7, 33, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 34) {
								row7.DIA = null;
							} else {
	                         		
        	row7.DIA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 34, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 35) {
								row7.DESC_CNA = null;
							} else {
	                         		
        	row7.DESC_CNA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 35, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 36) {
								row7.ORDEN_OPEN = null;
							} else {
	                         		
        	row7.ORDEN_OPEN = routines.system.JDBCUtil.getString(rs_tDBInput_7, 36, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 37) {
								row7.ACTIVIDAD = null;
							} else {
	                         		
        	row7.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_7, 37, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 38) {
								row7.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row7.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_7, 38, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 39) {
								row7.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row7.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_7, 39, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 40) {
								row7.FRECUENCIA = null;
							} else {
	                         		
        	row7.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_7, 40, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 41) {
								row7.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row7.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_7, 41, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 42) {
								row7.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row7.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_7, 42, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 43) {
								row7.ESTADO_CORTE = null;
							} else {
	                         		
        	row7.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_7, 43, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 44) {
								row7.ROUTE_ID = null;
							} else {
	                         		
        	row7.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_7, 44, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 45) {
								row7.k_Dispersion = null;
							} else {
	                         		
        	row7.k_Dispersion = routines.system.JDBCUtil.getString(rs_tDBInput_7, 45, false);
		                    }
							if(colQtyInRs_tDBInput_7 < 46) {
								row7.Valor_Total = null;
							} else {
	                         		
        	row7.Valor_Total = routines.system.JDBCUtil.getString(rs_tDBInput_7, 46, false);
		                    }
					

 



/**
 * [tDBInput_7 begin ] stop
 */
	
	/**
	 * [tDBInput_7 main ] start
	 */

	

	
	
	currentComponent="tDBInput_7";

	

 


	tos_count_tDBInput_7++;

/**
 * [tDBInput_7 main ] stop
 */
	
	/**
	 * [tDBInput_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_7";

	

 



/**
 * [tDBInput_7 process_data_begin ] stop
 */

	
	/**
	 * [tMap_7 main ] start
	 */

	

	
	
	currentComponent="tMap_7";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row7");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_7 = false;
		  boolean mainRowRejected_tMap_7 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0'
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_PROGRAMA = row7.CODIGO_PROGRAMA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_PROGRAMA = row7.DESC_PROGRAMA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGO_EQUIPO = row7.CODIGO_EQUIPO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.EQUIPO_TRABAJO = row7.EQUIPO_TRABAJO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.UNIDAD_OPERATIVA = row7.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NAME_ = row7.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.NUMBER_ID = row7.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TAREA = row7.TAREA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCTAREA = row7.DESCTAREA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN = row7.ORDEN;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CICLO = row7.CICLO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SERVICIO = row7.SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO = row7.ESTADO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ESTADO = row7.DESC_ESTADO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHACREATED = row7.FECHACREATED;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.OOPEN = row7.OOPEN;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FECHALEGALIZATION = row7.FECHALEGALIZATION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.HORALEGALIZATION = row7.HORALEGALIZATION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.INSTALACION = row7.INSTALACION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.URBANO_RURAL = row7.URBANO_RURAL;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORTRINUR = row7.ORTRINUR;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESCRIPCIONA = row7.DESCRIPCIONA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CIUDAD = row7.CIUDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CMRUDESC = row7.CMRUDESC;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGION = row7.REGION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.REGNDESC = row7.REGNDESC;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DEPACODI = row7.DEPACODI;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CODIGORESPUESTA = row7.CODIGORESPUESTA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.RESPUESTATENCION = row7.RESPUESTATENCION;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.X = row7.X;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Y = row7.Y;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ANO = row7.ANO;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.MES = row7.MES;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DIA = row7.DIA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_CNA = row7.DESC_CNA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ORDEN_OPEN = row7.ORDEN_OPEN;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ACTIVIDAD = row7.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.TIPO_ACTIVIDAD = row7.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.DESC_ACTIVIDAD = row7.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.FRECUENCIA = row7.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.CUENTAS_VENCIDAS = row7.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.SALDO_CUENTAS_VENCIDAS = row7.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ESTADO_CORTE = row7.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.ROUTE_ID = row7.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.k_Dispersion = row7.k_Dispersion;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp.Valor_Total = row7.Valor_Total;
copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 = copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_7 = false;










 


	tos_count_tMap_7++;

/**
 * [tMap_7 main ] stop
 */
	
	/**
	 * [tMap_7 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0"
if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0 != null) { 



	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_PROGRAMA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_PROGRAMA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGO_EQUIPO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.EQUIPO_TRABAJO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.UNIDAD_OPERATIVA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NAME_));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.NUMBER_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TAREA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCTAREA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CICLO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SERVICIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ESTADO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHACREATED));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.OOPEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FECHALEGALIZATION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.HORALEGALIZATION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.INSTALACION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.URBANO_RURAL));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORTRINUR));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESCRIPCIONA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CIUDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CMRUDESC));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.REGNDESC));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DEPACODI));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CODIGORESPUESTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.RESPUESTATENCION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.X));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Y));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ANO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.MES));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DIA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_CNA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ORDEN_OPEN));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.TIPO_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.DESC_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.FRECUENCIA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.CUENTAS_VENCIDAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.SALDO_CUENTAS_VENCIDAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ESTADO_CORTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.ROUTE_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.k_Dispersion));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0.Valor_Total));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0"




	
	/**
	 * [tMap_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_7 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_7";

	

 



/**
 * [tDBInput_7 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_7 end ] start
	 */

	

	
	
	currentComponent="tDBInput_7";

	

	}
}finally{
	if (rs_tDBInput_7 != null) {
		rs_tDBInput_7.close();
	}
	if (stmt_tDBInput_7 != null) {
		stmt_tDBInput_7.close();
	}
		if(conn_tDBInput_7 != null && !conn_tDBInput_7.isClosed()) {
			
			conn_tDBInput_7.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_7_NB_LINE",nb_line_tDBInput_7);
		


 

ok_Hash.put("tDBInput_7", true);
end_Hash.put("tDBInput_7", System.currentTimeMillis());




/**
 * [tDBInput_7 end ] stop
 */

	
	/**
	 * [tMap_7 end ] start
	 */

	

	
	
	currentComponent="tMap_7";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row7");
			  	}
			  	
 

ok_Hash.put("tMap_7", true);
end_Hash.put("tMap_7", System.currentTimeMillis());




/**
 * [tMap_7 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfTrimestral_K2_U_Regional_0");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());




/**
 * [tFileOutputExcel_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_7 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_7";

	

 



/**
 * [tDBInput_7 finally ] stop
 */

	
	/**
	 * [tMap_7 finally ] start
	 */

	

	
	
	currentComponent="tMap_7";

	

 



/**
 * [tMap_7 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_7_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    private PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    

    public static void main(String[] args){
        final ordenes_comerciales_k_precio ordenes_comerciales_k_precioClass = new ordenes_comerciales_k_precio();

        int exitCode = ordenes_comerciales_k_precioClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = ordenes_comerciales_k_precio.class.getClassLoader().getResourceAsStream("local_project/ordenes_comerciales_k_precio_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = ordenes_comerciales_k_precio.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                //defaultProps is in order to keep the original context value
                if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                }
                
                inContext.close();
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();




this.globalResumeTicket = true;//to run tPreJob




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tDBInput_1Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tDBInput_1) {
globalMap.put("tDBInput_1_SUBPROCESS_STATE", -1);

e_tDBInput_1.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : ordenes_comerciales_k_precio");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;
    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {


    }














    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();







        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     878834 characters generated by Talend Open Studio for Big Data 
 *     on the 26 de abril de 2022 10:16:15 AM COT
 ************************************************************************************************/