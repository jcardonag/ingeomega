// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


package local_project.crear_acta_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;
 





@SuppressWarnings("unused")

/**
 * Job: Crear_acta Purpose: Crear_acta<br>
 * Description: Crea el acta de lectura con todos los valores y segmentaciones <br>
 * @author user@talend.com
 * @version 7.3.1.20200219_1130
 * @status 
 */
public class Crear_acta implements TalendJob {

protected static void logIgnoredError(String message, Throwable cause) {
       System.err.println(message);
       if (cause != null) {
               cause.printStackTrace();
       }

}


	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}
	
	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	
	private final static String utf8Charset = "UTF-8";
	//contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String,String> propertyTypes = new java.util.HashMap<>();
		
		public PropertiesWithType(java.util.Properties properties){
			super(properties);
		}
		public PropertiesWithType(){
			super();
		}
		
		public void setContextType(String key, String type) {
			propertyTypes.put(key,type);
		}
	
		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}
	
	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();
	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties){
			super(properties);
		}
		public ContextProperties(){
			super();
		}

		public void synchronizeContext(){
			
		}

	}
	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.
	public ContextProperties getContext() {
		return this.context;
	}
	private final String jobVersion = "0.1";
	private final String jobName = "Crear_acta";
	private final String projectName = "LOCAL_PROJECT";
	public Integer errorCode = null;
	private String currentComponent = "";
	
		private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
        private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();
	
		private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
		private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
		public  final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();
	

private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";
	
	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(), new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}


private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

public String getExceptionStackTrace() {
	if ("failure".equals(this.getStatus())) {
		errorMessagePS.flush();
		return baos.toString();
	}
	return null;
}

private Exception exception;

public Exception getException() {
	if ("failure".equals(this.getStatus())) {
		return this.exception;
	}
	return null;
}

private class TalendException extends Exception {

	private static final long serialVersionUID = 1L;

	private java.util.Map<String, Object> globalMap = null;
	private Exception e = null;
	private String currentComponent = null;
	private String virtualComponentName = null;
	
	public void setVirtualComponentName (String virtualComponentName){
		this.virtualComponentName = virtualComponentName;
	}

	private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
		this.currentComponent= errorComponent;
		this.globalMap = globalMap;
		this.e = e;
	}

	public Exception getException() {
		return this.e;
	}

	public String getCurrentComponent() {
		return this.currentComponent;
	}

	
    public String getExceptionCauseMessage(Exception e){
        Throwable cause = e;
        String message = null;
        int i = 10;
        while (null != cause && 0 < i--) {
            message = cause.getMessage();
            if (null == message) {
                cause = cause.getCause();
            } else {
                break;          
            }
        }
        if (null == message) {
            message = e.getClass().getName();
        }   
        return message;
    }

	@Override
	public void printStackTrace() {
		if (!(e instanceof TalendException || e instanceof TDieException)) {
			if(virtualComponentName!=null && currentComponent.indexOf(virtualComponentName+"_")==0){
				globalMap.put(virtualComponentName+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			}
			globalMap.put(currentComponent+"_ERROR_MESSAGE",getExceptionCauseMessage(e));
			System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
		}
		if (!(e instanceof TDieException)) {
			if(e instanceof TalendException){
				e.printStackTrace();
			} else {
				e.printStackTrace();
				e.printStackTrace(errorMessagePS);
				Crear_acta.this.exception = e;
			}
		}
		if (!(e instanceof TalendException)) {
		try {
			for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
				if (m.getName().compareTo(currentComponent + "_error") == 0) {
					m.invoke(Crear_acta.this, new Object[] { e , currentComponent, globalMap});
					break;
				}
			}

			if(!(e instanceof TDieException)){
			}
		} catch (Exception e) {
			this.e.printStackTrace();
		}
		}
	}
}

			public void tDBInput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_3_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_2_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_20_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_13_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_14_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_15_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_16_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_17_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_18_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_19_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_21_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_22_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_23_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBOutput_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_24_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_1_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tFileOutputExcel_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {
				
				end_Hash.put(errorComponent, System.currentTimeMillis());
				
				status = "failure";
				
					tDBInput_4_onSubJobError(exception, errorComponent, globalMap);
			}
			
			public void tDBInput_3_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_2_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_20_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_13_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_14_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_15_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_16_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_17_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_18_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_19_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_21_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_22_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_23_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_24_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_1_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
			public void tDBInput_4_onSubJobError(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap) throws TalendException {

resumeUtil.addLog("SYSTEM_LOG", "NODE:"+ errorComponent, "", Thread.currentThread().getId()+ "", "FATAL", "", exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception),"");

			}
	






public static class copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row3Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row3Struct row3 = new row3Struct();
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct();





	
	/**
	 * [tDBOutput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_3", false);
		start_Hash.put("tDBOutput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0");
					}
				
		int tos_count_tDBOutput_3 = 0;
		





        int updateKeyCount_tDBOutput_3 = 1;
        if(updateKeyCount_tDBOutput_3 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_3 = 0;
int nb_line_update_tDBOutput_3 = 0;
int nb_line_inserted_tDBOutput_3 = 0;
int nb_line_deleted_tDBOutput_3 = 0;
int nb_line_rejected_tDBOutput_3 = 0;

int deletedCount_tDBOutput_3=0;
int updatedCount_tDBOutput_3=0;
int insertedCount_tDBOutput_3=0;

int rejectedCount_tDBOutput_3=0;

String tableName_tDBOutput_3 = "secuencias_acta1";
boolean whetherReject_tDBOutput_3 = false;

java.util.Calendar calendar_tDBOutput_3 = java.util.Calendar.getInstance();
calendar_tDBOutput_3.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_3 = calendar_tDBOutput_3.getTime().getTime();
calendar_tDBOutput_3.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_3 = calendar_tDBOutput_3.getTime().getTime();
long date_tDBOutput_3;

java.sql.Connection conn_tDBOutput_3 = null;
		String dbProperties_tDBOutput_3 = "noDatetimeStringSync=true";
		String url_tDBOutput_3 = null;
		if(dbProperties_tDBOutput_3 == null || dbProperties_tDBOutput_3.trim().length() == 0) {
			url_tDBOutput_3 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_3 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_3.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_3 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_3 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_3;
		}
		String driverClass_tDBOutput_3 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_3 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_3 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:AOMS2Bh5ZiFVOxbCikAne9h0jEdSyrmXL3WduebdSwxSNbIFeWyn8Xk=");

		String dbPwd_tDBOutput_3 = decryptedPassword_tDBOutput_3;
		java.lang.Class.forName(driverClass_tDBOutput_3);
		
		conn_tDBOutput_3 = java.sql.DriverManager.getConnection(url_tDBOutput_3, dbUser_tDBOutput_3, dbPwd_tDBOutput_3);
		
	
	resourceMap.put("conn_tDBOutput_3", conn_tDBOutput_3);
        conn_tDBOutput_3.setAutoCommit(false);
        int commitEvery_tDBOutput_3 = 10000;
        int commitCounter_tDBOutput_3 = 0;

int count_tDBOutput_3=0;
    	
            int rsTruncCountNumber_tDBOutput_3 = 0;
            try(java.sql.Statement stmtTruncCount_tDBOutput_3 = conn_tDBOutput_3.createStatement()) {
                try (java.sql.ResultSet rsTruncCount_tDBOutput_3 = stmtTruncCount_tDBOutput_3.executeQuery("SELECT COUNT(1) FROM `" + tableName_tDBOutput_3 + "`")) {
                    if(rsTruncCount_tDBOutput_3.next()) {
                        rsTruncCountNumber_tDBOutput_3 = rsTruncCount_tDBOutput_3.getInt(1);
                    }
                }
            }
            try (java.sql.Statement stmtTrunc_tDBOutput_3 = conn_tDBOutput_3.createStatement()) {
                stmtTrunc_tDBOutput_3.executeUpdate("TRUNCATE TABLE `" + tableName_tDBOutput_3 + "`");
                deletedCount_tDBOutput_3 += rsTruncCountNumber_tDBOutput_3;
            }
	    java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_acta1" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);
	    String insert_tDBOutput_3 = "INSERT INTO `" + "secuencias_acta1" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(insert_tDBOutput_3);
	    resourceMap.put("pstmtInsert_tDBOutput_3", pstmtInsert_tDBOutput_3);
	    String update_tDBOutput_3 = "UPDATE `" + "secuencias_acta1" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(update_tDBOutput_3);
	    resourceMap.put("pstmtUpdate_tDBOutput_3", pstmtUpdate_tDBOutput_3);
	    

 



/**
 * [tDBOutput_3 begin ] stop
 */



	
	/**
	 * [tMap_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_3", false);
		start_Hash.put("tMap_3", System.currentTimeMillis());
		
	
	currentComponent="tMap_3";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row3");
					}
				
		int tos_count_tMap_3 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_3__Struct  {
}
Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_3 begin ] stop
 */



	
	/**
	 * [tDBInput_3 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_3", false);
		start_Hash.put("tDBInput_3", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_3";

	
		int tos_count_tDBInput_3 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_3 = java.util.Calendar.getInstance();
		    calendar_tDBInput_3.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_3 = calendar_tDBInput_3.getTime();
		    int nb_line_tDBInput_3 = 0;
		    java.sql.Connection conn_tDBInput_3 = null;
				String driverClass_tDBInput_3 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_3 = java.lang.Class.forName(driverClass_tDBInput_3);
				String dbUser_tDBInput_3 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_3 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:5Wz7j44igDWbKxz+Kr3qA2YL6n/Fe3m3CZgLxZ/hGroVktauBnROjiM=");
				
				String dbPwd_tDBInput_3 = decryptedPassword_tDBInput_3;
				
				String url_tDBInput_3 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_3 = java.sql.DriverManager.getConnection(url_tDBInput_3,dbUser_tDBInput_3,dbPwd_tDBInput_3);
		        
		    
			java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

		    String dbquery_tDBInput_3 = "SELECT  * from\n secuencias_acta \nwhere \nFECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fe"
+"cha_k_dispersion)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'10')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_3_QUERY",dbquery_tDBInput_3);
		    java.sql.ResultSet rs_tDBInput_3 = null;

		    try {
		    	rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
		    	int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

		    String tmpContent_tDBInput_3 = null;
		    
		    
		    while (rs_tDBInput_3.next()) {
		        nb_line_tDBInput_3++;
		        
							if(colQtyInRs_tDBInput_3 < 1) {
								row3.FechaAsignacion = null;
							} else {
	                         		
        	row3.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_3, 1, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 2) {
								row3.Equipo_Trabajo = null;
							} else {
	                         		
        	row3.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_3, 2, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 3) {
								row3.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row3.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 3, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 4) {
								row3.Tarea = null;
							} else {
	                         		
        	row3.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_3, 4, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 5) {
								row3.DescTarea = null;
							} else {
	                         		
        	row3.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_3, 5, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 6) {
								row3.Orden = null;
							} else {
	                         		
        	row3.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_3, 6, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 7) {
								row3.Ciclo = null;
							} else {
	                         		
        	row3.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_3, 7, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 8) {
								row3.servicio = null;
							} else {
	                         		
        	row3.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_3, 8, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 9) {
								row3.Estado = null;
							} else {
	                         		
        	row3.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_3, 9, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 10) {
								row3.Desc_estado = null;
							} else {
	                         		
        	row3.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_3, 10, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 11) {
								row3.FechaCREATED = null;
							} else {
	                         		
        	row3.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_3, 11, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 12) {
								row3.Fechalegalization = null;
							} else {
	                         		
        	row3.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_3, 12, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 13) {
								row3.Horalegalization = null;
							} else {
	                         		
        	row3.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_3, 13, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 14) {
								row3.Instalacion = null;
							} else {
	                         		
        	row3.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_3, 14, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 15) {
								row3.urbano_rural = null;
							} else {
	                         		
        	row3.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_3, 15, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 16) {
								row3.ortrinur = null;
							} else {
	                         		
        	row3.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_3, 16, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 17) {
								row3.descripciona = null;
							} else {
	                         		
        	row3.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_3, 17, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 18) {
								row3.Ciudad = null;
							} else {
	                         		
        	row3.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_3, 18, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 19) {
								row3.cmrudesc = null;
							} else {
	                         		
        	row3.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_3, 19, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 20) {
								row3.region = null;
							} else {
	                         		
        	row3.region = routines.system.JDBCUtil.getString(rs_tDBInput_3, 20, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 21) {
								row3.regndesc = null;
							} else {
	                         		
        	row3.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_3, 21, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 22) {
								row3.depacodi = null;
							} else {
	                         		
        	row3.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_3, 22, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 23) {
								row3.codigorespuesta = null;
							} else {
	                         		
        	row3.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_3, 23, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 24) {
								row3.respuestatencion = null;
							} else {
	                         		
        	row3.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_3, 24, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 25) {
								row3.x = null;
							} else {
	                         		
        	row3.x = routines.system.JDBCUtil.getString(rs_tDBInput_3, 25, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 26) {
								row3.y = null;
							} else {
	                         		
        	row3.y = routines.system.JDBCUtil.getString(rs_tDBInput_3, 26, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 27) {
								row3.Ano = null;
							} else {
	                         		
        	row3.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_3, 27, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 28) {
								row3.Mes = null;
							} else {
	                         		
        	row3.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_3, 28, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 29) {
								row3.Dia = null;
							} else {
	                         		
        	row3.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_3, 29, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 30) {
								row3.desc_cna = null;
							} else {
	                         		
        	row3.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_3, 30, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 31) {
								row3.ACTIVIDAD = null;
							} else {
	                         		
        	row3.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_3, 31, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 32) {
								row3.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row3.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_3, 32, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 33) {
								row3.FRECUENCIA = null;
							} else {
	                         		
        	row3.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 33, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 34) {
								row3.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row3.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_3, 34, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 35) {
								row3.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row3.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_3, 35, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 36) {
								row3.ESTADO_CORTE = null;
							} else {
	                         		
        	row3.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_3, 36, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 37) {
								row3.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row3.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_3, 37, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 38) {
								row3.ROUTE_ID = null;
							} else {
	                         		
        	row3.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_3, 38, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 39) {
								row3.NAME_ = null;
							} else {
	                         		
        	row3.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_3, 39, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 40) {
								row3.NUMBER_ID = null;
							} else {
	                         		
        	row3.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_3, 40, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 41) {
								row3.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row3.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_3, 41, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 42) {
								row3.CAUSANL_OBS = null;
							} else {
	                         		
        	row3.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_3, 42, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 43) {
								row3.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row3.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_3, 43, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 44) {
								row3.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row3.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_3, 44, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 45) {
								row3.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row3.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_3, 45, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 46) {
								row3.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row3.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_3, 46, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 47) {
								row3.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row3.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 47, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 48) {
								row3.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row3.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 48, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 49) {
								row3.TIPO_SERVICIO = null;
							} else {
	                         		
        	row3.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 49, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 50) {
								row3.categoria = null;
							} else {
	                         		
        	row3.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_3, 50, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 51) {
								row3.ESTRATO = null;
							} else {
	                         		
        	row3.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 51, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 52) {
								row3.DESC_SERVICIO = null;
							} else {
	                         		
        	row3.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_3, 52, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 53) {
								row3.orden_relacionada = null;
							} else {
	                         		
        	row3.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_3, 53, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 54) {
								row3.order_activity_ID = null;
							} else {
	                         		
        	row3.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_3, 54, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 55) {
								row3.Adjunto = null;
							} else {
	                         		
        	row3.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_3, 55, false);
		                    }
							if(colQtyInRs_tDBInput_3 < 56) {
								row3.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row3.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_3, 56, false);
		                    }
					

 



/**
 * [tDBInput_3 begin ] stop
 */
	
	/**
	 * [tDBInput_3 main ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 


	tos_count_tDBInput_3++;

/**
 * [tDBInput_3 main ] stop
 */
	
	/**
	 * [tDBInput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 



/**
 * [tDBInput_3 process_data_begin ] stop
 */

	
	/**
	 * [tMap_3 main ] start
	 */

	

	
	
	currentComponent="tMap_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row3");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_3 = false;
		  boolean mainRowRejected_tMap_3 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0'
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.FechaAsignacion = row3.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Equipo_Trabajo = row3.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.UNIDAD_OPERATIVA = row3.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Tarea = row3.Tarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.DescTarea = row3.DescTarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Orden = row3.Orden;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Ciclo = row3.Ciclo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.servicio = row3.servicio;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Estado = row3.Estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Desc_estado = row3.Desc_estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.FechaCREATED = row3.FechaCREATED;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Fechalegalization = row3.Fechalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Horalegalization = row3.Horalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Instalacion = row3.Instalacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.urbano_rural = row3.urbano_rural;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ortrinur = row3.ortrinur;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.descripciona = row3.descripciona;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Ciudad = row3.Ciudad;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.cmrudesc = row3.cmrudesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.region = row3.region;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.regndesc = row3.regndesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.depacodi = row3.depacodi;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.codigorespuesta = row3.codigorespuesta;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.respuestatencion = row3.respuestatencion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.x = row3.x;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.y = row3.y;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Ano = row3.Ano;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Mes = row3.Mes;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Dia = row3.Dia;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.desc_cna = row3.desc_cna;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ACTIVIDAD = row3.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.DESC_ACTIVIDAD = row3.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.FRECUENCIA = row3.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CUENTAS_VENCIDAS = row3.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.SALDO_CUENTAS_VENCIDAS = row3.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ESTADO_CORTE = row3.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.TIPO_ACTIVIDAD = row3.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ROUTE_ID = row3.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.NAME_ = row3.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.NUMBER_ID = row3.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CODIGO_CAUSANL_OBS = row3.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CAUSANL_OBS = row3.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CODIGO_CAUSANL_OBS2 = row3.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CAUSANL_OBS2 = row3.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CODIGO_CAUSANL_OBS3 = row3.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CAUSANL_OBS3 = row3.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.SERVICIO_SUSCRITO = row3.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.COD_TIPO_SERVICIO = row3.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.TIPO_SERVICIO = row3.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.categoria = row3.categoria;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ESTRATO = row3.ESTRATO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.DESC_SERVICIO = row3.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.orden_relacionada = row3.orden_relacionada;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.order_activity_ID = row3.order_activity_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Adjunto = row3.Adjunto;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ID_SECUENCIAS_ACTA = row3.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_3 = false;










 


	tos_count_tMap_3++;

/**
 * [tMap_3 main ] stop
 */
	
	/**
	 * [tMap_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0"
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 != null) { 



	
	/**
	 * [tDBOutput_3 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0");
					}
					



        whetherReject_tDBOutput_3 = false;
                    if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_3.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_3 = -1;
            try (java.sql.ResultSet rs_tDBOutput_3 = pstmt_tDBOutput_3.executeQuery()) {
                while(rs_tDBOutput_3.next()) {
                    checkCount_tDBOutput_3 = rs_tDBOutput_3.getInt(1);
                }
            }
            if(checkCount_tDBOutput_3 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_3.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea == null) {
pstmtUpdate_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea == null) {
pstmtUpdate_tDBOutput_3.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden == null) {
pstmtUpdate_tDBOutput_3.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo == null) {
pstmtUpdate_tDBOutput_3.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio == null) {
pstmtUpdate_tDBOutput_3.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado == null) {
pstmtUpdate_tDBOutput_3.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado == null) {
pstmtUpdate_tDBOutput_3.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED == null) {
pstmtUpdate_tDBOutput_3.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization == null) {
pstmtUpdate_tDBOutput_3.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization == null) {
pstmtUpdate_tDBOutput_3.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion == null) {
pstmtUpdate_tDBOutput_3.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural == null) {
pstmtUpdate_tDBOutput_3.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur == null) {
pstmtUpdate_tDBOutput_3.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona == null) {
pstmtUpdate_tDBOutput_3.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad == null) {
pstmtUpdate_tDBOutput_3.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc == null) {
pstmtUpdate_tDBOutput_3.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region == null) {
pstmtUpdate_tDBOutput_3.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc == null) {
pstmtUpdate_tDBOutput_3.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi == null) {
pstmtUpdate_tDBOutput_3.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta == null) {
pstmtUpdate_tDBOutput_3.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion == null) {
pstmtUpdate_tDBOutput_3.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x == null) {
pstmtUpdate_tDBOutput_3.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y == null) {
pstmtUpdate_tDBOutput_3.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano == null) {
pstmtUpdate_tDBOutput_3.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes == null) {
pstmtUpdate_tDBOutput_3.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia == null) {
pstmtUpdate_tDBOutput_3.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna == null) {
pstmtUpdate_tDBOutput_3.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_3.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_3.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_3.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_3.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_3.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_3.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_3.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_3.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_ == null) {
pstmtUpdate_tDBOutput_3.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_3.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_3.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_3.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_3.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_3.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_3.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_3.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_3.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_3.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_3.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria == null) {
pstmtUpdate_tDBOutput_3.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO == null) {
pstmtUpdate_tDBOutput_3.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_3.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada == null) {
pstmtUpdate_tDBOutput_3.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID == null) {
pstmtUpdate_tDBOutput_3.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto == null) {
pstmtUpdate_tDBOutput_3.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_3.setNull(56 + count_tDBOutput_3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_3.setString(56 + count_tDBOutput_3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_3 = updatedCount_tDBOutput_3 + pstmtUpdate_tDBOutput_3.executeUpdate();
                    nb_line_tDBOutput_3++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_3 = true;
                        nb_line_tDBOutput_3++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion == null) {
pstmtInsert_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_3.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_3.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea == null) {
pstmtInsert_tDBOutput_3.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea == null) {
pstmtInsert_tDBOutput_3.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden == null) {
pstmtInsert_tDBOutput_3.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo == null) {
pstmtInsert_tDBOutput_3.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio == null) {
pstmtInsert_tDBOutput_3.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado == null) {
pstmtInsert_tDBOutput_3.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado == null) {
pstmtInsert_tDBOutput_3.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED == null) {
pstmtInsert_tDBOutput_3.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization == null) {
pstmtInsert_tDBOutput_3.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization == null) {
pstmtInsert_tDBOutput_3.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion == null) {
pstmtInsert_tDBOutput_3.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural == null) {
pstmtInsert_tDBOutput_3.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur == null) {
pstmtInsert_tDBOutput_3.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona == null) {
pstmtInsert_tDBOutput_3.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad == null) {
pstmtInsert_tDBOutput_3.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc == null) {
pstmtInsert_tDBOutput_3.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region == null) {
pstmtInsert_tDBOutput_3.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc == null) {
pstmtInsert_tDBOutput_3.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi == null) {
pstmtInsert_tDBOutput_3.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta == null) {
pstmtInsert_tDBOutput_3.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion == null) {
pstmtInsert_tDBOutput_3.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x == null) {
pstmtInsert_tDBOutput_3.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y == null) {
pstmtInsert_tDBOutput_3.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano == null) {
pstmtInsert_tDBOutput_3.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes == null) {
pstmtInsert_tDBOutput_3.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia == null) {
pstmtInsert_tDBOutput_3.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna == null) {
pstmtInsert_tDBOutput_3.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_3.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_3.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_3.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_3.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_3.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_3.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_3.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_3.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_ == null) {
pstmtInsert_tDBOutput_3.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_3.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_3.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_3.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_3.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_3.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_3.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_3.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_3.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_3.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_3.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria == null) {
pstmtInsert_tDBOutput_3.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO == null) {
pstmtInsert_tDBOutput_3.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_3.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada == null) {
pstmtInsert_tDBOutput_3.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID == null) {
pstmtInsert_tDBOutput_3.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto == null) {
pstmtInsert_tDBOutput_3.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_3.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_3.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA);
}

                try {
                    insertedCount_tDBOutput_3 = insertedCount_tDBOutput_3 + pstmtInsert_tDBOutput_3.executeUpdate();
                    nb_line_tDBOutput_3++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_3 = true;
                        nb_line_tDBOutput_3++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_3) {
            }
                commitCounter_tDBOutput_3++;

                if(commitEvery_tDBOutput_3 <= commitCounter_tDBOutput_3) {

                    conn_tDBOutput_3.commit();
                    commitCounter_tDBOutput_3=0;

                }


 


	tos_count_tDBOutput_3++;

/**
 * [tDBOutput_3 main ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	

 



/**
 * [tDBOutput_3 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	

 



/**
 * [tDBOutput_3 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0"




	
	/**
	 * [tMap_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_3 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 



/**
 * [tDBInput_3 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_3 end ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

	}
}finally{
	if (rs_tDBInput_3 != null) {
		rs_tDBInput_3.close();
	}
	if (stmt_tDBInput_3 != null) {
		stmt_tDBInput_3.close();
	}
		if(conn_tDBInput_3 != null && !conn_tDBInput_3.isClosed()) {
			
			conn_tDBInput_3.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_3_NB_LINE",nb_line_tDBInput_3);
		


 

ok_Hash.put("tDBInput_3", true);
end_Hash.put("tDBInput_3", System.currentTimeMillis());




/**
 * [tDBInput_3 end ] stop
 */

	
	/**
	 * [tMap_3 end ] start
	 */

	

	
	
	currentComponent="tMap_3";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row3");
			  	}
			  	
 

ok_Hash.put("tMap_3", true);
end_Hash.put("tMap_3", System.currentTimeMillis());




/**
 * [tMap_3 end ] stop
 */

	
	/**
	 * [tDBOutput_3 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	



        if(pstmtUpdate_tDBOutput_3 != null){
            pstmtUpdate_tDBOutput_3.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_3");
        }
        if(pstmtInsert_tDBOutput_3 != null){
            pstmtInsert_tDBOutput_3.close();
            resourceMap.remove("pstmtInsert_tDBOutput_3");
        }
        if(pstmt_tDBOutput_3 != null) {
            pstmt_tDBOutput_3.close();
            resourceMap.remove("pstmt_tDBOutput_3");
        }
    resourceMap.put("statementClosed_tDBOutput_3", true);
    	if (commitCounter_tDBOutput_3 > 0) {
    		
    		conn_tDBOutput_3.commit();
    		
    	}
    		
		
    	conn_tDBOutput_3 .close();
    	
    	resourceMap.put("finish_tDBOutput_3", true);
    	

	nb_line_deleted_tDBOutput_3=nb_line_deleted_tDBOutput_3+ deletedCount_tDBOutput_3;
	nb_line_update_tDBOutput_3=nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
	nb_line_inserted_tDBOutput_3=nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
	nb_line_rejected_tDBOutput_3=nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;
	
        globalMap.put("tDBOutput_3_NB_LINE",nb_line_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_UPDATED",nb_line_update_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_DELETED",nb_line_deleted_tDBOutput_3);
        globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_3", true);
end_Hash.put("tDBOutput_3", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tDBInput_2Process(globalMap);



/**
 * [tDBOutput_3 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_3";

	

 



/**
 * [tDBInput_3 finally ] stop
 */

	
	/**
	 * [tMap_3 finally ] start
	 */

	

	
	
	currentComponent="tMap_3";

	

 



/**
 * [tMap_3 finally ] stop
 */

	
	/**
	 * [tDBOutput_3 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_3";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_3 = null;
                if ((pstmtUpdateToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_3")) != null) {
                    pstmtUpdateToClose_tDBOutput_3.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_3 = null;
                if ((pstmtInsertToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_3")) != null) {
                    pstmtInsertToClose_tDBOutput_3.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
                if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_3")) != null) {
                    pstmtToClose_tDBOutput_3.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_3") == null){
            java.sql.Connection ctn_tDBOutput_3 = null;
            if((ctn_tDBOutput_3 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_3")) != null){
                try {
                    ctn_tDBOutput_3.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_3) {
                    String errorMessage_tDBOutput_3 = "failed to close the connection in tDBOutput_3 :" + sqlEx_tDBOutput_3.getMessage();
                    System.err.println(errorMessage_tDBOutput_3);
                }
            }
        }
    }
 



/**
 * [tDBOutput_3 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row2Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row2Struct row2 = new row2Struct();
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 = new copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct();





	
	/**
	 * [tDBOutput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_2", false);
		start_Hash.put("tDBOutput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0");
					}
				
		int tos_count_tDBOutput_2 = 0;
		





        int updateKeyCount_tDBOutput_2 = 1;
        if(updateKeyCount_tDBOutput_2 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_2 = 0;
int nb_line_update_tDBOutput_2 = 0;
int nb_line_inserted_tDBOutput_2 = 0;
int nb_line_deleted_tDBOutput_2 = 0;
int nb_line_rejected_tDBOutput_2 = 0;

int deletedCount_tDBOutput_2=0;
int updatedCount_tDBOutput_2=0;
int insertedCount_tDBOutput_2=0;

int rejectedCount_tDBOutput_2=0;

String tableName_tDBOutput_2 = "secuencias_acta1";
boolean whetherReject_tDBOutput_2 = false;

java.util.Calendar calendar_tDBOutput_2 = java.util.Calendar.getInstance();
calendar_tDBOutput_2.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_2 = calendar_tDBOutput_2.getTime().getTime();
calendar_tDBOutput_2.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_2 = calendar_tDBOutput_2.getTime().getTime();
long date_tDBOutput_2;

java.sql.Connection conn_tDBOutput_2 = null;
		String dbProperties_tDBOutput_2 = "noDatetimeStringSync=true";
		String url_tDBOutput_2 = null;
		if(dbProperties_tDBOutput_2 == null || dbProperties_tDBOutput_2.trim().length() == 0) {
			url_tDBOutput_2 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_2 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_2.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_2 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_2 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_2;
		}
		String driverClass_tDBOutput_2 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_2 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_2 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:U19cQtLXsj0RF7rB0bHmaDO9zkYanPbUhED+PYC1twFIyvpO9N/uzuQ=");

		String dbPwd_tDBOutput_2 = decryptedPassword_tDBOutput_2;
		java.lang.Class.forName(driverClass_tDBOutput_2);
		
		conn_tDBOutput_2 = java.sql.DriverManager.getConnection(url_tDBOutput_2, dbUser_tDBOutput_2, dbPwd_tDBOutput_2);
		
	
	resourceMap.put("conn_tDBOutput_2", conn_tDBOutput_2);
        conn_tDBOutput_2.setAutoCommit(false);
        int commitEvery_tDBOutput_2 = 10000;
        int commitCounter_tDBOutput_2 = 0;

int count_tDBOutput_2=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_acta1" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);
	    String insert_tDBOutput_2 = "INSERT INTO `" + "secuencias_acta1" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(insert_tDBOutput_2);
	    resourceMap.put("pstmtInsert_tDBOutput_2", pstmtInsert_tDBOutput_2);
	    String update_tDBOutput_2 = "UPDATE `" + "secuencias_acta1" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(update_tDBOutput_2);
	    resourceMap.put("pstmtUpdate_tDBOutput_2", pstmtUpdate_tDBOutput_2);
	    

 



/**
 * [tDBOutput_2 begin ] stop
 */



	
	/**
	 * [tMap_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_2", false);
		start_Hash.put("tMap_2", System.currentTimeMillis());
		
	
	currentComponent="tMap_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row2");
					}
				
		int tos_count_tMap_2 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_2__Struct  {
}
Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_2 begin ] stop
 */



	
	/**
	 * [tDBInput_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_2", false);
		start_Hash.put("tDBInput_2", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_2";

	
		int tos_count_tDBInput_2 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_2 = java.util.Calendar.getInstance();
		    calendar_tDBInput_2.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_2 = calendar_tDBInput_2.getTime();
		    int nb_line_tDBInput_2 = 0;
		    java.sql.Connection conn_tDBInput_2 = null;
				String driverClass_tDBInput_2 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_2 = java.lang.Class.forName(driverClass_tDBInput_2);
				String dbUser_tDBInput_2 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_2 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:dyH44sNMvKvCSPCyK5kZPDl37FD4qJaO6vISUIi1QNtQdLtEWmta4/E=");
				
				String dbPwd_tDBInput_2 = decryptedPassword_tDBInput_2;
				
				String url_tDBInput_2 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_2 = java.sql.DriverManager.getConnection(url_tDBInput_2,dbUser_tDBInput_2,dbPwd_tDBInput_2);
		        
		    
			java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

		    String dbquery_tDBInput_2 = "SELECT  * from\n secuencias_acta \nwhere \nFECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'11')) from consulta_fe"
+"cha_k_dispersion)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'20')) from consulta_fecha_k_dispersion) ";
			

            	globalMap.put("tDBInput_2_QUERY",dbquery_tDBInput_2);
		    java.sql.ResultSet rs_tDBInput_2 = null;

		    try {
		    	rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
		    	int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

		    String tmpContent_tDBInput_2 = null;
		    
		    
		    while (rs_tDBInput_2.next()) {
		        nb_line_tDBInput_2++;
		        
							if(colQtyInRs_tDBInput_2 < 1) {
								row2.FechaAsignacion = null;
							} else {
	                         		
        	row2.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_2, 1, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 2) {
								row2.Equipo_Trabajo = null;
							} else {
	                         		
        	row2.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_2, 2, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 3) {
								row2.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row2.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 3, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 4) {
								row2.Tarea = null;
							} else {
	                         		
        	row2.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_2, 4, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 5) {
								row2.DescTarea = null;
							} else {
	                         		
        	row2.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_2, 5, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 6) {
								row2.Orden = null;
							} else {
	                         		
        	row2.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_2, 6, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 7) {
								row2.Ciclo = null;
							} else {
	                         		
        	row2.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_2, 7, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 8) {
								row2.servicio = null;
							} else {
	                         		
        	row2.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_2, 8, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 9) {
								row2.Estado = null;
							} else {
	                         		
        	row2.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_2, 9, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 10) {
								row2.Desc_estado = null;
							} else {
	                         		
        	row2.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_2, 10, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 11) {
								row2.FechaCREATED = null;
							} else {
	                         		
        	row2.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_2, 11, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 12) {
								row2.Fechalegalization = null;
							} else {
	                         		
        	row2.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_2, 12, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 13) {
								row2.Horalegalization = null;
							} else {
	                         		
        	row2.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_2, 13, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 14) {
								row2.Instalacion = null;
							} else {
	                         		
        	row2.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_2, 14, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 15) {
								row2.urbano_rural = null;
							} else {
	                         		
        	row2.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_2, 15, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 16) {
								row2.ortrinur = null;
							} else {
	                         		
        	row2.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_2, 16, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 17) {
								row2.descripciona = null;
							} else {
	                         		
        	row2.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_2, 17, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 18) {
								row2.Ciudad = null;
							} else {
	                         		
        	row2.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_2, 18, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 19) {
								row2.cmrudesc = null;
							} else {
	                         		
        	row2.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_2, 19, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 20) {
								row2.region = null;
							} else {
	                         		
        	row2.region = routines.system.JDBCUtil.getString(rs_tDBInput_2, 20, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 21) {
								row2.regndesc = null;
							} else {
	                         		
        	row2.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_2, 21, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 22) {
								row2.depacodi = null;
							} else {
	                         		
        	row2.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_2, 22, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 23) {
								row2.codigorespuesta = null;
							} else {
	                         		
        	row2.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_2, 23, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 24) {
								row2.respuestatencion = null;
							} else {
	                         		
        	row2.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_2, 24, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 25) {
								row2.x = null;
							} else {
	                         		
        	row2.x = routines.system.JDBCUtil.getString(rs_tDBInput_2, 25, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 26) {
								row2.y = null;
							} else {
	                         		
        	row2.y = routines.system.JDBCUtil.getString(rs_tDBInput_2, 26, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 27) {
								row2.Ano = null;
							} else {
	                         		
        	row2.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_2, 27, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 28) {
								row2.Mes = null;
							} else {
	                         		
        	row2.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_2, 28, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 29) {
								row2.Dia = null;
							} else {
	                         		
        	row2.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_2, 29, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 30) {
								row2.desc_cna = null;
							} else {
	                         		
        	row2.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_2, 30, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 31) {
								row2.ACTIVIDAD = null;
							} else {
	                         		
        	row2.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_2, 31, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 32) {
								row2.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row2.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_2, 32, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 33) {
								row2.FRECUENCIA = null;
							} else {
	                         		
        	row2.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 33, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 34) {
								row2.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row2.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_2, 34, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 35) {
								row2.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row2.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_2, 35, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 36) {
								row2.ESTADO_CORTE = null;
							} else {
	                         		
        	row2.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_2, 36, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 37) {
								row2.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row2.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_2, 37, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 38) {
								row2.ROUTE_ID = null;
							} else {
	                         		
        	row2.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_2, 38, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 39) {
								row2.NAME_ = null;
							} else {
	                         		
        	row2.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_2, 39, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 40) {
								row2.NUMBER_ID = null;
							} else {
	                         		
        	row2.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_2, 40, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 41) {
								row2.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row2.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_2, 41, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 42) {
								row2.CAUSANL_OBS = null;
							} else {
	                         		
        	row2.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_2, 42, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 43) {
								row2.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row2.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_2, 43, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 44) {
								row2.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row2.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_2, 44, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 45) {
								row2.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row2.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_2, 45, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 46) {
								row2.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row2.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_2, 46, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 47) {
								row2.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row2.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 47, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 48) {
								row2.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row2.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 48, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 49) {
								row2.TIPO_SERVICIO = null;
							} else {
	                         		
        	row2.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 49, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 50) {
								row2.categoria = null;
							} else {
	                         		
        	row2.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_2, 50, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 51) {
								row2.ESTRATO = null;
							} else {
	                         		
        	row2.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 51, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 52) {
								row2.DESC_SERVICIO = null;
							} else {
	                         		
        	row2.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_2, 52, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 53) {
								row2.orden_relacionada = null;
							} else {
	                         		
        	row2.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_2, 53, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 54) {
								row2.order_activity_ID = null;
							} else {
	                         		
        	row2.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_2, 54, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 55) {
								row2.Adjunto = null;
							} else {
	                         		
        	row2.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_2, 55, false);
		                    }
							if(colQtyInRs_tDBInput_2 < 56) {
								row2.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row2.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_2, 56, false);
		                    }
					

 



/**
 * [tDBInput_2 begin ] stop
 */
	
	/**
	 * [tDBInput_2 main ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 


	tos_count_tDBInput_2++;

/**
 * [tDBInput_2 main ] stop
 */
	
	/**
	 * [tDBInput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 



/**
 * [tDBInput_2 process_data_begin ] stop
 */

	
	/**
	 * [tMap_2 main ] start
	 */

	

	
	
	currentComponent="tMap_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row2");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_2 = false;
		  boolean mainRowRejected_tMap_2 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0'
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.FechaAsignacion = row2.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Equipo_Trabajo = row2.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.UNIDAD_OPERATIVA = row2.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Tarea = row2.Tarea;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.DescTarea = row2.DescTarea;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Orden = row2.Orden;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Ciclo = row2.Ciclo;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.servicio = row2.servicio;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Estado = row2.Estado;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Desc_estado = row2.Desc_estado;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.FechaCREATED = row2.FechaCREATED;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Fechalegalization = row2.Fechalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Horalegalization = row2.Horalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Instalacion = row2.Instalacion;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.urbano_rural = row2.urbano_rural;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ortrinur = row2.ortrinur;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.descripciona = row2.descripciona;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Ciudad = row2.Ciudad;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.cmrudesc = row2.cmrudesc;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.region = row2.region;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.regndesc = row2.regndesc;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.depacodi = row2.depacodi;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.codigorespuesta = row2.codigorespuesta;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.respuestatencion = row2.respuestatencion;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.x = row2.x;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.y = row2.y;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Ano = row2.Ano;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Mes = row2.Mes;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Dia = row2.Dia;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.desc_cna = row2.desc_cna;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ACTIVIDAD = row2.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.DESC_ACTIVIDAD = row2.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.FRECUENCIA = row2.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CUENTAS_VENCIDAS = row2.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.SALDO_CUENTAS_VENCIDAS = row2.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ESTADO_CORTE = row2.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.TIPO_ACTIVIDAD = row2.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ROUTE_ID = row2.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.NAME_ = row2.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.NUMBER_ID = row2.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CODIGO_CAUSANL_OBS = row2.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CAUSANL_OBS = row2.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CODIGO_CAUSANL_OBS2 = row2.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CAUSANL_OBS2 = row2.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CODIGO_CAUSANL_OBS3 = row2.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.CAUSANL_OBS3 = row2.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.SERVICIO_SUSCRITO = row2.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.COD_TIPO_SERVICIO = row2.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.TIPO_SERVICIO = row2.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.categoria = row2.categoria;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ESTRATO = row2.ESTRATO;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.DESC_SERVICIO = row2.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.orden_relacionada = row2.orden_relacionada;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.order_activity_ID = row2.order_activity_ID;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.Adjunto = row2.Adjunto;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp.ID_SECUENCIAS_ACTA = row2.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 = copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_2 = false;










 


	tos_count_tMap_2++;

/**
 * [tMap_2 main ] stop
 */
	
	/**
	 * [tMap_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0"
if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0 != null) { 



	
	/**
	 * [tDBOutput_2 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0");
					}
					



        whetherReject_tDBOutput_2 = false;
                    if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_2.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_2 = -1;
            try (java.sql.ResultSet rs_tDBOutput_2 = pstmt_tDBOutput_2.executeQuery()) {
                while(rs_tDBOutput_2.next()) {
                    checkCount_tDBOutput_2 = rs_tDBOutput_2.getInt(1);
                }
            }
            if(checkCount_tDBOutput_2 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea == null) {
pstmtUpdate_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea == null) {
pstmtUpdate_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden == null) {
pstmtUpdate_tDBOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo == null) {
pstmtUpdate_tDBOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio == null) {
pstmtUpdate_tDBOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado == null) {
pstmtUpdate_tDBOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado == null) {
pstmtUpdate_tDBOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED == null) {
pstmtUpdate_tDBOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization == null) {
pstmtUpdate_tDBOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization == null) {
pstmtUpdate_tDBOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion == null) {
pstmtUpdate_tDBOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural == null) {
pstmtUpdate_tDBOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur == null) {
pstmtUpdate_tDBOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona == null) {
pstmtUpdate_tDBOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad == null) {
pstmtUpdate_tDBOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc == null) {
pstmtUpdate_tDBOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region == null) {
pstmtUpdate_tDBOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc == null) {
pstmtUpdate_tDBOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi == null) {
pstmtUpdate_tDBOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta == null) {
pstmtUpdate_tDBOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion == null) {
pstmtUpdate_tDBOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x == null) {
pstmtUpdate_tDBOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y == null) {
pstmtUpdate_tDBOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano == null) {
pstmtUpdate_tDBOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes == null) {
pstmtUpdate_tDBOutput_2.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia == null) {
pstmtUpdate_tDBOutput_2.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna == null) {
pstmtUpdate_tDBOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_2.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_2.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_2.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_2.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_2.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_2.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_2.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_2.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_ == null) {
pstmtUpdate_tDBOutput_2.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_2.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_2.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_2.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_2.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_2.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_2.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_2.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_2.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_2.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_2.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria == null) {
pstmtUpdate_tDBOutput_2.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO == null) {
pstmtUpdate_tDBOutput_2.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_2.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada == null) {
pstmtUpdate_tDBOutput_2.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID == null) {
pstmtUpdate_tDBOutput_2.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto == null) {
pstmtUpdate_tDBOutput_2.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_2.setNull(56 + count_tDBOutput_2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_2.setString(56 + count_tDBOutput_2, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_2 = updatedCount_tDBOutput_2 + pstmtUpdate_tDBOutput_2.executeUpdate();
                    nb_line_tDBOutput_2++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_2 = true;
                        nb_line_tDBOutput_2++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion == null) {
pstmtInsert_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_2.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_2.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea == null) {
pstmtInsert_tDBOutput_2.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea == null) {
pstmtInsert_tDBOutput_2.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden == null) {
pstmtInsert_tDBOutput_2.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo == null) {
pstmtInsert_tDBOutput_2.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio == null) {
pstmtInsert_tDBOutput_2.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado == null) {
pstmtInsert_tDBOutput_2.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado == null) {
pstmtInsert_tDBOutput_2.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED == null) {
pstmtInsert_tDBOutput_2.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization == null) {
pstmtInsert_tDBOutput_2.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization == null) {
pstmtInsert_tDBOutput_2.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion == null) {
pstmtInsert_tDBOutput_2.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural == null) {
pstmtInsert_tDBOutput_2.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur == null) {
pstmtInsert_tDBOutput_2.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona == null) {
pstmtInsert_tDBOutput_2.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad == null) {
pstmtInsert_tDBOutput_2.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc == null) {
pstmtInsert_tDBOutput_2.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region == null) {
pstmtInsert_tDBOutput_2.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc == null) {
pstmtInsert_tDBOutput_2.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi == null) {
pstmtInsert_tDBOutput_2.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta == null) {
pstmtInsert_tDBOutput_2.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion == null) {
pstmtInsert_tDBOutput_2.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x == null) {
pstmtInsert_tDBOutput_2.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y == null) {
pstmtInsert_tDBOutput_2.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano == null) {
pstmtInsert_tDBOutput_2.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes == null) {
pstmtInsert_tDBOutput_2.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia == null) {
pstmtInsert_tDBOutput_2.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna == null) {
pstmtInsert_tDBOutput_2.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_2.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_2.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_2.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_2.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_2.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_2.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_2.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_2.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_ == null) {
pstmtInsert_tDBOutput_2.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_2.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_2.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_2.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_2.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_2.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_2.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_2.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_2.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_2.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_2.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria == null) {
pstmtInsert_tDBOutput_2.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO == null) {
pstmtInsert_tDBOutput_2.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_2.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada == null) {
pstmtInsert_tDBOutput_2.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID == null) {
pstmtInsert_tDBOutput_2.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto == null) {
pstmtInsert_tDBOutput_2.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_2.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_2.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0.ID_SECUENCIAS_ACTA);
}

                try {
                    insertedCount_tDBOutput_2 = insertedCount_tDBOutput_2 + pstmtInsert_tDBOutput_2.executeUpdate();
                    nb_line_tDBOutput_2++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_2 = true;
                        nb_line_tDBOutput_2++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_2) {
            }
                commitCounter_tDBOutput_2++;

                if(commitEvery_tDBOutput_2 <= commitCounter_tDBOutput_2) {

                    conn_tDBOutput_2.commit();
                    commitCounter_tDBOutput_2=0;

                }


 


	tos_count_tDBOutput_2++;

/**
 * [tDBOutput_2 main ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	

 



/**
 * [tDBOutput_2 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	

 



/**
 * [tDBOutput_2 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0"




	
	/**
	 * [tMap_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 



/**
 * [tDBInput_2 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_2 end ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

	}
}finally{
	if (rs_tDBInput_2 != null) {
		rs_tDBInput_2.close();
	}
	if (stmt_tDBInput_2 != null) {
		stmt_tDBInput_2.close();
	}
		if(conn_tDBInput_2 != null && !conn_tDBInput_2.isClosed()) {
			
			conn_tDBInput_2.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_2_NB_LINE",nb_line_tDBInput_2);
		


 

ok_Hash.put("tDBInput_2", true);
end_Hash.put("tDBInput_2", System.currentTimeMillis());




/**
 * [tDBInput_2 end ] stop
 */

	
	/**
	 * [tMap_2 end ] start
	 */

	

	
	
	currentComponent="tMap_2";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row2");
			  	}
			  	
 

ok_Hash.put("tMap_2", true);
end_Hash.put("tMap_2", System.currentTimeMillis());




/**
 * [tMap_2 end ] stop
 */

	
	/**
	 * [tDBOutput_2 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	



        if(pstmtUpdate_tDBOutput_2 != null){
            pstmtUpdate_tDBOutput_2.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_2");
        }
        if(pstmtInsert_tDBOutput_2 != null){
            pstmtInsert_tDBOutput_2.close();
            resourceMap.remove("pstmtInsert_tDBOutput_2");
        }
        if(pstmt_tDBOutput_2 != null) {
            pstmt_tDBOutput_2.close();
            resourceMap.remove("pstmt_tDBOutput_2");
        }
    resourceMap.put("statementClosed_tDBOutput_2", true);
    	if (commitCounter_tDBOutput_2 > 0) {
    		
    		conn_tDBOutput_2.commit();
    		
    	}
    		
		
    	conn_tDBOutput_2 .close();
    	
    	resourceMap.put("finish_tDBOutput_2", true);
    	

	nb_line_deleted_tDBOutput_2=nb_line_deleted_tDBOutput_2+ deletedCount_tDBOutput_2;
	nb_line_update_tDBOutput_2=nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
	nb_line_inserted_tDBOutput_2=nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
	nb_line_rejected_tDBOutput_2=nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;
	
        globalMap.put("tDBOutput_2_NB_LINE",nb_line_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_UPDATED",nb_line_update_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_DELETED",nb_line_deleted_tDBOutput_2);
        globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_2", true);
end_Hash.put("tDBOutput_2", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tDBInput_20Process(globalMap);



/**
 * [tDBOutput_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_2";

	

 



/**
 * [tDBInput_2 finally ] stop
 */

	
	/**
	 * [tMap_2 finally ] start
	 */

	

	
	
	currentComponent="tMap_2";

	

 



/**
 * [tMap_2 finally ] stop
 */

	
	/**
	 * [tDBOutput_2 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_2";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_2 = null;
                if ((pstmtUpdateToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_2")) != null) {
                    pstmtUpdateToClose_tDBOutput_2.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_2 = null;
                if ((pstmtInsertToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_2")) != null) {
                    pstmtInsertToClose_tDBOutput_2.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
                if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_2")) != null) {
                    pstmtToClose_tDBOutput_2.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_2") == null){
            java.sql.Connection ctn_tDBOutput_2 = null;
            if((ctn_tDBOutput_2 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_2")) != null){
                try {
                    ctn_tDBOutput_2.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_2) {
                    String errorMessage_tDBOutput_2 = "failed to close the connection in tDBOutput_2 :" + sqlEx_tDBOutput_2.getMessage();
                    System.err.println(errorMessage_tDBOutput_2);
                }
            }
        }
    }
 



/**
 * [tDBOutput_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct other = (copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row22Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_20_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row22Struct row22 = new row22Struct();
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0 = new copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct();





	
	/**
	 * [tDBOutput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_20", false);
		start_Hash.put("tDBOutput_20", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_20";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0");
					}
				
		int tos_count_tDBOutput_20 = 0;
		





        int updateKeyCount_tDBOutput_20 = 1;
        if(updateKeyCount_tDBOutput_20 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_20 = 0;
int nb_line_update_tDBOutput_20 = 0;
int nb_line_inserted_tDBOutput_20 = 0;
int nb_line_deleted_tDBOutput_20 = 0;
int nb_line_rejected_tDBOutput_20 = 0;

int deletedCount_tDBOutput_20=0;
int updatedCount_tDBOutput_20=0;
int insertedCount_tDBOutput_20=0;

int rejectedCount_tDBOutput_20=0;

String tableName_tDBOutput_20 = "secuencias_acta1";
boolean whetherReject_tDBOutput_20 = false;

java.util.Calendar calendar_tDBOutput_20 = java.util.Calendar.getInstance();
calendar_tDBOutput_20.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_20 = calendar_tDBOutput_20.getTime().getTime();
calendar_tDBOutput_20.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_20 = calendar_tDBOutput_20.getTime().getTime();
long date_tDBOutput_20;

java.sql.Connection conn_tDBOutput_20 = null;
		String dbProperties_tDBOutput_20 = "noDatetimeStringSync=true";
		String url_tDBOutput_20 = null;
		if(dbProperties_tDBOutput_20 == null || dbProperties_tDBOutput_20.trim().length() == 0) {
			url_tDBOutput_20 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_20 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_20.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_20 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_20 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_20;
		}
		String driverClass_tDBOutput_20 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_20 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_20 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:J35yaG4olT2ZYgV9aZylRoFky/kZzOUoeHcox3dw4rHaESqztCxSM0E=");

		String dbPwd_tDBOutput_20 = decryptedPassword_tDBOutput_20;
		java.lang.Class.forName(driverClass_tDBOutput_20);
		
		conn_tDBOutput_20 = java.sql.DriverManager.getConnection(url_tDBOutput_20, dbUser_tDBOutput_20, dbPwd_tDBOutput_20);
		
	
	resourceMap.put("conn_tDBOutput_20", conn_tDBOutput_20);
        conn_tDBOutput_20.setAutoCommit(false);
        int commitEvery_tDBOutput_20 = 10000;
        int commitCounter_tDBOutput_20 = 0;

int count_tDBOutput_20=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_20 = conn_tDBOutput_20.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_acta1" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_20", pstmt_tDBOutput_20);
	    String insert_tDBOutput_20 = "INSERT INTO `" + "secuencias_acta1" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_20 = conn_tDBOutput_20.prepareStatement(insert_tDBOutput_20);
	    resourceMap.put("pstmtInsert_tDBOutput_20", pstmtInsert_tDBOutput_20);
	    String update_tDBOutput_20 = "UPDATE `" + "secuencias_acta1" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_20 = conn_tDBOutput_20.prepareStatement(update_tDBOutput_20);
	    resourceMap.put("pstmtUpdate_tDBOutput_20", pstmtUpdate_tDBOutput_20);
	    

 



/**
 * [tDBOutput_20 begin ] stop
 */



	
	/**
	 * [tMap_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_20", false);
		start_Hash.put("tMap_20", System.currentTimeMillis());
		
	
	currentComponent="tMap_20";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row22");
					}
				
		int tos_count_tMap_20 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_20__Struct  {
}
Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp = new copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_20 begin ] stop
 */



	
	/**
	 * [tDBInput_20 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_20", false);
		start_Hash.put("tDBInput_20", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_20";

	
		int tos_count_tDBInput_20 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_20 = java.util.Calendar.getInstance();
		    calendar_tDBInput_20.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_20 = calendar_tDBInput_20.getTime();
		    int nb_line_tDBInput_20 = 0;
		    java.sql.Connection conn_tDBInput_20 = null;
				String driverClass_tDBInput_20 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_20 = java.lang.Class.forName(driverClass_tDBInput_20);
				String dbUser_tDBInput_20 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_20 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:JBogFq6sXhIJz/YrufGdhpojq5Xp7i5SPPzH16bzaXEJs/LAOow0Dpk=");
				
				String dbPwd_tDBInput_20 = decryptedPassword_tDBInput_20;
				
				String url_tDBInput_20 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_20 = java.sql.DriverManager.getConnection(url_tDBInput_20,dbUser_tDBInput_20,dbPwd_tDBInput_20);
		        
		    
			java.sql.Statement stmt_tDBInput_20 = conn_tDBInput_20.createStatement();

		    String dbquery_tDBInput_20 = "SELECT  *  from\n secuencias_acta \nwhere \nFECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'21')) from consulta_f"
+"echa_k_dispersion)\nand FECHALEGALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion) ";
			

            	globalMap.put("tDBInput_20_QUERY",dbquery_tDBInput_20);
		    java.sql.ResultSet rs_tDBInput_20 = null;

		    try {
		    	rs_tDBInput_20 = stmt_tDBInput_20.executeQuery(dbquery_tDBInput_20);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_20 = rs_tDBInput_20.getMetaData();
		    	int colQtyInRs_tDBInput_20 = rsmd_tDBInput_20.getColumnCount();

		    String tmpContent_tDBInput_20 = null;
		    
		    
		    while (rs_tDBInput_20.next()) {
		        nb_line_tDBInput_20++;
		        
							if(colQtyInRs_tDBInput_20 < 1) {
								row22.FechaAsignacion = null;
							} else {
	                         		
        	row22.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_20, 1, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 2) {
								row22.Equipo_Trabajo = null;
							} else {
	                         		
        	row22.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_20, 2, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 3) {
								row22.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row22.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_20, 3, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 4) {
								row22.Tarea = null;
							} else {
	                         		
        	row22.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_20, 4, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 5) {
								row22.DescTarea = null;
							} else {
	                         		
        	row22.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_20, 5, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 6) {
								row22.Orden = null;
							} else {
	                         		
        	row22.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_20, 6, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 7) {
								row22.Ciclo = null;
							} else {
	                         		
        	row22.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_20, 7, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 8) {
								row22.servicio = null;
							} else {
	                         		
        	row22.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_20, 8, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 9) {
								row22.Estado = null;
							} else {
	                         		
        	row22.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_20, 9, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 10) {
								row22.Desc_estado = null;
							} else {
	                         		
        	row22.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_20, 10, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 11) {
								row22.FechaCREATED = null;
							} else {
	                         		
        	row22.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_20, 11, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 12) {
								row22.Fechalegalization = null;
							} else {
	                         		
        	row22.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_20, 12, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 13) {
								row22.Horalegalization = null;
							} else {
	                         		
        	row22.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_20, 13, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 14) {
								row22.Instalacion = null;
							} else {
	                         		
        	row22.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_20, 14, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 15) {
								row22.urbano_rural = null;
							} else {
	                         		
        	row22.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_20, 15, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 16) {
								row22.ortrinur = null;
							} else {
	                         		
        	row22.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_20, 16, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 17) {
								row22.descripciona = null;
							} else {
	                         		
        	row22.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_20, 17, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 18) {
								row22.Ciudad = null;
							} else {
	                         		
        	row22.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_20, 18, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 19) {
								row22.cmrudesc = null;
							} else {
	                         		
        	row22.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_20, 19, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 20) {
								row22.region = null;
							} else {
	                         		
        	row22.region = routines.system.JDBCUtil.getString(rs_tDBInput_20, 20, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 21) {
								row22.regndesc = null;
							} else {
	                         		
        	row22.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_20, 21, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 22) {
								row22.depacodi = null;
							} else {
	                         		
        	row22.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_20, 22, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 23) {
								row22.codigorespuesta = null;
							} else {
	                         		
        	row22.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_20, 23, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 24) {
								row22.respuestatencion = null;
							} else {
	                         		
        	row22.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_20, 24, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 25) {
								row22.x = null;
							} else {
	                         		
        	row22.x = routines.system.JDBCUtil.getString(rs_tDBInput_20, 25, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 26) {
								row22.y = null;
							} else {
	                         		
        	row22.y = routines.system.JDBCUtil.getString(rs_tDBInput_20, 26, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 27) {
								row22.Ano = null;
							} else {
	                         		
        	row22.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_20, 27, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 28) {
								row22.Mes = null;
							} else {
	                         		
        	row22.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_20, 28, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 29) {
								row22.Dia = null;
							} else {
	                         		
        	row22.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_20, 29, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 30) {
								row22.desc_cna = null;
							} else {
	                         		
        	row22.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_20, 30, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 31) {
								row22.ACTIVIDAD = null;
							} else {
	                         		
        	row22.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_20, 31, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 32) {
								row22.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row22.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_20, 32, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 33) {
								row22.FRECUENCIA = null;
							} else {
	                         		
        	row22.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_20, 33, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 34) {
								row22.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row22.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_20, 34, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 35) {
								row22.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row22.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_20, 35, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 36) {
								row22.ESTADO_CORTE = null;
							} else {
	                         		
        	row22.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_20, 36, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 37) {
								row22.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row22.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_20, 37, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 38) {
								row22.ROUTE_ID = null;
							} else {
	                         		
        	row22.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_20, 38, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 39) {
								row22.NAME_ = null;
							} else {
	                         		
        	row22.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_20, 39, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 40) {
								row22.NUMBER_ID = null;
							} else {
	                         		
        	row22.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_20, 40, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 41) {
								row22.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row22.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_20, 41, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 42) {
								row22.CAUSANL_OBS = null;
							} else {
	                         		
        	row22.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_20, 42, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 43) {
								row22.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row22.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_20, 43, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 44) {
								row22.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row22.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_20, 44, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 45) {
								row22.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row22.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_20, 45, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 46) {
								row22.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row22.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_20, 46, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 47) {
								row22.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row22.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_20, 47, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 48) {
								row22.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row22.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_20, 48, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 49) {
								row22.TIPO_SERVICIO = null;
							} else {
	                         		
        	row22.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_20, 49, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 50) {
								row22.categoria = null;
							} else {
	                         		
        	row22.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_20, 50, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 51) {
								row22.ESTRATO = null;
							} else {
	                         		
        	row22.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_20, 51, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 52) {
								row22.DESC_SERVICIO = null;
							} else {
	                         		
        	row22.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_20, 52, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 53) {
								row22.orden_relacionada = null;
							} else {
	                         		
        	row22.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_20, 53, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 54) {
								row22.order_activity_ID = null;
							} else {
	                         		
        	row22.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_20, 54, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 55) {
								row22.Adjunto = null;
							} else {
	                         		
        	row22.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_20, 55, false);
		                    }
							if(colQtyInRs_tDBInput_20 < 56) {
								row22.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row22.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_20, 56, false);
		                    }
					

 



/**
 * [tDBInput_20 begin ] stop
 */
	
	/**
	 * [tDBInput_20 main ] start
	 */

	

	
	
	currentComponent="tDBInput_20";

	

 


	tos_count_tDBInput_20++;

/**
 * [tDBInput_20 main ] stop
 */
	
	/**
	 * [tDBInput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_20";

	

 



/**
 * [tDBInput_20 process_data_begin ] stop
 */

	
	/**
	 * [tMap_20 main ] start
	 */

	

	
	
	currentComponent="tMap_20";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row22");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_20 = false;
		  boolean mainRowRejected_tMap_20 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_20__Struct Var = Var__tMap_20;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0'
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.FechaAsignacion = row22.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Equipo_Trabajo = row22.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.UNIDAD_OPERATIVA = row22.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Tarea = row22.Tarea;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.DescTarea = row22.DescTarea;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Orden = row22.Orden;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Ciclo = row22.Ciclo;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.servicio = row22.servicio;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Estado = row22.Estado;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Desc_estado = row22.Desc_estado;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.FechaCREATED = row22.FechaCREATED;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Fechalegalization = row22.Fechalegalization;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Horalegalization = row22.Horalegalization;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Instalacion = row22.Instalacion;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.urbano_rural = row22.urbano_rural;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.ortrinur = row22.ortrinur;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.descripciona = row22.descripciona;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Ciudad = row22.Ciudad;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.cmrudesc = row22.cmrudesc;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.region = row22.region;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.regndesc = row22.regndesc;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.depacodi = row22.depacodi;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.codigorespuesta = row22.codigorespuesta;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.respuestatencion = row22.respuestatencion;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.x = row22.x;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.y = row22.y;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Ano = row22.Ano;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Mes = row22.Mes;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Dia = row22.Dia;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.desc_cna = row22.desc_cna;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.ACTIVIDAD = row22.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.DESC_ACTIVIDAD = row22.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.FRECUENCIA = row22.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.CUENTAS_VENCIDAS = row22.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.SALDO_CUENTAS_VENCIDAS = row22.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.ESTADO_CORTE = row22.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.TIPO_ACTIVIDAD = row22.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.ROUTE_ID = row22.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.NAME_ = row22.NAME_;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.NUMBER_ID = row22.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.CODIGO_CAUSANL_OBS = row22.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.CAUSANL_OBS = row22.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.CODIGO_CAUSANL_OBS2 = row22.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.CAUSANL_OBS2 = row22.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.CODIGO_CAUSANL_OBS3 = row22.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.CAUSANL_OBS3 = row22.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.SERVICIO_SUSCRITO = row22.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.COD_TIPO_SERVICIO = row22.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.TIPO_SERVICIO = row22.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.categoria = row22.categoria;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.ESTRATO = row22.ESTRATO;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.DESC_SERVICIO = row22.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.orden_relacionada = row22.orden_relacionada;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.order_activity_ID = row22.order_activity_ID;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.Adjunto = row22.Adjunto;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp.ID_SECUENCIAS_ACTA = row22.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0 = copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_20 = false;










 


	tos_count_tMap_20++;

/**
 * [tMap_20 main ] stop
 */
	
	/**
	 * [tMap_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_20";

	

 



/**
 * [tMap_20 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0"
if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0 != null) { 



	
	/**
	 * [tDBOutput_20 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_20";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0");
					}
					



        whetherReject_tDBOutput_20 = false;
                    if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_20.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_20.setString(1, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_20 = -1;
            try (java.sql.ResultSet rs_tDBOutput_20 = pstmt_tDBOutput_20.executeQuery()) {
                while(rs_tDBOutput_20.next()) {
                    checkCount_tDBOutput_20 = rs_tDBOutput_20.getInt(1);
                }
            }
            if(checkCount_tDBOutput_20 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_20.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(1, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_20.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(2, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_20.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(3, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Tarea == null) {
pstmtUpdate_tDBOutput_20.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(4, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DescTarea == null) {
pstmtUpdate_tDBOutput_20.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(5, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Orden == null) {
pstmtUpdate_tDBOutput_20.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(6, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciclo == null) {
pstmtUpdate_tDBOutput_20.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(7, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.servicio == null) {
pstmtUpdate_tDBOutput_20.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(8, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Estado == null) {
pstmtUpdate_tDBOutput_20.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(9, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Desc_estado == null) {
pstmtUpdate_tDBOutput_20.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(10, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaCREATED == null) {
pstmtUpdate_tDBOutput_20.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(11, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Fechalegalization == null) {
pstmtUpdate_tDBOutput_20.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(12, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Horalegalization == null) {
pstmtUpdate_tDBOutput_20.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(13, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Instalacion == null) {
pstmtUpdate_tDBOutput_20.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(14, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.urbano_rural == null) {
pstmtUpdate_tDBOutput_20.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(15, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ortrinur == null) {
pstmtUpdate_tDBOutput_20.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(16, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.descripciona == null) {
pstmtUpdate_tDBOutput_20.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(17, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciudad == null) {
pstmtUpdate_tDBOutput_20.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(18, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.cmrudesc == null) {
pstmtUpdate_tDBOutput_20.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(19, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.region == null) {
pstmtUpdate_tDBOutput_20.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(20, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.region);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.regndesc == null) {
pstmtUpdate_tDBOutput_20.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(21, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.depacodi == null) {
pstmtUpdate_tDBOutput_20.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(22, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.codigorespuesta == null) {
pstmtUpdate_tDBOutput_20.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(23, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.respuestatencion == null) {
pstmtUpdate_tDBOutput_20.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(24, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.x == null) {
pstmtUpdate_tDBOutput_20.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(25, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.x);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.y == null) {
pstmtUpdate_tDBOutput_20.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(26, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.y);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ano == null) {
pstmtUpdate_tDBOutput_20.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(27, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Mes == null) {
pstmtUpdate_tDBOutput_20.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(28, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Dia == null) {
pstmtUpdate_tDBOutput_20.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(29, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.desc_cna == null) {
pstmtUpdate_tDBOutput_20.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(30, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_20.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(31, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_20.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(32, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_20.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(33, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_20.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(34, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_20.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(35, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_20.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(36, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_20.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(37, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_20.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(38, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NAME_ == null) {
pstmtUpdate_tDBOutput_20.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(39, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_20.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(40, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_20.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(41, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_20.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(42, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_20.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(43, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_20.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(44, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_20.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(45, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_20.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(46, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_20.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(47, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_20.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(48, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_20.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(49, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.categoria == null) {
pstmtUpdate_tDBOutput_20.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(50, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTRATO == null) {
pstmtUpdate_tDBOutput_20.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(51, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_20.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(52, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.orden_relacionada == null) {
pstmtUpdate_tDBOutput_20.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(53, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.order_activity_ID == null) {
pstmtUpdate_tDBOutput_20.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(54, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Adjunto == null) {
pstmtUpdate_tDBOutput_20.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(55, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_20.setNull(56 + count_tDBOutput_20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_20.setString(56 + count_tDBOutput_20, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_20 = updatedCount_tDBOutput_20 + pstmtUpdate_tDBOutput_20.executeUpdate();
                    nb_line_tDBOutput_20++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_20 = true;
                        nb_line_tDBOutput_20++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaAsignacion == null) {
pstmtInsert_tDBOutput_20.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(1, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_20.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(2, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_20.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(3, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Tarea == null) {
pstmtInsert_tDBOutput_20.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(4, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DescTarea == null) {
pstmtInsert_tDBOutput_20.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(5, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Orden == null) {
pstmtInsert_tDBOutput_20.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(6, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciclo == null) {
pstmtInsert_tDBOutput_20.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(7, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.servicio == null) {
pstmtInsert_tDBOutput_20.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(8, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Estado == null) {
pstmtInsert_tDBOutput_20.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(9, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Desc_estado == null) {
pstmtInsert_tDBOutput_20.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(10, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaCREATED == null) {
pstmtInsert_tDBOutput_20.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(11, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Fechalegalization == null) {
pstmtInsert_tDBOutput_20.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(12, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Horalegalization == null) {
pstmtInsert_tDBOutput_20.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(13, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Instalacion == null) {
pstmtInsert_tDBOutput_20.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(14, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.urbano_rural == null) {
pstmtInsert_tDBOutput_20.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(15, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ortrinur == null) {
pstmtInsert_tDBOutput_20.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(16, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.descripciona == null) {
pstmtInsert_tDBOutput_20.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(17, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciudad == null) {
pstmtInsert_tDBOutput_20.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(18, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.cmrudesc == null) {
pstmtInsert_tDBOutput_20.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(19, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.region == null) {
pstmtInsert_tDBOutput_20.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(20, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.region);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.regndesc == null) {
pstmtInsert_tDBOutput_20.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(21, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.depacodi == null) {
pstmtInsert_tDBOutput_20.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(22, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.codigorespuesta == null) {
pstmtInsert_tDBOutput_20.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(23, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.respuestatencion == null) {
pstmtInsert_tDBOutput_20.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(24, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.x == null) {
pstmtInsert_tDBOutput_20.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(25, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.x);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.y == null) {
pstmtInsert_tDBOutput_20.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(26, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.y);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ano == null) {
pstmtInsert_tDBOutput_20.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(27, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Mes == null) {
pstmtInsert_tDBOutput_20.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(28, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Dia == null) {
pstmtInsert_tDBOutput_20.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(29, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.desc_cna == null) {
pstmtInsert_tDBOutput_20.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(30, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_20.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(31, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_20.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(32, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_20.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(33, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_20.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(34, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_20.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(35, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_20.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(36, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_20.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(37, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_20.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(38, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NAME_ == null) {
pstmtInsert_tDBOutput_20.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(39, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_20.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(40, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_20.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(41, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_20.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(42, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_20.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(43, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_20.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(44, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_20.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(45, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_20.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(46, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_20.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(47, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_20.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(48, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_20.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(49, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.categoria == null) {
pstmtInsert_tDBOutput_20.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(50, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTRATO == null) {
pstmtInsert_tDBOutput_20.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(51, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_20.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(52, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.orden_relacionada == null) {
pstmtInsert_tDBOutput_20.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(53, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.order_activity_ID == null) {
pstmtInsert_tDBOutput_20.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(54, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Adjunto == null) {
pstmtInsert_tDBOutput_20.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(55, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_20.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_20.setString(56, copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0.ID_SECUENCIAS_ACTA);
}

                try {
                    insertedCount_tDBOutput_20 = insertedCount_tDBOutput_20 + pstmtInsert_tDBOutput_20.executeUpdate();
                    nb_line_tDBOutput_20++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_20 = true;
                        nb_line_tDBOutput_20++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_20) {
            }
                commitCounter_tDBOutput_20++;

                if(commitEvery_tDBOutput_20 <= commitCounter_tDBOutput_20) {

                    conn_tDBOutput_20.commit();
                    commitCounter_tDBOutput_20=0;

                }


 


	tos_count_tDBOutput_20++;

/**
 * [tDBOutput_20 main ] stop
 */
	
	/**
	 * [tDBOutput_20 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_20";

	

 



/**
 * [tDBOutput_20 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_20";

	

 



/**
 * [tDBOutput_20 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0"




	
	/**
	 * [tMap_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_20";

	

 



/**
 * [tMap_20 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_20 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_20";

	

 



/**
 * [tDBInput_20 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_20 end ] start
	 */

	

	
	
	currentComponent="tDBInput_20";

	

	}
}finally{
	if (rs_tDBInput_20 != null) {
		rs_tDBInput_20.close();
	}
	if (stmt_tDBInput_20 != null) {
		stmt_tDBInput_20.close();
	}
		if(conn_tDBInput_20 != null && !conn_tDBInput_20.isClosed()) {
			
			conn_tDBInput_20.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_20_NB_LINE",nb_line_tDBInput_20);
		


 

ok_Hash.put("tDBInput_20", true);
end_Hash.put("tDBInput_20", System.currentTimeMillis());




/**
 * [tDBInput_20 end ] stop
 */

	
	/**
	 * [tMap_20 end ] start
	 */

	

	
	
	currentComponent="tMap_20";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row22");
			  	}
			  	
 

ok_Hash.put("tMap_20", true);
end_Hash.put("tMap_20", System.currentTimeMillis());




/**
 * [tMap_20 end ] stop
 */

	
	/**
	 * [tDBOutput_20 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_20";

	



        if(pstmtUpdate_tDBOutput_20 != null){
            pstmtUpdate_tDBOutput_20.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_20");
        }
        if(pstmtInsert_tDBOutput_20 != null){
            pstmtInsert_tDBOutput_20.close();
            resourceMap.remove("pstmtInsert_tDBOutput_20");
        }
        if(pstmt_tDBOutput_20 != null) {
            pstmt_tDBOutput_20.close();
            resourceMap.remove("pstmt_tDBOutput_20");
        }
    resourceMap.put("statementClosed_tDBOutput_20", true);
    	if (commitCounter_tDBOutput_20 > 0) {
    		
    		conn_tDBOutput_20.commit();
    		
    	}
    		
		
    	conn_tDBOutput_20 .close();
    	
    	resourceMap.put("finish_tDBOutput_20", true);
    	

	nb_line_deleted_tDBOutput_20=nb_line_deleted_tDBOutput_20+ deletedCount_tDBOutput_20;
	nb_line_update_tDBOutput_20=nb_line_update_tDBOutput_20 + updatedCount_tDBOutput_20;
	nb_line_inserted_tDBOutput_20=nb_line_inserted_tDBOutput_20 + insertedCount_tDBOutput_20;
	nb_line_rejected_tDBOutput_20=nb_line_rejected_tDBOutput_20 + rejectedCount_tDBOutput_20;
	
        globalMap.put("tDBOutput_20_NB_LINE",nb_line_tDBOutput_20);
        globalMap.put("tDBOutput_20_NB_LINE_UPDATED",nb_line_update_tDBOutput_20);
        globalMap.put("tDBOutput_20_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_20);
        globalMap.put("tDBOutput_20_NB_LINE_DELETED",nb_line_deleted_tDBOutput_20);
        globalMap.put("tDBOutput_20_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_20);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfPASAR_SECUENCIAS_3_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_20", true);
end_Hash.put("tDBOutput_20", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tDBInput_13Process(globalMap);



/**
 * [tDBOutput_20 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_20 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_20";

	

 



/**
 * [tDBInput_20 finally ] stop
 */

	
	/**
	 * [tMap_20 finally ] start
	 */

	

	
	
	currentComponent="tMap_20";

	

 



/**
 * [tMap_20 finally ] stop
 */

	
	/**
	 * [tDBOutput_20 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_20";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_20") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_20 = null;
                if ((pstmtUpdateToClose_tDBOutput_20 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_20")) != null) {
                    pstmtUpdateToClose_tDBOutput_20.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_20 = null;
                if ((pstmtInsertToClose_tDBOutput_20 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_20")) != null) {
                    pstmtInsertToClose_tDBOutput_20.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_20 = null;
                if ((pstmtToClose_tDBOutput_20 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_20")) != null) {
                    pstmtToClose_tDBOutput_20.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_20") == null){
            java.sql.Connection ctn_tDBOutput_20 = null;
            if((ctn_tDBOutput_20 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_20")) != null){
                try {
                    ctn_tDBOutput_20.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_20) {
                    String errorMessage_tDBOutput_20 = "failed to close the connection in tDBOutput_20 :" + sqlEx_tDBOutput_20.getMessage();
                    System.err.println(errorMessage_tDBOutput_20);
                }
            }
        }
    }
 



/**
 * [tDBOutput_20 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_20_SUBPROCESS_STATE", 1);
	}
	


public static class crearK_disperStruct implements routines.system.IPersistableRow<crearK_disperStruct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String TOTAL_ORDENES;

				public String getTOTAL_ORDENES () {
					return this.TOTAL_ORDENES;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FECHALEGALIZATION = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.TOTAL_ORDENES = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TOTAL_ORDENES,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",TOTAL_ORDENES="+TOTAL_ORDENES);
		sb.append(",K_DISPERSION="+K_DISPERSION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(crearK_disperStruct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String REGION;

				public String getREGION () {
					return this.REGION;
				}
				
			    public String REGNDESC;

				public String getREGNDESC () {
					return this.REGNDESC;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String TOTAL_ORDENES;

				public String getTOTAL_ORDENES () {
					return this.TOTAL_ORDENES;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FECHALEGALIZATION = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.REGION = readString(dis);
					
					this.REGNDESC = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.TOTAL_ORDENES = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.REGION,dos);
					
					// String
				
						writeString(this.REGNDESC,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.TOTAL_ORDENES,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",REGION="+REGION);
		sb.append(",REGNDESC="+REGNDESC);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",TOTAL_ORDENES="+TOTAL_ORDENES);
		sb.append(",K_DISPERSION="+K_DISPERSION);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row13Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_13_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row13Struct row13 = new row13Struct();
crearK_disperStruct crearK_disper = new crearK_disperStruct();





	
	/**
	 * [tDBOutput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_13", false);
		start_Hash.put("tDBOutput_13", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_13";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"crearK_disper");
					}
				
		int tos_count_tDBOutput_13 = 0;
		






int nb_line_tDBOutput_13 = 0;
int nb_line_update_tDBOutput_13 = 0;
int nb_line_inserted_tDBOutput_13 = 0;
int nb_line_deleted_tDBOutput_13 = 0;
int nb_line_rejected_tDBOutput_13 = 0;

int deletedCount_tDBOutput_13=0;
int updatedCount_tDBOutput_13=0;
int insertedCount_tDBOutput_13=0;

int rejectedCount_tDBOutput_13=0;

String tableName_tDBOutput_13 = "temporal_trimestral_k";
boolean whetherReject_tDBOutput_13 = false;

java.util.Calendar calendar_tDBOutput_13 = java.util.Calendar.getInstance();
calendar_tDBOutput_13.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_13 = calendar_tDBOutput_13.getTime().getTime();
calendar_tDBOutput_13.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_13 = calendar_tDBOutput_13.getTime().getTime();
long date_tDBOutput_13;

java.sql.Connection conn_tDBOutput_13 = null;
		String dbProperties_tDBOutput_13 = "noDatetimeStringSync=true";
		String url_tDBOutput_13 = null;
		if(dbProperties_tDBOutput_13 == null || dbProperties_tDBOutput_13.trim().length() == 0) {
			url_tDBOutput_13 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_13 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_13.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_13 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_13 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_13;
		}
		String driverClass_tDBOutput_13 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_13 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_13 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:gxMM4D1Ezidk257jjziiqKKshipWx5sQsE773Qh43rFFi6kMus4rhY8=");

		String dbPwd_tDBOutput_13 = decryptedPassword_tDBOutput_13;
		java.lang.Class.forName(driverClass_tDBOutput_13);
		
		conn_tDBOutput_13 = java.sql.DriverManager.getConnection(url_tDBOutput_13, dbUser_tDBOutput_13, dbPwd_tDBOutput_13);
		
	
	resourceMap.put("conn_tDBOutput_13", conn_tDBOutput_13);
        conn_tDBOutput_13.setAutoCommit(false);
        int commitEvery_tDBOutput_13 = 10000;
        int commitCounter_tDBOutput_13 = 0;

int count_tDBOutput_13=0;
    	
            int rsTruncCountNumber_tDBOutput_13 = 0;
            try(java.sql.Statement stmtTruncCount_tDBOutput_13 = conn_tDBOutput_13.createStatement()) {
                try (java.sql.ResultSet rsTruncCount_tDBOutput_13 = stmtTruncCount_tDBOutput_13.executeQuery("SELECT COUNT(1) FROM `" + tableName_tDBOutput_13 + "`")) {
                    if(rsTruncCount_tDBOutput_13.next()) {
                        rsTruncCountNumber_tDBOutput_13 = rsTruncCount_tDBOutput_13.getInt(1);
                    }
                }
            }
            try (java.sql.Statement stmtTrunc_tDBOutput_13 = conn_tDBOutput_13.createStatement()) {
                stmtTrunc_tDBOutput_13.executeUpdate("TRUNCATE TABLE `" + tableName_tDBOutput_13 + "`");
                deletedCount_tDBOutput_13 += rsTruncCountNumber_tDBOutput_13;
            }

				String insert_tDBOutput_13 = "INSERT INTO `" + "temporal_trimestral_k" + "` (`FECHALEGALIZATION`,`NUMBER_ID`,`ROUTE_ID`,`REGION`,`REGNDESC`,`DESC_ACTIVIDAD`,`TOTAL_ORDENES`,`K_DISPERSION`) VALUES (?,?,?,?,?,?,?,?)";
		        int batchSize_tDBOutput_13 = 100;
	   			int batchSizeCounter_tDBOutput_13=0;
		            
		        java.sql.PreparedStatement pstmt_tDBOutput_13 = conn_tDBOutput_13.prepareStatement(insert_tDBOutput_13);
		        resourceMap.put("pstmt_tDBOutput_13", pstmt_tDBOutput_13);


 



/**
 * [tDBOutput_13 begin ] stop
 */



	
	/**
	 * [tMap_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_13", false);
		start_Hash.put("tMap_13", System.currentTimeMillis());
		
	
	currentComponent="tMap_13";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row13");
					}
				
		int tos_count_tMap_13 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_13__Struct  {
}
Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
crearK_disperStruct crearK_disper_tmp = new crearK_disperStruct();
// ###############################

        
        



        









 



/**
 * [tMap_13 begin ] stop
 */



	
	/**
	 * [tDBInput_13 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_13", false);
		start_Hash.put("tDBInput_13", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_13";

	
		int tos_count_tDBInput_13 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_13 = java.util.Calendar.getInstance();
		    calendar_tDBInput_13.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_13 = calendar_tDBInput_13.getTime();
		    int nb_line_tDBInput_13 = 0;
		    java.sql.Connection conn_tDBInput_13 = null;
				String driverClass_tDBInput_13 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_13 = java.lang.Class.forName(driverClass_tDBInput_13);
				String dbUser_tDBInput_13 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_13 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:45dn+vCDqvgOblDRUKLNMlrwAzmYTpQbYH3xQvnqeBaEDk7uPWxM4sA=");
				
				String dbPwd_tDBInput_13 = decryptedPassword_tDBInput_13;
				
				String url_tDBInput_13 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_13 = java.sql.DriverManager.getConnection(url_tDBInput_13,dbUser_tDBInput_13,dbPwd_tDBInput_13);
		        
		    
			java.sql.Statement stmt_tDBInput_13 = conn_tDBInput_13.createStatement();

		    String dbquery_tDBInput_13 = "SELECT \nFECHALEGALIZATION\n,NUMBER_ID\n,ROUTE_ID\n,REGION\n,REGNDESC\n,'LECTURA DE MEDIDORES' DESC_ACTIVIDAD\n,(COUNT("
+"ID_SECUENCIAS_ACTA)) TOTAL_ORDENES\n,((CASE WHEN (COUNT(ID_SECUENCIAS_ACTA)) <='20' THEN 4 Else 0 End)\n+(CASE WHEN ((CO"
+"UNT(ID_SECUENCIAS_ACTA)) >='21' and (COUNT(ID_SECUENCIAS_ACTA)) <='40')  THEN 1.5 Else 0 End)\n+(CASE WHEN (COUNT(ID_SEC"
+"UENCIAS_ACTA)) >='41' THEN 1 Else 0 End)) K_DISPERSION\nfrom secuencias_acta1\nWHERE FRECUENCIA ='3'\nand FECHALEGALIZAT"
+"ION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion)\nand FECHALEGALIZATION <= (select (CONCA"
+"T(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)\nGROUP BY \nFECHALEGALIZATION\n,NUMBER_ID\n,ROUTE_ID\n,REGION"
+"\n,REGNDESC\n,DESC_ACTIVIDAD";
			

            	globalMap.put("tDBInput_13_QUERY",dbquery_tDBInput_13);
		    java.sql.ResultSet rs_tDBInput_13 = null;

		    try {
		    	rs_tDBInput_13 = stmt_tDBInput_13.executeQuery(dbquery_tDBInput_13);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_13 = rs_tDBInput_13.getMetaData();
		    	int colQtyInRs_tDBInput_13 = rsmd_tDBInput_13.getColumnCount();

		    String tmpContent_tDBInput_13 = null;
		    
		    
		    while (rs_tDBInput_13.next()) {
		        nb_line_tDBInput_13++;
		        
							if(colQtyInRs_tDBInput_13 < 1) {
								row13.FECHALEGALIZATION = null;
							} else {
	                         		
        	row13.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_13, 1, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 2) {
								row13.NUMBER_ID = null;
							} else {
	                         		
        	row13.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_13, 2, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 3) {
								row13.ROUTE_ID = null;
							} else {
	                         		
        	row13.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_13, 3, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 4) {
								row13.REGION = null;
							} else {
	                         		
        	row13.REGION = routines.system.JDBCUtil.getString(rs_tDBInput_13, 4, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 5) {
								row13.REGNDESC = null;
							} else {
	                         		
        	row13.REGNDESC = routines.system.JDBCUtil.getString(rs_tDBInput_13, 5, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 6) {
								row13.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row13.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_13, 6, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 7) {
								row13.TOTAL_ORDENES = null;
							} else {
	                         		
        	row13.TOTAL_ORDENES = routines.system.JDBCUtil.getString(rs_tDBInput_13, 7, false);
		                    }
							if(colQtyInRs_tDBInput_13 < 8) {
								row13.K_DISPERSION = null;
							} else {
	                         		
        	row13.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_13, 8, false);
		                    }
					

 



/**
 * [tDBInput_13 begin ] stop
 */
	
	/**
	 * [tDBInput_13 main ] start
	 */

	

	
	
	currentComponent="tDBInput_13";

	

 


	tos_count_tDBInput_13++;

/**
 * [tDBInput_13 main ] stop
 */
	
	/**
	 * [tDBInput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_13";

	

 



/**
 * [tDBInput_13 process_data_begin ] stop
 */

	
	/**
	 * [tMap_13 main ] start
	 */

	

	
	
	currentComponent="tMap_13";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row13");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_13 = false;
		  boolean mainRowRejected_tMap_13 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
        // ###############################
        // # Output tables

crearK_disper = null;


// # Output table : 'crearK_disper'
crearK_disper_tmp.FECHALEGALIZATION = row13.FECHALEGALIZATION;
crearK_disper_tmp.NUMBER_ID = row13.NUMBER_ID;
crearK_disper_tmp.ROUTE_ID = row13.ROUTE_ID;
crearK_disper_tmp.REGION = row13.REGION;
crearK_disper_tmp.REGNDESC = row13.REGNDESC;
crearK_disper_tmp.DESC_ACTIVIDAD = row13.DESC_ACTIVIDAD;
crearK_disper_tmp.TOTAL_ORDENES = row13.TOTAL_ORDENES;
crearK_disper_tmp.K_DISPERSION = row13.K_DISPERSION;
crearK_disper = crearK_disper_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_13 = false;










 


	tos_count_tMap_13++;

/**
 * [tMap_13 main ] stop
 */
	
	/**
	 * [tMap_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_13";

	

 



/**
 * [tMap_13 process_data_begin ] stop
 */
// Start of branch "crearK_disper"
if(crearK_disper != null) { 



	
	/**
	 * [tDBOutput_13 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_13";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"crearK_disper");
					}
					



        whetherReject_tDBOutput_13 = false;
                            if(crearK_disper.FECHALEGALIZATION == null) {
pstmt_tDBOutput_13.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(1, crearK_disper.FECHALEGALIZATION);
}

                            if(crearK_disper.NUMBER_ID == null) {
pstmt_tDBOutput_13.setNull(2, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(2, crearK_disper.NUMBER_ID);
}

                            if(crearK_disper.ROUTE_ID == null) {
pstmt_tDBOutput_13.setNull(3, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(3, crearK_disper.ROUTE_ID);
}

                            if(crearK_disper.REGION == null) {
pstmt_tDBOutput_13.setNull(4, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(4, crearK_disper.REGION);
}

                            if(crearK_disper.REGNDESC == null) {
pstmt_tDBOutput_13.setNull(5, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(5, crearK_disper.REGNDESC);
}

                            if(crearK_disper.DESC_ACTIVIDAD == null) {
pstmt_tDBOutput_13.setNull(6, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(6, crearK_disper.DESC_ACTIVIDAD);
}

                            if(crearK_disper.TOTAL_ORDENES == null) {
pstmt_tDBOutput_13.setNull(7, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(7, crearK_disper.TOTAL_ORDENES);
}

                            if(crearK_disper.K_DISPERSION == null) {
pstmt_tDBOutput_13.setNull(8, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_13.setString(8, crearK_disper.K_DISPERSION);
}

                    pstmt_tDBOutput_13.addBatch();
                    nb_line_tDBOutput_13++;

						
                      batchSizeCounter_tDBOutput_13++;
            if(!whetherReject_tDBOutput_13) {
            }
                if ( batchSize_tDBOutput_13 <= batchSizeCounter_tDBOutput_13) {
                try {
                        int countSum_tDBOutput_13 = 0;
                        for(int countEach_tDBOutput_13: pstmt_tDBOutput_13.executeBatch()) {
                            countSum_tDBOutput_13 += (countEach_tDBOutput_13 == java.sql.Statement.EXECUTE_FAILED ? 0 : 1);
                        }
                        insertedCount_tDBOutput_13 += countSum_tDBOutput_13;
                }catch (java.sql.BatchUpdateException e){
                    int countSum_tDBOutput_13 = 0;
                    for(int countEach_tDBOutput_13: e.getUpdateCounts()) {
                        countSum_tDBOutput_13 += (countEach_tDBOutput_13 < 0 ? 0 : countEach_tDBOutput_13);
                    }
                    insertedCount_tDBOutput_13 += countSum_tDBOutput_13;
                    System.err.println(e.getMessage());
                }

                batchSizeCounter_tDBOutput_13 = 0;
            }
                commitCounter_tDBOutput_13++;

                if(commitEvery_tDBOutput_13 <= commitCounter_tDBOutput_13) {

                try {
                        int countSum_tDBOutput_13 = 0;
                        for(int countEach_tDBOutput_13: pstmt_tDBOutput_13.executeBatch()) {
                            countSum_tDBOutput_13 += (countEach_tDBOutput_13 < 0 ? 0 : 1);
                        }
                        insertedCount_tDBOutput_13 += countSum_tDBOutput_13;
                }catch (java.sql.BatchUpdateException e){
                    int countSum_tDBOutput_13 = 0;
                    for(int countEach_tDBOutput_13: e.getUpdateCounts()) {
                        countSum_tDBOutput_13 += (countEach_tDBOutput_13 < 0 ? 0 : countEach_tDBOutput_13);
                    }
                    insertedCount_tDBOutput_13 += countSum_tDBOutput_13;
                    System.err.println(e.getMessage());

                }
                    conn_tDBOutput_13.commit();
                    commitCounter_tDBOutput_13=0;

                }


 


	tos_count_tDBOutput_13++;

/**
 * [tDBOutput_13 main ] stop
 */
	
	/**
	 * [tDBOutput_13 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_13";

	

 



/**
 * [tDBOutput_13 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_13";

	

 



/**
 * [tDBOutput_13 process_data_end ] stop
 */

} // End of branch "crearK_disper"




	
	/**
	 * [tMap_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_13";

	

 



/**
 * [tMap_13 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_13 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_13";

	

 



/**
 * [tDBInput_13 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_13 end ] start
	 */

	

	
	
	currentComponent="tDBInput_13";

	

	}
}finally{
	if (rs_tDBInput_13 != null) {
		rs_tDBInput_13.close();
	}
	if (stmt_tDBInput_13 != null) {
		stmt_tDBInput_13.close();
	}
		if(conn_tDBInput_13 != null && !conn_tDBInput_13.isClosed()) {
			
			conn_tDBInput_13.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_13_NB_LINE",nb_line_tDBInput_13);
		


 

ok_Hash.put("tDBInput_13", true);
end_Hash.put("tDBInput_13", System.currentTimeMillis());




/**
 * [tDBInput_13 end ] stop
 */

	
	/**
	 * [tMap_13 end ] start
	 */

	

	
	
	currentComponent="tMap_13";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row13");
			  	}
			  	
 

ok_Hash.put("tMap_13", true);
end_Hash.put("tMap_13", System.currentTimeMillis());




/**
 * [tMap_13 end ] stop
 */

	
	/**
	 * [tDBOutput_13 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_13";

	



                try {
                		if (batchSizeCounter_tDBOutput_13 != 0) {
							int countSum_tDBOutput_13 = 0;
							
							for(int countEach_tDBOutput_13: pstmt_tDBOutput_13.executeBatch()) {
								countSum_tDBOutput_13 += (countEach_tDBOutput_13 == java.sql.Statement.EXECUTE_FAILED ? 0 : 1);
							}
							
	            	    	
	            	    		insertedCount_tDBOutput_13 += countSum_tDBOutput_13;
	            	    	
            	    	}

                }catch (java.sql.BatchUpdateException e){
                	
                	int countSum_tDBOutput_13 = 0;
					for(int countEach_tDBOutput_13: e.getUpdateCounts()) {
						countSum_tDBOutput_13 += (countEach_tDBOutput_13 < 0 ? 0 : countEach_tDBOutput_13);
					}
					
            	    insertedCount_tDBOutput_13 += countSum_tDBOutput_13;
	    	    	
					globalMap.put(currentComponent+"_ERROR_MESSAGE",e.getMessage());
                	System.err.println(e.getMessage());
                	
                }
                batchSizeCounter_tDBOutput_13 = 0;
    		
	

        if(pstmt_tDBOutput_13 != null) {
			
				pstmt_tDBOutput_13.close();
				resourceMap.remove("pstmt_tDBOutput_13");
			
        }
    resourceMap.put("statementClosed_tDBOutput_13", true);
    	if (commitCounter_tDBOutput_13 > 0) {
    		
    		conn_tDBOutput_13.commit();
    		
    	}
    		
		
    	conn_tDBOutput_13 .close();
    	
    	resourceMap.put("finish_tDBOutput_13", true);
    	

	nb_line_deleted_tDBOutput_13=nb_line_deleted_tDBOutput_13+ deletedCount_tDBOutput_13;
	nb_line_update_tDBOutput_13=nb_line_update_tDBOutput_13 + updatedCount_tDBOutput_13;
	nb_line_inserted_tDBOutput_13=nb_line_inserted_tDBOutput_13 + insertedCount_tDBOutput_13;
	nb_line_rejected_tDBOutput_13=nb_line_rejected_tDBOutput_13 + rejectedCount_tDBOutput_13;
	
        globalMap.put("tDBOutput_13_NB_LINE",nb_line_tDBOutput_13);
        globalMap.put("tDBOutput_13_NB_LINE_UPDATED",nb_line_update_tDBOutput_13);
        globalMap.put("tDBOutput_13_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_13);
        globalMap.put("tDBOutput_13_NB_LINE_DELETED",nb_line_deleted_tDBOutput_13);
        globalMap.put("tDBOutput_13_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_13);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"crearK_disper");
			  	}
			  	
 

ok_Hash.put("tDBOutput_13", true);
end_Hash.put("tDBOutput_13", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk13", 0, "ok");
				}
				tDBInput_14Process(globalMap);



/**
 * [tDBOutput_13 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_13 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_13";

	

 



/**
 * [tDBInput_13 finally ] stop
 */

	
	/**
	 * [tMap_13 finally ] start
	 */

	

	
	
	currentComponent="tMap_13";

	

 



/**
 * [tMap_13 finally ] stop
 */

	
	/**
	 * [tDBOutput_13 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_13";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_13") == null) {
                java.sql.PreparedStatement pstmtToClose_tDBOutput_13 = null;
                if ((pstmtToClose_tDBOutput_13 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_13")) != null) {
                    pstmtToClose_tDBOutput_13.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_13") == null){
            java.sql.Connection ctn_tDBOutput_13 = null;
            if((ctn_tDBOutput_13 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_13")) != null){
                try {
                    ctn_tDBOutput_13.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_13) {
                    String errorMessage_tDBOutput_13 = "failed to close the connection in tDBOutput_13 :" + sqlEx_tDBOutput_13.getMessage();
                    System.err.println(errorMessage_tDBOutput_13);
                }
            }
        }
    }
 



/**
 * [tDBOutput_13 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_13_SUBPROCESS_STATE", 1);
	}
	


public static class KDISPERSION_DETALLEStruct implements routines.system.IPersistableRow<KDISPERSION_DETALLEStruct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final KDISPERSION_DETALLEStruct other = (KDISPERSION_DETALLEStruct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(KDISPERSION_DETALLEStruct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(KDISPERSION_DETALLEStruct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(KDISPERSION_DETALLEStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row14Struct implements routines.system.IPersistableRow<row14Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row14Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_14_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row14Struct row14 = new row14Struct();
KDISPERSION_DETALLEStruct KDISPERSION_DETALLE = new KDISPERSION_DETALLEStruct();





	
	/**
	 * [tDBOutput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_14", false);
		start_Hash.put("tDBOutput_14", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_14";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"KDISPERSION_DETALLE");
					}
				
		int tos_count_tDBOutput_14 = 0;
		





        int updateKeyCount_tDBOutput_14 = 1;
        if(updateKeyCount_tDBOutput_14 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_14 = 0;
int nb_line_update_tDBOutput_14 = 0;
int nb_line_inserted_tDBOutput_14 = 0;
int nb_line_deleted_tDBOutput_14 = 0;
int nb_line_rejected_tDBOutput_14 = 0;

int deletedCount_tDBOutput_14=0;
int updatedCount_tDBOutput_14=0;
int insertedCount_tDBOutput_14=0;

int rejectedCount_tDBOutput_14=0;

String tableName_tDBOutput_14 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_14 = false;

java.util.Calendar calendar_tDBOutput_14 = java.util.Calendar.getInstance();
calendar_tDBOutput_14.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_14 = calendar_tDBOutput_14.getTime().getTime();
calendar_tDBOutput_14.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_14 = calendar_tDBOutput_14.getTime().getTime();
long date_tDBOutput_14;

java.sql.Connection conn_tDBOutput_14 = null;
		String dbProperties_tDBOutput_14 = "noDatetimeStringSync=true";
		String url_tDBOutput_14 = null;
		if(dbProperties_tDBOutput_14 == null || dbProperties_tDBOutput_14.trim().length() == 0) {
			url_tDBOutput_14 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_14 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_14.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_14 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_14 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_14;
		}
		String driverClass_tDBOutput_14 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_14 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_14 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:5TSIX9ePVJUfbR9ex77aQBjII4MEWjyhlLXIHQ36tFQ/6gINIYYfsro=");

		String dbPwd_tDBOutput_14 = decryptedPassword_tDBOutput_14;
		java.lang.Class.forName(driverClass_tDBOutput_14);
		
		conn_tDBOutput_14 = java.sql.DriverManager.getConnection(url_tDBOutput_14, dbUser_tDBOutput_14, dbPwd_tDBOutput_14);
		
	
	resourceMap.put("conn_tDBOutput_14", conn_tDBOutput_14);
        conn_tDBOutput_14.setAutoCommit(false);
        int commitEvery_tDBOutput_14 = 10000;
        int commitCounter_tDBOutput_14 = 0;

int count_tDBOutput_14=0;
    	
            int rsTruncCountNumber_tDBOutput_14 = 0;
            try(java.sql.Statement stmtTruncCount_tDBOutput_14 = conn_tDBOutput_14.createStatement()) {
                try (java.sql.ResultSet rsTruncCount_tDBOutput_14 = stmtTruncCount_tDBOutput_14.executeQuery("SELECT COUNT(1) FROM `" + tableName_tDBOutput_14 + "`")) {
                    if(rsTruncCount_tDBOutput_14.next()) {
                        rsTruncCountNumber_tDBOutput_14 = rsTruncCount_tDBOutput_14.getInt(1);
                    }
                }
            }
            try (java.sql.Statement stmtTrunc_tDBOutput_14 = conn_tDBOutput_14.createStatement()) {
                stmtTrunc_tDBOutput_14.executeUpdate("TRUNCATE TABLE `" + tableName_tDBOutput_14 + "`");
                deletedCount_tDBOutput_14 += rsTruncCountNumber_tDBOutput_14;
            }
	    java.sql.PreparedStatement pstmt_tDBOutput_14 = conn_tDBOutput_14.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_14", pstmt_tDBOutput_14);
	    String insert_tDBOutput_14 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_14 = conn_tDBOutput_14.prepareStatement(insert_tDBOutput_14);
	    resourceMap.put("pstmtInsert_tDBOutput_14", pstmtInsert_tDBOutput_14);
	    String update_tDBOutput_14 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_14 = conn_tDBOutput_14.prepareStatement(update_tDBOutput_14);
	    resourceMap.put("pstmtUpdate_tDBOutput_14", pstmtUpdate_tDBOutput_14);
	    

 



/**
 * [tDBOutput_14 begin ] stop
 */



	
	/**
	 * [tMap_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_14", false);
		start_Hash.put("tMap_14", System.currentTimeMillis());
		
	
	currentComponent="tMap_14";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row14");
					}
				
		int tos_count_tMap_14 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_14__Struct  {
}
Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
KDISPERSION_DETALLEStruct KDISPERSION_DETALLE_tmp = new KDISPERSION_DETALLEStruct();
// ###############################

        
        



        









 



/**
 * [tMap_14 begin ] stop
 */



	
	/**
	 * [tDBInput_14 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_14", false);
		start_Hash.put("tDBInput_14", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_14";

	
		int tos_count_tDBInput_14 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_14 = java.util.Calendar.getInstance();
		    calendar_tDBInput_14.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_14 = calendar_tDBInput_14.getTime();
		    int nb_line_tDBInput_14 = 0;
		    java.sql.Connection conn_tDBInput_14 = null;
				String driverClass_tDBInput_14 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_14 = java.lang.Class.forName(driverClass_tDBInput_14);
				String dbUser_tDBInput_14 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_14 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:UXAX2Y6ddBU3zUu5mitePq87XhRrwnuRe94B86dVlQsDwhIx7SH781w=");
				
				String dbPwd_tDBInput_14 = decryptedPassword_tDBInput_14;
				
				String url_tDBInput_14 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_14 = java.sql.DriverManager.getConnection(url_tDBInput_14,dbUser_tDBInput_14,dbPwd_tDBInput_14);
		        
		    
			java.sql.Statement stmt_tDBInput_14 = conn_tDBInput_14.createStatement();

		    String dbquery_tDBInput_14 = "select \na.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a.Orde"
+"n  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization  ,\n	"
+" a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  ,\n	 "
+"a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 a.x  "
+",\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FRECUENCI"
+"A ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_ID  ,"
+"\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CAUSANL"
+"_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a.TIPO_"
+"SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_ID  ,"
+"\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n     b.K_DISPERSION,\n     'LECT3' SIGLA_ACTIVIDAD,\n(SELECT distinct c.RURAL"
+"_PRICE FROM acta_precios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL' )VALOR_UNITARIO\n,((SELECT distinct c.RU"
+"RAL_PRICE FROM acta_precios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL'  )*b.K_DISPERSION ) VALOR_K\nfrom sec"
+"uencias_acta1 a, temporal_trimestral_k b\nwhere b.ROUTE_ID=a.ROUTE_ID\nand b.region = a.region\nAND b.Fechalegalization="
+" a.Fechalegalization\nAND a.FRECUENCIA='3'\nand  a.id_secuencias_acta not in (SELECT id_secuencias_acta FROM secuencias_"
+"kdispersion )\nand a.FECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion)\nand "
+"a.FECHALEGALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_14_QUERY",dbquery_tDBInput_14);
		    java.sql.ResultSet rs_tDBInput_14 = null;

		    try {
		    	rs_tDBInput_14 = stmt_tDBInput_14.executeQuery(dbquery_tDBInput_14);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_14 = rs_tDBInput_14.getMetaData();
		    	int colQtyInRs_tDBInput_14 = rsmd_tDBInput_14.getColumnCount();

		    String tmpContent_tDBInput_14 = null;
		    
		    
		    while (rs_tDBInput_14.next()) {
		        nb_line_tDBInput_14++;
		        
							if(colQtyInRs_tDBInput_14 < 1) {
								row14.FechaAsignacion = null;
							} else {
	                         		
        	row14.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_14, 1, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 2) {
								row14.Equipo_Trabajo = null;
							} else {
	                         		
        	row14.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_14, 2, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 3) {
								row14.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row14.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_14, 3, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 4) {
								row14.Tarea = null;
							} else {
	                         		
        	row14.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_14, 4, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 5) {
								row14.DescTarea = null;
							} else {
	                         		
        	row14.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_14, 5, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 6) {
								row14.Orden = null;
							} else {
	                         		
        	row14.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_14, 6, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 7) {
								row14.Ciclo = null;
							} else {
	                         		
        	row14.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_14, 7, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 8) {
								row14.servicio = null;
							} else {
	                         		
        	row14.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_14, 8, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 9) {
								row14.Estado = null;
							} else {
	                         		
        	row14.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_14, 9, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 10) {
								row14.Desc_estado = null;
							} else {
	                         		
        	row14.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_14, 10, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 11) {
								row14.FechaCREATED = null;
							} else {
	                         		
        	row14.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_14, 11, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 12) {
								row14.Fechalegalization = null;
							} else {
	                         		
        	row14.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_14, 12, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 13) {
								row14.Horalegalization = null;
							} else {
	                         		
        	row14.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_14, 13, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 14) {
								row14.Instalacion = null;
							} else {
	                         		
        	row14.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_14, 14, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 15) {
								row14.urbano_rural = null;
							} else {
	                         		
        	row14.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_14, 15, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 16) {
								row14.ortrinur = null;
							} else {
	                         		
        	row14.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_14, 16, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 17) {
								row14.descripciona = null;
							} else {
	                         		
        	row14.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_14, 17, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 18) {
								row14.Ciudad = null;
							} else {
	                         		
        	row14.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_14, 18, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 19) {
								row14.cmrudesc = null;
							} else {
	                         		
        	row14.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_14, 19, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 20) {
								row14.region = null;
							} else {
	                         		
        	row14.region = routines.system.JDBCUtil.getString(rs_tDBInput_14, 20, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 21) {
								row14.regndesc = null;
							} else {
	                         		
        	row14.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_14, 21, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 22) {
								row14.depacodi = null;
							} else {
	                         		
        	row14.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_14, 22, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 23) {
								row14.codigorespuesta = null;
							} else {
	                         		
        	row14.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_14, 23, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 24) {
								row14.respuestatencion = null;
							} else {
	                         		
        	row14.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_14, 24, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 25) {
								row14.x = null;
							} else {
	                         		
        	row14.x = routines.system.JDBCUtil.getString(rs_tDBInput_14, 25, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 26) {
								row14.y = null;
							} else {
	                         		
        	row14.y = routines.system.JDBCUtil.getString(rs_tDBInput_14, 26, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 27) {
								row14.Ano = null;
							} else {
	                         		
        	row14.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_14, 27, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 28) {
								row14.Mes = null;
							} else {
	                         		
        	row14.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_14, 28, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 29) {
								row14.Dia = null;
							} else {
	                         		
        	row14.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_14, 29, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 30) {
								row14.desc_cna = null;
							} else {
	                         		
        	row14.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_14, 30, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 31) {
								row14.ACTIVIDAD = null;
							} else {
	                         		
        	row14.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_14, 31, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 32) {
								row14.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row14.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_14, 32, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 33) {
								row14.FRECUENCIA = null;
							} else {
	                         		
        	row14.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_14, 33, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 34) {
								row14.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row14.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_14, 34, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 35) {
								row14.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row14.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_14, 35, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 36) {
								row14.ESTADO_CORTE = null;
							} else {
	                         		
        	row14.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_14, 36, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 37) {
								row14.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row14.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_14, 37, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 38) {
								row14.ROUTE_ID = null;
							} else {
	                         		
        	row14.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_14, 38, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 39) {
								row14.NAME_ = null;
							} else {
	                         		
        	row14.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_14, 39, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 40) {
								row14.NUMBER_ID = null;
							} else {
	                         		
        	row14.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_14, 40, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 41) {
								row14.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row14.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_14, 41, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 42) {
								row14.CAUSANL_OBS = null;
							} else {
	                         		
        	row14.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_14, 42, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 43) {
								row14.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row14.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_14, 43, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 44) {
								row14.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row14.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_14, 44, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 45) {
								row14.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row14.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_14, 45, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 46) {
								row14.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row14.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_14, 46, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 47) {
								row14.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row14.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_14, 47, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 48) {
								row14.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row14.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_14, 48, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 49) {
								row14.TIPO_SERVICIO = null;
							} else {
	                         		
        	row14.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_14, 49, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 50) {
								row14.categoria = null;
							} else {
	                         		
        	row14.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_14, 50, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 51) {
								row14.ESTRATO = null;
							} else {
	                         		
        	row14.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_14, 51, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 52) {
								row14.DESC_SERVICIO = null;
							} else {
	                         		
        	row14.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_14, 52, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 53) {
								row14.orden_relacionada = null;
							} else {
	                         		
        	row14.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_14, 53, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 54) {
								row14.order_activity_ID = null;
							} else {
	                         		
        	row14.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_14, 54, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 55) {
								row14.Adjunto = null;
							} else {
	                         		
        	row14.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_14, 55, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 56) {
								row14.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row14.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_14, 56, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 57) {
								row14.K_DISPERSION = null;
							} else {
	                         		
        	row14.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_14, 57, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 58) {
								row14.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row14.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_14, 58, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 59) {
								row14.VALOR_UNITARIO = null;
							} else {
	                         		
        	row14.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_14, 59, false);
		                    }
							if(colQtyInRs_tDBInput_14 < 60) {
								row14.VALOR_K = null;
							} else {
	                         		
        	row14.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_14, 60, false);
		                    }
					

 



/**
 * [tDBInput_14 begin ] stop
 */
	
	/**
	 * [tDBInput_14 main ] start
	 */

	

	
	
	currentComponent="tDBInput_14";

	

 


	tos_count_tDBInput_14++;

/**
 * [tDBInput_14 main ] stop
 */
	
	/**
	 * [tDBInput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_14";

	

 



/**
 * [tDBInput_14 process_data_begin ] stop
 */

	
	/**
	 * [tMap_14 main ] start
	 */

	

	
	
	currentComponent="tMap_14";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row14");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_14 = false;
		  boolean mainRowRejected_tMap_14 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
        // ###############################
        // # Output tables

KDISPERSION_DETALLE = null;


// # Output table : 'KDISPERSION_DETALLE'
KDISPERSION_DETALLE_tmp.FechaAsignacion = row14.FechaAsignacion;
KDISPERSION_DETALLE_tmp.Equipo_Trabajo = row14.Equipo_Trabajo;
KDISPERSION_DETALLE_tmp.UNIDAD_OPERATIVA = row14.UNIDAD_OPERATIVA;
KDISPERSION_DETALLE_tmp.Tarea = row14.Tarea;
KDISPERSION_DETALLE_tmp.DescTarea = row14.DescTarea;
KDISPERSION_DETALLE_tmp.Orden = row14.Orden;
KDISPERSION_DETALLE_tmp.Ciclo = row14.Ciclo;
KDISPERSION_DETALLE_tmp.servicio = row14.servicio;
KDISPERSION_DETALLE_tmp.Estado = row14.Estado;
KDISPERSION_DETALLE_tmp.Desc_estado = row14.Desc_estado;
KDISPERSION_DETALLE_tmp.FechaCREATED = row14.FechaCREATED;
KDISPERSION_DETALLE_tmp.Fechalegalization = row14.Fechalegalization;
KDISPERSION_DETALLE_tmp.Horalegalization = row14.Horalegalization;
KDISPERSION_DETALLE_tmp.Instalacion = row14.Instalacion;
KDISPERSION_DETALLE_tmp.urbano_rural = row14.urbano_rural;
KDISPERSION_DETALLE_tmp.ortrinur = row14.ortrinur;
KDISPERSION_DETALLE_tmp.descripciona = row14.descripciona;
KDISPERSION_DETALLE_tmp.Ciudad = row14.Ciudad;
KDISPERSION_DETALLE_tmp.cmrudesc = row14.cmrudesc;
KDISPERSION_DETALLE_tmp.region = row14.region;
KDISPERSION_DETALLE_tmp.regndesc = row14.regndesc;
KDISPERSION_DETALLE_tmp.depacodi = row14.depacodi;
KDISPERSION_DETALLE_tmp.codigorespuesta = row14.codigorespuesta;
KDISPERSION_DETALLE_tmp.respuestatencion = row14.respuestatencion;
KDISPERSION_DETALLE_tmp.x = row14.x;
KDISPERSION_DETALLE_tmp.y = row14.y;
KDISPERSION_DETALLE_tmp.Ano = row14.Ano;
KDISPERSION_DETALLE_tmp.Mes = row14.Mes;
KDISPERSION_DETALLE_tmp.Dia = row14.Dia;
KDISPERSION_DETALLE_tmp.desc_cna = row14.desc_cna;
KDISPERSION_DETALLE_tmp.ACTIVIDAD = row14.ACTIVIDAD;
KDISPERSION_DETALLE_tmp.DESC_ACTIVIDAD = row14.DESC_ACTIVIDAD;
KDISPERSION_DETALLE_tmp.FRECUENCIA = row14.FRECUENCIA;
KDISPERSION_DETALLE_tmp.CUENTAS_VENCIDAS = row14.CUENTAS_VENCIDAS;
KDISPERSION_DETALLE_tmp.SALDO_CUENTAS_VENCIDAS = row14.SALDO_CUENTAS_VENCIDAS;
KDISPERSION_DETALLE_tmp.ESTADO_CORTE = row14.ESTADO_CORTE;
KDISPERSION_DETALLE_tmp.TIPO_ACTIVIDAD = row14.TIPO_ACTIVIDAD;
KDISPERSION_DETALLE_tmp.ROUTE_ID = row14.ROUTE_ID;
KDISPERSION_DETALLE_tmp.NAME_ = row14.NAME_;
KDISPERSION_DETALLE_tmp.NUMBER_ID = row14.NUMBER_ID;
KDISPERSION_DETALLE_tmp.CODIGO_CAUSANL_OBS = row14.CODIGO_CAUSANL_OBS;
KDISPERSION_DETALLE_tmp.CAUSANL_OBS = row14.CAUSANL_OBS;
KDISPERSION_DETALLE_tmp.CODIGO_CAUSANL_OBS2 = row14.CODIGO_CAUSANL_OBS2;
KDISPERSION_DETALLE_tmp.CAUSANL_OBS2 = row14.CAUSANL_OBS2;
KDISPERSION_DETALLE_tmp.CODIGO_CAUSANL_OBS3 = row14.CODIGO_CAUSANL_OBS3;
KDISPERSION_DETALLE_tmp.CAUSANL_OBS3 = row14.CAUSANL_OBS3;
KDISPERSION_DETALLE_tmp.SERVICIO_SUSCRITO = row14.SERVICIO_SUSCRITO;
KDISPERSION_DETALLE_tmp.COD_TIPO_SERVICIO = row14.COD_TIPO_SERVICIO;
KDISPERSION_DETALLE_tmp.TIPO_SERVICIO = row14.TIPO_SERVICIO;
KDISPERSION_DETALLE_tmp.categoria = row14.categoria;
KDISPERSION_DETALLE_tmp.ESTRATO = row14.ESTRATO;
KDISPERSION_DETALLE_tmp.DESC_SERVICIO = row14.DESC_SERVICIO;
KDISPERSION_DETALLE_tmp.orden_relacionada = row14.orden_relacionada;
KDISPERSION_DETALLE_tmp.order_activity_ID = row14.order_activity_ID;
KDISPERSION_DETALLE_tmp.Adjunto = row14.Adjunto;
KDISPERSION_DETALLE_tmp.ID_SECUENCIAS_ACTA = row14.ID_SECUENCIAS_ACTA;
KDISPERSION_DETALLE_tmp.K_DISPERSION = row14.K_DISPERSION;
KDISPERSION_DETALLE_tmp.SIGLA_ACTIVIDAD = row14.SIGLA_ACTIVIDAD;
KDISPERSION_DETALLE_tmp.VALOR_UNITARIO = row14.VALOR_UNITARIO;
KDISPERSION_DETALLE_tmp.VALOR_K = row14.VALOR_K;
KDISPERSION_DETALLE = KDISPERSION_DETALLE_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_14 = false;










 


	tos_count_tMap_14++;

/**
 * [tMap_14 main ] stop
 */
	
	/**
	 * [tMap_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_14";

	

 



/**
 * [tMap_14 process_data_begin ] stop
 */
// Start of branch "KDISPERSION_DETALLE"
if(KDISPERSION_DETALLE != null) { 



	
	/**
	 * [tDBOutput_14 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_14";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"KDISPERSION_DETALLE");
					}
					



        whetherReject_tDBOutput_14 = false;
                    if(KDISPERSION_DETALLE.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_14.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_14.setString(1, KDISPERSION_DETALLE.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_14 = -1;
            try (java.sql.ResultSet rs_tDBOutput_14 = pstmt_tDBOutput_14.executeQuery()) {
                while(rs_tDBOutput_14.next()) {
                    checkCount_tDBOutput_14 = rs_tDBOutput_14.getInt(1);
                }
            }
            if(checkCount_tDBOutput_14 > 0) {
                        if(KDISPERSION_DETALLE.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_14.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(1, KDISPERSION_DETALLE.FechaAsignacion);
}

                        if(KDISPERSION_DETALLE.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_14.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(2, KDISPERSION_DETALLE.Equipo_Trabajo);
}

                        if(KDISPERSION_DETALLE.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_14.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(3, KDISPERSION_DETALLE.UNIDAD_OPERATIVA);
}

                        if(KDISPERSION_DETALLE.Tarea == null) {
pstmtUpdate_tDBOutput_14.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(4, KDISPERSION_DETALLE.Tarea);
}

                        if(KDISPERSION_DETALLE.DescTarea == null) {
pstmtUpdate_tDBOutput_14.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(5, KDISPERSION_DETALLE.DescTarea);
}

                        if(KDISPERSION_DETALLE.Orden == null) {
pstmtUpdate_tDBOutput_14.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(6, KDISPERSION_DETALLE.Orden);
}

                        if(KDISPERSION_DETALLE.Ciclo == null) {
pstmtUpdate_tDBOutput_14.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(7, KDISPERSION_DETALLE.Ciclo);
}

                        if(KDISPERSION_DETALLE.servicio == null) {
pstmtUpdate_tDBOutput_14.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(8, KDISPERSION_DETALLE.servicio);
}

                        if(KDISPERSION_DETALLE.Estado == null) {
pstmtUpdate_tDBOutput_14.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(9, KDISPERSION_DETALLE.Estado);
}

                        if(KDISPERSION_DETALLE.Desc_estado == null) {
pstmtUpdate_tDBOutput_14.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(10, KDISPERSION_DETALLE.Desc_estado);
}

                        if(KDISPERSION_DETALLE.FechaCREATED == null) {
pstmtUpdate_tDBOutput_14.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(11, KDISPERSION_DETALLE.FechaCREATED);
}

                        if(KDISPERSION_DETALLE.Fechalegalization == null) {
pstmtUpdate_tDBOutput_14.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(12, KDISPERSION_DETALLE.Fechalegalization);
}

                        if(KDISPERSION_DETALLE.Horalegalization == null) {
pstmtUpdate_tDBOutput_14.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(13, KDISPERSION_DETALLE.Horalegalization);
}

                        if(KDISPERSION_DETALLE.Instalacion == null) {
pstmtUpdate_tDBOutput_14.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(14, KDISPERSION_DETALLE.Instalacion);
}

                        if(KDISPERSION_DETALLE.urbano_rural == null) {
pstmtUpdate_tDBOutput_14.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(15, KDISPERSION_DETALLE.urbano_rural);
}

                        if(KDISPERSION_DETALLE.ortrinur == null) {
pstmtUpdate_tDBOutput_14.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(16, KDISPERSION_DETALLE.ortrinur);
}

                        if(KDISPERSION_DETALLE.descripciona == null) {
pstmtUpdate_tDBOutput_14.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(17, KDISPERSION_DETALLE.descripciona);
}

                        if(KDISPERSION_DETALLE.Ciudad == null) {
pstmtUpdate_tDBOutput_14.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(18, KDISPERSION_DETALLE.Ciudad);
}

                        if(KDISPERSION_DETALLE.cmrudesc == null) {
pstmtUpdate_tDBOutput_14.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(19, KDISPERSION_DETALLE.cmrudesc);
}

                        if(KDISPERSION_DETALLE.region == null) {
pstmtUpdate_tDBOutput_14.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(20, KDISPERSION_DETALLE.region);
}

                        if(KDISPERSION_DETALLE.regndesc == null) {
pstmtUpdate_tDBOutput_14.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(21, KDISPERSION_DETALLE.regndesc);
}

                        if(KDISPERSION_DETALLE.depacodi == null) {
pstmtUpdate_tDBOutput_14.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(22, KDISPERSION_DETALLE.depacodi);
}

                        if(KDISPERSION_DETALLE.codigorespuesta == null) {
pstmtUpdate_tDBOutput_14.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(23, KDISPERSION_DETALLE.codigorespuesta);
}

                        if(KDISPERSION_DETALLE.respuestatencion == null) {
pstmtUpdate_tDBOutput_14.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(24, KDISPERSION_DETALLE.respuestatencion);
}

                        if(KDISPERSION_DETALLE.x == null) {
pstmtUpdate_tDBOutput_14.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(25, KDISPERSION_DETALLE.x);
}

                        if(KDISPERSION_DETALLE.y == null) {
pstmtUpdate_tDBOutput_14.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(26, KDISPERSION_DETALLE.y);
}

                        if(KDISPERSION_DETALLE.Ano == null) {
pstmtUpdate_tDBOutput_14.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(27, KDISPERSION_DETALLE.Ano);
}

                        if(KDISPERSION_DETALLE.Mes == null) {
pstmtUpdate_tDBOutput_14.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(28, KDISPERSION_DETALLE.Mes);
}

                        if(KDISPERSION_DETALLE.Dia == null) {
pstmtUpdate_tDBOutput_14.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(29, KDISPERSION_DETALLE.Dia);
}

                        if(KDISPERSION_DETALLE.desc_cna == null) {
pstmtUpdate_tDBOutput_14.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(30, KDISPERSION_DETALLE.desc_cna);
}

                        if(KDISPERSION_DETALLE.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_14.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(31, KDISPERSION_DETALLE.ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_14.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(32, KDISPERSION_DETALLE.DESC_ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_14.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(33, KDISPERSION_DETALLE.FRECUENCIA);
}

                        if(KDISPERSION_DETALLE.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_14.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(34, KDISPERSION_DETALLE.CUENTAS_VENCIDAS);
}

                        if(KDISPERSION_DETALLE.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_14.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(35, KDISPERSION_DETALLE.SALDO_CUENTAS_VENCIDAS);
}

                        if(KDISPERSION_DETALLE.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_14.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(36, KDISPERSION_DETALLE.ESTADO_CORTE);
}

                        if(KDISPERSION_DETALLE.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_14.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(37, KDISPERSION_DETALLE.TIPO_ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_14.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(38, KDISPERSION_DETALLE.ROUTE_ID);
}

                        if(KDISPERSION_DETALLE.NAME_ == null) {
pstmtUpdate_tDBOutput_14.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(39, KDISPERSION_DETALLE.NAME_);
}

                        if(KDISPERSION_DETALLE.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_14.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(40, KDISPERSION_DETALLE.NUMBER_ID);
}

                        if(KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_14.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(41, KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS);
}

                        if(KDISPERSION_DETALLE.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_14.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(42, KDISPERSION_DETALLE.CAUSANL_OBS);
}

                        if(KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_14.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(43, KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS2);
}

                        if(KDISPERSION_DETALLE.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_14.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(44, KDISPERSION_DETALLE.CAUSANL_OBS2);
}

                        if(KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_14.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(45, KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS3);
}

                        if(KDISPERSION_DETALLE.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_14.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(46, KDISPERSION_DETALLE.CAUSANL_OBS3);
}

                        if(KDISPERSION_DETALLE.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_14.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(47, KDISPERSION_DETALLE.SERVICIO_SUSCRITO);
}

                        if(KDISPERSION_DETALLE.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_14.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(48, KDISPERSION_DETALLE.COD_TIPO_SERVICIO);
}

                        if(KDISPERSION_DETALLE.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_14.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(49, KDISPERSION_DETALLE.TIPO_SERVICIO);
}

                        if(KDISPERSION_DETALLE.categoria == null) {
pstmtUpdate_tDBOutput_14.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(50, KDISPERSION_DETALLE.categoria);
}

                        if(KDISPERSION_DETALLE.ESTRATO == null) {
pstmtUpdate_tDBOutput_14.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(51, KDISPERSION_DETALLE.ESTRATO);
}

                        if(KDISPERSION_DETALLE.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_14.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(52, KDISPERSION_DETALLE.DESC_SERVICIO);
}

                        if(KDISPERSION_DETALLE.orden_relacionada == null) {
pstmtUpdate_tDBOutput_14.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(53, KDISPERSION_DETALLE.orden_relacionada);
}

                        if(KDISPERSION_DETALLE.order_activity_ID == null) {
pstmtUpdate_tDBOutput_14.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(54, KDISPERSION_DETALLE.order_activity_ID);
}

                        if(KDISPERSION_DETALLE.Adjunto == null) {
pstmtUpdate_tDBOutput_14.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(55, KDISPERSION_DETALLE.Adjunto);
}

                        if(KDISPERSION_DETALLE.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_14.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(56, KDISPERSION_DETALLE.K_DISPERSION);
}

                        if(KDISPERSION_DETALLE.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_14.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(57, KDISPERSION_DETALLE.SIGLA_ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_14.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(58, KDISPERSION_DETALLE.VALOR_UNITARIO);
}

                        if(KDISPERSION_DETALLE.VALOR_K == null) {
pstmtUpdate_tDBOutput_14.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(59, KDISPERSION_DETALLE.VALOR_K);
}

                        if(KDISPERSION_DETALLE.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_14.setNull(60 + count_tDBOutput_14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_14.setString(60 + count_tDBOutput_14, KDISPERSION_DETALLE.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_14 = updatedCount_tDBOutput_14 + pstmtUpdate_tDBOutput_14.executeUpdate();
                    nb_line_tDBOutput_14++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_14 = true;
                        nb_line_tDBOutput_14++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(KDISPERSION_DETALLE.FechaAsignacion == null) {
pstmtInsert_tDBOutput_14.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(1, KDISPERSION_DETALLE.FechaAsignacion);
}

                        if(KDISPERSION_DETALLE.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_14.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(2, KDISPERSION_DETALLE.Equipo_Trabajo);
}

                        if(KDISPERSION_DETALLE.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_14.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(3, KDISPERSION_DETALLE.UNIDAD_OPERATIVA);
}

                        if(KDISPERSION_DETALLE.Tarea == null) {
pstmtInsert_tDBOutput_14.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(4, KDISPERSION_DETALLE.Tarea);
}

                        if(KDISPERSION_DETALLE.DescTarea == null) {
pstmtInsert_tDBOutput_14.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(5, KDISPERSION_DETALLE.DescTarea);
}

                        if(KDISPERSION_DETALLE.Orden == null) {
pstmtInsert_tDBOutput_14.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(6, KDISPERSION_DETALLE.Orden);
}

                        if(KDISPERSION_DETALLE.Ciclo == null) {
pstmtInsert_tDBOutput_14.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(7, KDISPERSION_DETALLE.Ciclo);
}

                        if(KDISPERSION_DETALLE.servicio == null) {
pstmtInsert_tDBOutput_14.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(8, KDISPERSION_DETALLE.servicio);
}

                        if(KDISPERSION_DETALLE.Estado == null) {
pstmtInsert_tDBOutput_14.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(9, KDISPERSION_DETALLE.Estado);
}

                        if(KDISPERSION_DETALLE.Desc_estado == null) {
pstmtInsert_tDBOutput_14.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(10, KDISPERSION_DETALLE.Desc_estado);
}

                        if(KDISPERSION_DETALLE.FechaCREATED == null) {
pstmtInsert_tDBOutput_14.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(11, KDISPERSION_DETALLE.FechaCREATED);
}

                        if(KDISPERSION_DETALLE.Fechalegalization == null) {
pstmtInsert_tDBOutput_14.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(12, KDISPERSION_DETALLE.Fechalegalization);
}

                        if(KDISPERSION_DETALLE.Horalegalization == null) {
pstmtInsert_tDBOutput_14.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(13, KDISPERSION_DETALLE.Horalegalization);
}

                        if(KDISPERSION_DETALLE.Instalacion == null) {
pstmtInsert_tDBOutput_14.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(14, KDISPERSION_DETALLE.Instalacion);
}

                        if(KDISPERSION_DETALLE.urbano_rural == null) {
pstmtInsert_tDBOutput_14.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(15, KDISPERSION_DETALLE.urbano_rural);
}

                        if(KDISPERSION_DETALLE.ortrinur == null) {
pstmtInsert_tDBOutput_14.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(16, KDISPERSION_DETALLE.ortrinur);
}

                        if(KDISPERSION_DETALLE.descripciona == null) {
pstmtInsert_tDBOutput_14.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(17, KDISPERSION_DETALLE.descripciona);
}

                        if(KDISPERSION_DETALLE.Ciudad == null) {
pstmtInsert_tDBOutput_14.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(18, KDISPERSION_DETALLE.Ciudad);
}

                        if(KDISPERSION_DETALLE.cmrudesc == null) {
pstmtInsert_tDBOutput_14.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(19, KDISPERSION_DETALLE.cmrudesc);
}

                        if(KDISPERSION_DETALLE.region == null) {
pstmtInsert_tDBOutput_14.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(20, KDISPERSION_DETALLE.region);
}

                        if(KDISPERSION_DETALLE.regndesc == null) {
pstmtInsert_tDBOutput_14.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(21, KDISPERSION_DETALLE.regndesc);
}

                        if(KDISPERSION_DETALLE.depacodi == null) {
pstmtInsert_tDBOutput_14.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(22, KDISPERSION_DETALLE.depacodi);
}

                        if(KDISPERSION_DETALLE.codigorespuesta == null) {
pstmtInsert_tDBOutput_14.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(23, KDISPERSION_DETALLE.codigorespuesta);
}

                        if(KDISPERSION_DETALLE.respuestatencion == null) {
pstmtInsert_tDBOutput_14.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(24, KDISPERSION_DETALLE.respuestatencion);
}

                        if(KDISPERSION_DETALLE.x == null) {
pstmtInsert_tDBOutput_14.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(25, KDISPERSION_DETALLE.x);
}

                        if(KDISPERSION_DETALLE.y == null) {
pstmtInsert_tDBOutput_14.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(26, KDISPERSION_DETALLE.y);
}

                        if(KDISPERSION_DETALLE.Ano == null) {
pstmtInsert_tDBOutput_14.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(27, KDISPERSION_DETALLE.Ano);
}

                        if(KDISPERSION_DETALLE.Mes == null) {
pstmtInsert_tDBOutput_14.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(28, KDISPERSION_DETALLE.Mes);
}

                        if(KDISPERSION_DETALLE.Dia == null) {
pstmtInsert_tDBOutput_14.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(29, KDISPERSION_DETALLE.Dia);
}

                        if(KDISPERSION_DETALLE.desc_cna == null) {
pstmtInsert_tDBOutput_14.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(30, KDISPERSION_DETALLE.desc_cna);
}

                        if(KDISPERSION_DETALLE.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_14.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(31, KDISPERSION_DETALLE.ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_14.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(32, KDISPERSION_DETALLE.DESC_ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.FRECUENCIA == null) {
pstmtInsert_tDBOutput_14.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(33, KDISPERSION_DETALLE.FRECUENCIA);
}

                        if(KDISPERSION_DETALLE.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_14.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(34, KDISPERSION_DETALLE.CUENTAS_VENCIDAS);
}

                        if(KDISPERSION_DETALLE.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_14.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(35, KDISPERSION_DETALLE.SALDO_CUENTAS_VENCIDAS);
}

                        if(KDISPERSION_DETALLE.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_14.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(36, KDISPERSION_DETALLE.ESTADO_CORTE);
}

                        if(KDISPERSION_DETALLE.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_14.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(37, KDISPERSION_DETALLE.TIPO_ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.ROUTE_ID == null) {
pstmtInsert_tDBOutput_14.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(38, KDISPERSION_DETALLE.ROUTE_ID);
}

                        if(KDISPERSION_DETALLE.NAME_ == null) {
pstmtInsert_tDBOutput_14.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(39, KDISPERSION_DETALLE.NAME_);
}

                        if(KDISPERSION_DETALLE.NUMBER_ID == null) {
pstmtInsert_tDBOutput_14.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(40, KDISPERSION_DETALLE.NUMBER_ID);
}

                        if(KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_14.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(41, KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS);
}

                        if(KDISPERSION_DETALLE.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_14.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(42, KDISPERSION_DETALLE.CAUSANL_OBS);
}

                        if(KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_14.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(43, KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS2);
}

                        if(KDISPERSION_DETALLE.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_14.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(44, KDISPERSION_DETALLE.CAUSANL_OBS2);
}

                        if(KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_14.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(45, KDISPERSION_DETALLE.CODIGO_CAUSANL_OBS3);
}

                        if(KDISPERSION_DETALLE.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_14.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(46, KDISPERSION_DETALLE.CAUSANL_OBS3);
}

                        if(KDISPERSION_DETALLE.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_14.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(47, KDISPERSION_DETALLE.SERVICIO_SUSCRITO);
}

                        if(KDISPERSION_DETALLE.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_14.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(48, KDISPERSION_DETALLE.COD_TIPO_SERVICIO);
}

                        if(KDISPERSION_DETALLE.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_14.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(49, KDISPERSION_DETALLE.TIPO_SERVICIO);
}

                        if(KDISPERSION_DETALLE.categoria == null) {
pstmtInsert_tDBOutput_14.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(50, KDISPERSION_DETALLE.categoria);
}

                        if(KDISPERSION_DETALLE.ESTRATO == null) {
pstmtInsert_tDBOutput_14.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(51, KDISPERSION_DETALLE.ESTRATO);
}

                        if(KDISPERSION_DETALLE.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_14.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(52, KDISPERSION_DETALLE.DESC_SERVICIO);
}

                        if(KDISPERSION_DETALLE.orden_relacionada == null) {
pstmtInsert_tDBOutput_14.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(53, KDISPERSION_DETALLE.orden_relacionada);
}

                        if(KDISPERSION_DETALLE.order_activity_ID == null) {
pstmtInsert_tDBOutput_14.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(54, KDISPERSION_DETALLE.order_activity_ID);
}

                        if(KDISPERSION_DETALLE.Adjunto == null) {
pstmtInsert_tDBOutput_14.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(55, KDISPERSION_DETALLE.Adjunto);
}

                        if(KDISPERSION_DETALLE.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_14.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(56, KDISPERSION_DETALLE.ID_SECUENCIAS_ACTA);
}

                        if(KDISPERSION_DETALLE.K_DISPERSION == null) {
pstmtInsert_tDBOutput_14.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(57, KDISPERSION_DETALLE.K_DISPERSION);
}

                        if(KDISPERSION_DETALLE.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_14.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(58, KDISPERSION_DETALLE.SIGLA_ACTIVIDAD);
}

                        if(KDISPERSION_DETALLE.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_14.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(59, KDISPERSION_DETALLE.VALOR_UNITARIO);
}

                        if(KDISPERSION_DETALLE.VALOR_K == null) {
pstmtInsert_tDBOutput_14.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_14.setString(60, KDISPERSION_DETALLE.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_14 = insertedCount_tDBOutput_14 + pstmtInsert_tDBOutput_14.executeUpdate();
                    nb_line_tDBOutput_14++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_14 = true;
                        nb_line_tDBOutput_14++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_14) {
            }
                commitCounter_tDBOutput_14++;

                if(commitEvery_tDBOutput_14 <= commitCounter_tDBOutput_14) {

                    conn_tDBOutput_14.commit();
                    commitCounter_tDBOutput_14=0;

                }


 


	tos_count_tDBOutput_14++;

/**
 * [tDBOutput_14 main ] stop
 */
	
	/**
	 * [tDBOutput_14 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_14";

	

 



/**
 * [tDBOutput_14 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_14";

	

 



/**
 * [tDBOutput_14 process_data_end ] stop
 */

} // End of branch "KDISPERSION_DETALLE"




	
	/**
	 * [tMap_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_14";

	

 



/**
 * [tMap_14 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_14 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_14";

	

 



/**
 * [tDBInput_14 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_14 end ] start
	 */

	

	
	
	currentComponent="tDBInput_14";

	

	}
}finally{
	if (rs_tDBInput_14 != null) {
		rs_tDBInput_14.close();
	}
	if (stmt_tDBInput_14 != null) {
		stmt_tDBInput_14.close();
	}
		if(conn_tDBInput_14 != null && !conn_tDBInput_14.isClosed()) {
			
			conn_tDBInput_14.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_14_NB_LINE",nb_line_tDBInput_14);
		


 

ok_Hash.put("tDBInput_14", true);
end_Hash.put("tDBInput_14", System.currentTimeMillis());




/**
 * [tDBInput_14 end ] stop
 */

	
	/**
	 * [tMap_14 end ] start
	 */

	

	
	
	currentComponent="tMap_14";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row14");
			  	}
			  	
 

ok_Hash.put("tMap_14", true);
end_Hash.put("tMap_14", System.currentTimeMillis());




/**
 * [tMap_14 end ] stop
 */

	
	/**
	 * [tDBOutput_14 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_14";

	



        if(pstmtUpdate_tDBOutput_14 != null){
            pstmtUpdate_tDBOutput_14.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_14");
        }
        if(pstmtInsert_tDBOutput_14 != null){
            pstmtInsert_tDBOutput_14.close();
            resourceMap.remove("pstmtInsert_tDBOutput_14");
        }
        if(pstmt_tDBOutput_14 != null) {
            pstmt_tDBOutput_14.close();
            resourceMap.remove("pstmt_tDBOutput_14");
        }
    resourceMap.put("statementClosed_tDBOutput_14", true);
    	if (commitCounter_tDBOutput_14 > 0) {
    		
    		conn_tDBOutput_14.commit();
    		
    	}
    		
		
    	conn_tDBOutput_14 .close();
    	
    	resourceMap.put("finish_tDBOutput_14", true);
    	

	nb_line_deleted_tDBOutput_14=nb_line_deleted_tDBOutput_14+ deletedCount_tDBOutput_14;
	nb_line_update_tDBOutput_14=nb_line_update_tDBOutput_14 + updatedCount_tDBOutput_14;
	nb_line_inserted_tDBOutput_14=nb_line_inserted_tDBOutput_14 + insertedCount_tDBOutput_14;
	nb_line_rejected_tDBOutput_14=nb_line_rejected_tDBOutput_14 + rejectedCount_tDBOutput_14;
	
        globalMap.put("tDBOutput_14_NB_LINE",nb_line_tDBOutput_14);
        globalMap.put("tDBOutput_14_NB_LINE_UPDATED",nb_line_update_tDBOutput_14);
        globalMap.put("tDBOutput_14_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_14);
        globalMap.put("tDBOutput_14_NB_LINE_DELETED",nb_line_deleted_tDBOutput_14);
        globalMap.put("tDBOutput_14_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_14);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"KDISPERSION_DETALLE");
			  	}
			  	
 

ok_Hash.put("tDBOutput_14", true);
end_Hash.put("tDBOutput_14", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk14", 0, "ok");
				}
				tDBInput_15Process(globalMap);



/**
 * [tDBOutput_14 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_14 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_14";

	

 



/**
 * [tDBInput_14 finally ] stop
 */

	
	/**
	 * [tMap_14 finally ] start
	 */

	

	
	
	currentComponent="tMap_14";

	

 



/**
 * [tMap_14 finally ] stop
 */

	
	/**
	 * [tDBOutput_14 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_14";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_14") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_14 = null;
                if ((pstmtUpdateToClose_tDBOutput_14 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_14")) != null) {
                    pstmtUpdateToClose_tDBOutput_14.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_14 = null;
                if ((pstmtInsertToClose_tDBOutput_14 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_14")) != null) {
                    pstmtInsertToClose_tDBOutput_14.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_14 = null;
                if ((pstmtToClose_tDBOutput_14 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_14")) != null) {
                    pstmtToClose_tDBOutput_14.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_14") == null){
            java.sql.Connection ctn_tDBOutput_14 = null;
            if((ctn_tDBOutput_14 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_14")) != null){
                try {
                    ctn_tDBOutput_14.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_14) {
                    String errorMessage_tDBOutput_14 = "failed to close the connection in tDBOutput_14 :" + sqlEx_tDBOutput_14.getMessage();
                    System.err.println(errorMessage_tDBOutput_14);
                }
            }
        }
    }
 



/**
 * [tDBOutput_14 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_14_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfKDISPERSION_DETALLE_1Struct other = (copyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row15Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_15_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row15Struct row15 = new row15Struct();
copyOfKDISPERSION_DETALLE_1Struct copyOfKDISPERSION_DETALLE_1 = new copyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_15", false);
		start_Hash.put("tDBOutput_15", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_15";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_15 = 0;
		





        int updateKeyCount_tDBOutput_15 = 1;
        if(updateKeyCount_tDBOutput_15 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_15 = 0;
int nb_line_update_tDBOutput_15 = 0;
int nb_line_inserted_tDBOutput_15 = 0;
int nb_line_deleted_tDBOutput_15 = 0;
int nb_line_rejected_tDBOutput_15 = 0;

int deletedCount_tDBOutput_15=0;
int updatedCount_tDBOutput_15=0;
int insertedCount_tDBOutput_15=0;

int rejectedCount_tDBOutput_15=0;

String tableName_tDBOutput_15 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_15 = false;

java.util.Calendar calendar_tDBOutput_15 = java.util.Calendar.getInstance();
calendar_tDBOutput_15.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_15 = calendar_tDBOutput_15.getTime().getTime();
calendar_tDBOutput_15.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_15 = calendar_tDBOutput_15.getTime().getTime();
long date_tDBOutput_15;

java.sql.Connection conn_tDBOutput_15 = null;
		String dbProperties_tDBOutput_15 = "noDatetimeStringSync=true";
		String url_tDBOutput_15 = null;
		if(dbProperties_tDBOutput_15 == null || dbProperties_tDBOutput_15.trim().length() == 0) {
			url_tDBOutput_15 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_15 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_15.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_15 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_15 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_15;
		}
		String driverClass_tDBOutput_15 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_15 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_15 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:1IxaJIp1UDhANrkv/HpHYtc2o2Lpyscmrzse8+WKADyXTwFacmrsXRo=");

		String dbPwd_tDBOutput_15 = decryptedPassword_tDBOutput_15;
		java.lang.Class.forName(driverClass_tDBOutput_15);
		
		conn_tDBOutput_15 = java.sql.DriverManager.getConnection(url_tDBOutput_15, dbUser_tDBOutput_15, dbPwd_tDBOutput_15);
		
	
	resourceMap.put("conn_tDBOutput_15", conn_tDBOutput_15);
        conn_tDBOutput_15.setAutoCommit(false);
        int commitEvery_tDBOutput_15 = 10000;
        int commitCounter_tDBOutput_15 = 0;

int count_tDBOutput_15=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_15 = conn_tDBOutput_15.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_15", pstmt_tDBOutput_15);
	    String insert_tDBOutput_15 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_15 = conn_tDBOutput_15.prepareStatement(insert_tDBOutput_15);
	    resourceMap.put("pstmtInsert_tDBOutput_15", pstmtInsert_tDBOutput_15);
	    String update_tDBOutput_15 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_15 = conn_tDBOutput_15.prepareStatement(update_tDBOutput_15);
	    resourceMap.put("pstmtUpdate_tDBOutput_15", pstmtUpdate_tDBOutput_15);
	    

 



/**
 * [tDBOutput_15 begin ] stop
 */



	
	/**
	 * [tMap_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_15", false);
		start_Hash.put("tMap_15", System.currentTimeMillis());
		
	
	currentComponent="tMap_15";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row15");
					}
				
		int tos_count_tMap_15 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_15__Struct  {
}
Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfKDISPERSION_DETALLE_1Struct copyOfKDISPERSION_DETALLE_1_tmp = new copyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_15 begin ] stop
 */



	
	/**
	 * [tDBInput_15 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_15", false);
		start_Hash.put("tDBInput_15", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_15";

	
		int tos_count_tDBInput_15 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_15 = java.util.Calendar.getInstance();
		    calendar_tDBInput_15.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_15 = calendar_tDBInput_15.getTime();
		    int nb_line_tDBInput_15 = 0;
		    java.sql.Connection conn_tDBInput_15 = null;
				String driverClass_tDBInput_15 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_15 = java.lang.Class.forName(driverClass_tDBInput_15);
				String dbUser_tDBInput_15 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_15 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:M0wtwquT6tQy7enngNXSQfst1Sx7bmhqMPk0s6Jarru0IBMIUmaOYIM=");
				
				String dbPwd_tDBInput_15 = decryptedPassword_tDBInput_15;
				
				String url_tDBInput_15 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_15 = java.sql.DriverManager.getConnection(url_tDBInput_15,dbUser_tDBInput_15,dbPwd_tDBInput_15);
		        
		    
			java.sql.Statement stmt_tDBInput_15 = conn_tDBInput_15.createStatement();

		    String dbquery_tDBInput_15 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'LECT1'SIGLA_ACTIVIDAD\n,(SELECT distinct c.PRICE FROM"
+" acta_precios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL' )VALOR_UNITARIO\n,((SELECT distinct c.PRICE FROM ac"
+"ta_precios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL'  )*1 ) VALOR_K\nfrom secuencias_acta1 a\nwhere \n a.re"
+"gion <>'8'\n and a.ortrinur ='U'\nand  a.id_secuencias_acta not in (SELECT id_secuencias_acta FROM secuencias_kdispersio"
+"n )\nand a.FECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion)\nand a.FECHALEG"
+"ALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'14')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_15_QUERY",dbquery_tDBInput_15);
		    java.sql.ResultSet rs_tDBInput_15 = null;

		    try {
		    	rs_tDBInput_15 = stmt_tDBInput_15.executeQuery(dbquery_tDBInput_15);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_15 = rs_tDBInput_15.getMetaData();
		    	int colQtyInRs_tDBInput_15 = rsmd_tDBInput_15.getColumnCount();

		    String tmpContent_tDBInput_15 = null;
		    
		    
		    while (rs_tDBInput_15.next()) {
		        nb_line_tDBInput_15++;
		        
							if(colQtyInRs_tDBInput_15 < 1) {
								row15.FechaAsignacion = null;
							} else {
	                         		
        	row15.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_15, 1, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 2) {
								row15.Equipo_Trabajo = null;
							} else {
	                         		
        	row15.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_15, 2, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 3) {
								row15.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row15.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_15, 3, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 4) {
								row15.Tarea = null;
							} else {
	                         		
        	row15.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_15, 4, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 5) {
								row15.DescTarea = null;
							} else {
	                         		
        	row15.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_15, 5, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 6) {
								row15.Orden = null;
							} else {
	                         		
        	row15.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_15, 6, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 7) {
								row15.Ciclo = null;
							} else {
	                         		
        	row15.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_15, 7, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 8) {
								row15.servicio = null;
							} else {
	                         		
        	row15.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_15, 8, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 9) {
								row15.Estado = null;
							} else {
	                         		
        	row15.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_15, 9, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 10) {
								row15.Desc_estado = null;
							} else {
	                         		
        	row15.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_15, 10, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 11) {
								row15.FechaCREATED = null;
							} else {
	                         		
        	row15.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_15, 11, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 12) {
								row15.Fechalegalization = null;
							} else {
	                         		
        	row15.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_15, 12, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 13) {
								row15.Horalegalization = null;
							} else {
	                         		
        	row15.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_15, 13, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 14) {
								row15.Instalacion = null;
							} else {
	                         		
        	row15.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_15, 14, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 15) {
								row15.urbano_rural = null;
							} else {
	                         		
        	row15.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_15, 15, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 16) {
								row15.ortrinur = null;
							} else {
	                         		
        	row15.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_15, 16, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 17) {
								row15.descripciona = null;
							} else {
	                         		
        	row15.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_15, 17, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 18) {
								row15.Ciudad = null;
							} else {
	                         		
        	row15.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_15, 18, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 19) {
								row15.cmrudesc = null;
							} else {
	                         		
        	row15.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_15, 19, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 20) {
								row15.region = null;
							} else {
	                         		
        	row15.region = routines.system.JDBCUtil.getString(rs_tDBInput_15, 20, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 21) {
								row15.regndesc = null;
							} else {
	                         		
        	row15.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_15, 21, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 22) {
								row15.depacodi = null;
							} else {
	                         		
        	row15.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_15, 22, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 23) {
								row15.codigorespuesta = null;
							} else {
	                         		
        	row15.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_15, 23, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 24) {
								row15.respuestatencion = null;
							} else {
	                         		
        	row15.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_15, 24, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 25) {
								row15.x = null;
							} else {
	                         		
        	row15.x = routines.system.JDBCUtil.getString(rs_tDBInput_15, 25, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 26) {
								row15.y = null;
							} else {
	                         		
        	row15.y = routines.system.JDBCUtil.getString(rs_tDBInput_15, 26, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 27) {
								row15.Ano = null;
							} else {
	                         		
        	row15.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_15, 27, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 28) {
								row15.Mes = null;
							} else {
	                         		
        	row15.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_15, 28, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 29) {
								row15.Dia = null;
							} else {
	                         		
        	row15.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_15, 29, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 30) {
								row15.desc_cna = null;
							} else {
	                         		
        	row15.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_15, 30, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 31) {
								row15.ACTIVIDAD = null;
							} else {
	                         		
        	row15.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_15, 31, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 32) {
								row15.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row15.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_15, 32, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 33) {
								row15.FRECUENCIA = null;
							} else {
	                         		
        	row15.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_15, 33, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 34) {
								row15.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row15.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_15, 34, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 35) {
								row15.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row15.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_15, 35, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 36) {
								row15.ESTADO_CORTE = null;
							} else {
	                         		
        	row15.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_15, 36, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 37) {
								row15.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row15.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_15, 37, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 38) {
								row15.ROUTE_ID = null;
							} else {
	                         		
        	row15.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_15, 38, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 39) {
								row15.NAME_ = null;
							} else {
	                         		
        	row15.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_15, 39, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 40) {
								row15.NUMBER_ID = null;
							} else {
	                         		
        	row15.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_15, 40, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 41) {
								row15.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row15.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_15, 41, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 42) {
								row15.CAUSANL_OBS = null;
							} else {
	                         		
        	row15.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_15, 42, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 43) {
								row15.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row15.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_15, 43, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 44) {
								row15.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row15.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_15, 44, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 45) {
								row15.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row15.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_15, 45, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 46) {
								row15.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row15.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_15, 46, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 47) {
								row15.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row15.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_15, 47, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 48) {
								row15.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row15.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_15, 48, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 49) {
								row15.TIPO_SERVICIO = null;
							} else {
	                         		
        	row15.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_15, 49, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 50) {
								row15.categoria = null;
							} else {
	                         		
        	row15.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_15, 50, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 51) {
								row15.ESTRATO = null;
							} else {
	                         		
        	row15.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_15, 51, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 52) {
								row15.DESC_SERVICIO = null;
							} else {
	                         		
        	row15.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_15, 52, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 53) {
								row15.orden_relacionada = null;
							} else {
	                         		
        	row15.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_15, 53, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 54) {
								row15.order_activity_ID = null;
							} else {
	                         		
        	row15.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_15, 54, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 55) {
								row15.Adjunto = null;
							} else {
	                         		
        	row15.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_15, 55, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 56) {
								row15.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row15.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_15, 56, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 57) {
								row15.K_DISPERSION = null;
							} else {
	                         		
        	row15.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_15, 57, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 58) {
								row15.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row15.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_15, 58, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 59) {
								row15.VALOR_UNITARIO = null;
							} else {
	                         		
        	row15.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_15, 59, false);
		                    }
							if(colQtyInRs_tDBInput_15 < 60) {
								row15.VALOR_K = null;
							} else {
	                         		
        	row15.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_15, 60, false);
		                    }
					

 



/**
 * [tDBInput_15 begin ] stop
 */
	
	/**
	 * [tDBInput_15 main ] start
	 */

	

	
	
	currentComponent="tDBInput_15";

	

 


	tos_count_tDBInput_15++;

/**
 * [tDBInput_15 main ] stop
 */
	
	/**
	 * [tDBInput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_15";

	

 



/**
 * [tDBInput_15 process_data_begin ] stop
 */

	
	/**
	 * [tMap_15 main ] start
	 */

	

	
	
	currentComponent="tMap_15";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row15");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_15 = false;
		  boolean mainRowRejected_tMap_15 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
        // ###############################
        // # Output tables

copyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfKDISPERSION_DETALLE_1'
copyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row15.FechaAsignacion;
copyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row15.Equipo_Trabajo;
copyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row15.UNIDAD_OPERATIVA;
copyOfKDISPERSION_DETALLE_1_tmp.Tarea = row15.Tarea;
copyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row15.DescTarea;
copyOfKDISPERSION_DETALLE_1_tmp.Orden = row15.Orden;
copyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row15.Ciclo;
copyOfKDISPERSION_DETALLE_1_tmp.servicio = row15.servicio;
copyOfKDISPERSION_DETALLE_1_tmp.Estado = row15.Estado;
copyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row15.Desc_estado;
copyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row15.FechaCREATED;
copyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row15.Fechalegalization;
copyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row15.Horalegalization;
copyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row15.Instalacion;
copyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row15.urbano_rural;
copyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row15.ortrinur;
copyOfKDISPERSION_DETALLE_1_tmp.descripciona = row15.descripciona;
copyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row15.Ciudad;
copyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row15.cmrudesc;
copyOfKDISPERSION_DETALLE_1_tmp.region = row15.region;
copyOfKDISPERSION_DETALLE_1_tmp.regndesc = row15.regndesc;
copyOfKDISPERSION_DETALLE_1_tmp.depacodi = row15.depacodi;
copyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row15.codigorespuesta;
copyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row15.respuestatencion;
copyOfKDISPERSION_DETALLE_1_tmp.x = row15.x;
copyOfKDISPERSION_DETALLE_1_tmp.y = row15.y;
copyOfKDISPERSION_DETALLE_1_tmp.Ano = row15.Ano;
copyOfKDISPERSION_DETALLE_1_tmp.Mes = row15.Mes;
copyOfKDISPERSION_DETALLE_1_tmp.Dia = row15.Dia;
copyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row15.desc_cna;
copyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row15.ACTIVIDAD;
copyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row15.DESC_ACTIVIDAD;
copyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row15.FRECUENCIA;
copyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row15.CUENTAS_VENCIDAS;
copyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row15.SALDO_CUENTAS_VENCIDAS;
copyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row15.ESTADO_CORTE;
copyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row15.TIPO_ACTIVIDAD;
copyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row15.ROUTE_ID;
copyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row15.NAME_;
copyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row15.NUMBER_ID;
copyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row15.CODIGO_CAUSANL_OBS;
copyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row15.CAUSANL_OBS;
copyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row15.CODIGO_CAUSANL_OBS2;
copyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row15.CAUSANL_OBS2;
copyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row15.CODIGO_CAUSANL_OBS3;
copyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row15.CAUSANL_OBS3;
copyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row15.SERVICIO_SUSCRITO;
copyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row15.COD_TIPO_SERVICIO;
copyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row15.TIPO_SERVICIO;
copyOfKDISPERSION_DETALLE_1_tmp.categoria = row15.categoria;
copyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row15.ESTRATO;
copyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row15.DESC_SERVICIO;
copyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row15.orden_relacionada;
copyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row15.order_activity_ID;
copyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row15.Adjunto;
copyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row15.ID_SECUENCIAS_ACTA;
copyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row15.K_DISPERSION;
copyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row15.SIGLA_ACTIVIDAD;
copyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row15.VALOR_UNITARIO;
copyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row15.VALOR_K;
copyOfKDISPERSION_DETALLE_1 = copyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_15 = false;










 


	tos_count_tMap_15++;

/**
 * [tMap_15 main ] stop
 */
	
	/**
	 * [tMap_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_15";

	

 



/**
 * [tMap_15 process_data_begin ] stop
 */
// Start of branch "copyOfKDISPERSION_DETALLE_1"
if(copyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_15 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_15";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_15 = false;
                    if(copyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_15.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_15.setString(1, copyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_15 = -1;
            try (java.sql.ResultSet rs_tDBOutput_15 = pstmt_tDBOutput_15.executeQuery()) {
                while(rs_tDBOutput_15.next()) {
                    checkCount_tDBOutput_15 = rs_tDBOutput_15.getInt(1);
                }
            }
            if(checkCount_tDBOutput_15 > 0) {
                        if(copyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_15.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(1, copyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_15.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(2, copyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_15.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(3, copyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_15.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(4, copyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_15.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(5, copyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_15.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(6, copyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_15.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(7, copyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_15.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(8, copyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_15.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(9, copyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_15.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(10, copyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_15.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(11, copyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_15.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(12, copyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_15.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(13, copyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_15.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(14, copyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_15.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(15, copyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_15.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(16, copyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_15.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(17, copyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_15.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(18, copyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_15.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(19, copyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_15.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(20, copyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_15.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(21, copyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_15.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(22, copyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_15.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(23, copyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_15.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(24, copyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_15.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(25, copyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_15.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(26, copyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_15.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(27, copyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_15.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(28, copyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_15.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(29, copyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_15.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(30, copyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_15.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(31, copyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_15.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(32, copyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_15.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(33, copyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_15.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(34, copyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_15.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(35, copyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_15.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(36, copyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_15.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(37, copyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_15.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(38, copyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_15.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(39, copyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_15.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(40, copyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_15.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(41, copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_15.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(42, copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_15.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(43, copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_15.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(44, copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_15.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(45, copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_15.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(46, copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_15.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(47, copyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_15.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(48, copyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_15.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(49, copyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_15.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(50, copyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_15.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(51, copyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_15.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(52, copyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_15.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(53, copyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_15.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(54, copyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_15.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(55, copyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_15.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(56, copyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_15.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(57, copyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_15.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(58, copyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_15.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(59, copyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_15.setNull(60 + count_tDBOutput_15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_15.setString(60 + count_tDBOutput_15, copyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_15 = updatedCount_tDBOutput_15 + pstmtUpdate_tDBOutput_15.executeUpdate();
                    nb_line_tDBOutput_15++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_15 = true;
                        nb_line_tDBOutput_15++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_15.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(1, copyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_15.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(2, copyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_15.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(3, copyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_15.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(4, copyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_15.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(5, copyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_15.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(6, copyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_15.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(7, copyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_15.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(8, copyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_15.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(9, copyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_15.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(10, copyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_15.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(11, copyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_15.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(12, copyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_15.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(13, copyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_15.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(14, copyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_15.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(15, copyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_15.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(16, copyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_15.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(17, copyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_15.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(18, copyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_15.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(19, copyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_15.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(20, copyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_15.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(21, copyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_15.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(22, copyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_15.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(23, copyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_15.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(24, copyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_15.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(25, copyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_15.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(26, copyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_15.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(27, copyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_15.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(28, copyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_15.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(29, copyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_15.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(30, copyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_15.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(31, copyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_15.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(32, copyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_15.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(33, copyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_15.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(34, copyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_15.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(35, copyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_15.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(36, copyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_15.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(37, copyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_15.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(38, copyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_15.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(39, copyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_15.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(40, copyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_15.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(41, copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_15.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(42, copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_15.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(43, copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_15.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(44, copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_15.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(45, copyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_15.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(46, copyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_15.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(47, copyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_15.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(48, copyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_15.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(49, copyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_15.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(50, copyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_15.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(51, copyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_15.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(52, copyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_15.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(53, copyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_15.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(54, copyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_15.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(55, copyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_15.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(56, copyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_15.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(57, copyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_15.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(58, copyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_15.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(59, copyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_15.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_15.setString(60, copyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_15 = insertedCount_tDBOutput_15 + pstmtInsert_tDBOutput_15.executeUpdate();
                    nb_line_tDBOutput_15++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_15 = true;
                        nb_line_tDBOutput_15++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_15) {
            }
                commitCounter_tDBOutput_15++;

                if(commitEvery_tDBOutput_15 <= commitCounter_tDBOutput_15) {

                    conn_tDBOutput_15.commit();
                    commitCounter_tDBOutput_15=0;

                }


 


	tos_count_tDBOutput_15++;

/**
 * [tDBOutput_15 main ] stop
 */
	
	/**
	 * [tDBOutput_15 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_15";

	

 



/**
 * [tDBOutput_15 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_15";

	

 



/**
 * [tDBOutput_15 process_data_end ] stop
 */

} // End of branch "copyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_15";

	

 



/**
 * [tMap_15 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_15 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_15";

	

 



/**
 * [tDBInput_15 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_15 end ] start
	 */

	

	
	
	currentComponent="tDBInput_15";

	

	}
}finally{
	if (rs_tDBInput_15 != null) {
		rs_tDBInput_15.close();
	}
	if (stmt_tDBInput_15 != null) {
		stmt_tDBInput_15.close();
	}
		if(conn_tDBInput_15 != null && !conn_tDBInput_15.isClosed()) {
			
			conn_tDBInput_15.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_15_NB_LINE",nb_line_tDBInput_15);
		


 

ok_Hash.put("tDBInput_15", true);
end_Hash.put("tDBInput_15", System.currentTimeMillis());




/**
 * [tDBInput_15 end ] stop
 */

	
	/**
	 * [tMap_15 end ] start
	 */

	

	
	
	currentComponent="tMap_15";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row15");
			  	}
			  	
 

ok_Hash.put("tMap_15", true);
end_Hash.put("tMap_15", System.currentTimeMillis());




/**
 * [tMap_15 end ] stop
 */

	
	/**
	 * [tDBOutput_15 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_15";

	



        if(pstmtUpdate_tDBOutput_15 != null){
            pstmtUpdate_tDBOutput_15.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_15");
        }
        if(pstmtInsert_tDBOutput_15 != null){
            pstmtInsert_tDBOutput_15.close();
            resourceMap.remove("pstmtInsert_tDBOutput_15");
        }
        if(pstmt_tDBOutput_15 != null) {
            pstmt_tDBOutput_15.close();
            resourceMap.remove("pstmt_tDBOutput_15");
        }
    resourceMap.put("statementClosed_tDBOutput_15", true);
    	if (commitCounter_tDBOutput_15 > 0) {
    		
    		conn_tDBOutput_15.commit();
    		
    	}
    		
		
    	conn_tDBOutput_15 .close();
    	
    	resourceMap.put("finish_tDBOutput_15", true);
    	

	nb_line_deleted_tDBOutput_15=nb_line_deleted_tDBOutput_15+ deletedCount_tDBOutput_15;
	nb_line_update_tDBOutput_15=nb_line_update_tDBOutput_15 + updatedCount_tDBOutput_15;
	nb_line_inserted_tDBOutput_15=nb_line_inserted_tDBOutput_15 + insertedCount_tDBOutput_15;
	nb_line_rejected_tDBOutput_15=nb_line_rejected_tDBOutput_15 + rejectedCount_tDBOutput_15;
	
        globalMap.put("tDBOutput_15_NB_LINE",nb_line_tDBOutput_15);
        globalMap.put("tDBOutput_15_NB_LINE_UPDATED",nb_line_update_tDBOutput_15);
        globalMap.put("tDBOutput_15_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_15);
        globalMap.put("tDBOutput_15_NB_LINE_DELETED",nb_line_deleted_tDBOutput_15);
        globalMap.put("tDBOutput_15_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_15);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_15", true);
end_Hash.put("tDBOutput_15", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk15", 0, "ok");
				}
				tDBInput_16Process(globalMap);



/**
 * [tDBOutput_15 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_15 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_15";

	

 



/**
 * [tDBInput_15 finally ] stop
 */

	
	/**
	 * [tMap_15 finally ] start
	 */

	

	
	
	currentComponent="tMap_15";

	

 



/**
 * [tMap_15 finally ] stop
 */

	
	/**
	 * [tDBOutput_15 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_15";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_15") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_15 = null;
                if ((pstmtUpdateToClose_tDBOutput_15 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_15")) != null) {
                    pstmtUpdateToClose_tDBOutput_15.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_15 = null;
                if ((pstmtInsertToClose_tDBOutput_15 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_15")) != null) {
                    pstmtInsertToClose_tDBOutput_15.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_15 = null;
                if ((pstmtToClose_tDBOutput_15 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_15")) != null) {
                    pstmtToClose_tDBOutput_15.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_15") == null){
            java.sql.Connection ctn_tDBOutput_15 = null;
            if((ctn_tDBOutput_15 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_15")) != null){
                try {
                    ctn_tDBOutput_15.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_15) {
                    String errorMessage_tDBOutput_15 = "failed to close the connection in tDBOutput_15 :" + sqlEx_tDBOutput_15.getMessage();
                    System.err.println(errorMessage_tDBOutput_15);
                }
            }
        }
    }
 



/**
 * [tDBOutput_15 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_15_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfKDISPERSION_DETALLE_1_0Struct implements routines.system.IPersistableRow<copyOfcopyOfKDISPERSION_DETALLE_1_0Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfKDISPERSION_DETALLE_1_0Struct other = (copyOfcopyOfKDISPERSION_DETALLE_1_0Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfKDISPERSION_DETALLE_1_0Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfKDISPERSION_DETALLE_1_0Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfKDISPERSION_DETALLE_1_0Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row24Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_16_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row24Struct row24 = new row24Struct();
copyOfcopyOfKDISPERSION_DETALLE_1_0Struct copyOfcopyOfKDISPERSION_DETALLE_1_0 = new copyOfcopyOfKDISPERSION_DETALLE_1_0Struct();





	
	/**
	 * [tDBOutput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_16", false);
		start_Hash.put("tDBOutput_16", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_16";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfKDISPERSION_DETALLE_1_0");
					}
				
		int tos_count_tDBOutput_16 = 0;
		





        int updateKeyCount_tDBOutput_16 = 1;
        if(updateKeyCount_tDBOutput_16 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_16 = 0;
int nb_line_update_tDBOutput_16 = 0;
int nb_line_inserted_tDBOutput_16 = 0;
int nb_line_deleted_tDBOutput_16 = 0;
int nb_line_rejected_tDBOutput_16 = 0;

int deletedCount_tDBOutput_16=0;
int updatedCount_tDBOutput_16=0;
int insertedCount_tDBOutput_16=0;

int rejectedCount_tDBOutput_16=0;

String tableName_tDBOutput_16 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_16 = false;

java.util.Calendar calendar_tDBOutput_16 = java.util.Calendar.getInstance();
calendar_tDBOutput_16.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_16 = calendar_tDBOutput_16.getTime().getTime();
calendar_tDBOutput_16.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_16 = calendar_tDBOutput_16.getTime().getTime();
long date_tDBOutput_16;

java.sql.Connection conn_tDBOutput_16 = null;
		String dbProperties_tDBOutput_16 = "noDatetimeStringSync=true";
		String url_tDBOutput_16 = null;
		if(dbProperties_tDBOutput_16 == null || dbProperties_tDBOutput_16.trim().length() == 0) {
			url_tDBOutput_16 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_16 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_16.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_16 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_16 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_16;
		}
		String driverClass_tDBOutput_16 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_16 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_16 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:sRXvB4WFMUuNrSW8/UnJOftUOHCKdjJImRvBF0+MEXU+oMfbN7pSZoM=");

		String dbPwd_tDBOutput_16 = decryptedPassword_tDBOutput_16;
		java.lang.Class.forName(driverClass_tDBOutput_16);
		
		conn_tDBOutput_16 = java.sql.DriverManager.getConnection(url_tDBOutput_16, dbUser_tDBOutput_16, dbPwd_tDBOutput_16);
		
	
	resourceMap.put("conn_tDBOutput_16", conn_tDBOutput_16);
        conn_tDBOutput_16.setAutoCommit(false);
        int commitEvery_tDBOutput_16 = 10000;
        int commitCounter_tDBOutput_16 = 0;

int count_tDBOutput_16=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_16 = conn_tDBOutput_16.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_16", pstmt_tDBOutput_16);
	    String insert_tDBOutput_16 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_16 = conn_tDBOutput_16.prepareStatement(insert_tDBOutput_16);
	    resourceMap.put("pstmtInsert_tDBOutput_16", pstmtInsert_tDBOutput_16);
	    String update_tDBOutput_16 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_16 = conn_tDBOutput_16.prepareStatement(update_tDBOutput_16);
	    resourceMap.put("pstmtUpdate_tDBOutput_16", pstmtUpdate_tDBOutput_16);
	    

 



/**
 * [tDBOutput_16 begin ] stop
 */



	
	/**
	 * [tMap_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_16", false);
		start_Hash.put("tMap_16", System.currentTimeMillis());
		
	
	currentComponent="tMap_16";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row24");
					}
				
		int tos_count_tMap_16 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_16__Struct  {
}
Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfKDISPERSION_DETALLE_1_0Struct copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp = new copyOfcopyOfKDISPERSION_DETALLE_1_0Struct();
// ###############################

        
        



        









 



/**
 * [tMap_16 begin ] stop
 */



	
	/**
	 * [tDBInput_16 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_16", false);
		start_Hash.put("tDBInput_16", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_16";

	
		int tos_count_tDBInput_16 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_16 = java.util.Calendar.getInstance();
		    calendar_tDBInput_16.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_16 = calendar_tDBInput_16.getTime();
		    int nb_line_tDBInput_16 = 0;
		    java.sql.Connection conn_tDBInput_16 = null;
				String driverClass_tDBInput_16 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_16 = java.lang.Class.forName(driverClass_tDBInput_16);
				String dbUser_tDBInput_16 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_16 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:M2krsRZRokFWbEDCgBGnIa4wq5wyMCybIccYkD6uroHBxNF4ZAokW/M=");
				
				String dbPwd_tDBInput_16 = decryptedPassword_tDBInput_16;
				
				String url_tDBInput_16 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_16 = java.sql.DriverManager.getConnection(url_tDBInput_16,dbUser_tDBInput_16,dbPwd_tDBInput_16);
		        
		    
			java.sql.Statement stmt_tDBInput_16 = conn_tDBInput_16.createStatement();

		    String dbquery_tDBInput_16 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'LECT1'SIGLA_ACTIVIDAD\n,(SELECT distinct c.PRICE FROM"
+" acta_precios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL' )VALOR_UNITARIO\n,((SELECT distinct c.PRICE FROM ac"
+"ta_precios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL'  )*1 ) VALOR_K\nfrom secuencias_acta1 a\nwhere \n a.re"
+"gion <>'8'\n and a.ortrinur ='U'\nand  a.id_secuencias_acta not in (SELECT id_secuencias_acta FROM secuencias_kdispersio"
+"n )\nand a.FECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'15')) from consulta_fecha_k_dispersion)\nand a.FECHALEG"
+"ALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_16_QUERY",dbquery_tDBInput_16);
		    java.sql.ResultSet rs_tDBInput_16 = null;

		    try {
		    	rs_tDBInput_16 = stmt_tDBInput_16.executeQuery(dbquery_tDBInput_16);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_16 = rs_tDBInput_16.getMetaData();
		    	int colQtyInRs_tDBInput_16 = rsmd_tDBInput_16.getColumnCount();

		    String tmpContent_tDBInput_16 = null;
		    
		    
		    while (rs_tDBInput_16.next()) {
		        nb_line_tDBInput_16++;
		        
							if(colQtyInRs_tDBInput_16 < 1) {
								row24.FechaAsignacion = null;
							} else {
	                         		
        	row24.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_16, 1, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 2) {
								row24.Equipo_Trabajo = null;
							} else {
	                         		
        	row24.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_16, 2, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 3) {
								row24.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row24.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_16, 3, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 4) {
								row24.Tarea = null;
							} else {
	                         		
        	row24.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_16, 4, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 5) {
								row24.DescTarea = null;
							} else {
	                         		
        	row24.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_16, 5, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 6) {
								row24.Orden = null;
							} else {
	                         		
        	row24.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_16, 6, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 7) {
								row24.Ciclo = null;
							} else {
	                         		
        	row24.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_16, 7, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 8) {
								row24.servicio = null;
							} else {
	                         		
        	row24.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_16, 8, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 9) {
								row24.Estado = null;
							} else {
	                         		
        	row24.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_16, 9, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 10) {
								row24.Desc_estado = null;
							} else {
	                         		
        	row24.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_16, 10, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 11) {
								row24.FechaCREATED = null;
							} else {
	                         		
        	row24.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_16, 11, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 12) {
								row24.Fechalegalization = null;
							} else {
	                         		
        	row24.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_16, 12, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 13) {
								row24.Horalegalization = null;
							} else {
	                         		
        	row24.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_16, 13, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 14) {
								row24.Instalacion = null;
							} else {
	                         		
        	row24.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_16, 14, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 15) {
								row24.urbano_rural = null;
							} else {
	                         		
        	row24.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_16, 15, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 16) {
								row24.ortrinur = null;
							} else {
	                         		
        	row24.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_16, 16, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 17) {
								row24.descripciona = null;
							} else {
	                         		
        	row24.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_16, 17, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 18) {
								row24.Ciudad = null;
							} else {
	                         		
        	row24.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_16, 18, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 19) {
								row24.cmrudesc = null;
							} else {
	                         		
        	row24.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_16, 19, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 20) {
								row24.region = null;
							} else {
	                         		
        	row24.region = routines.system.JDBCUtil.getString(rs_tDBInput_16, 20, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 21) {
								row24.regndesc = null;
							} else {
	                         		
        	row24.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_16, 21, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 22) {
								row24.depacodi = null;
							} else {
	                         		
        	row24.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_16, 22, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 23) {
								row24.codigorespuesta = null;
							} else {
	                         		
        	row24.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_16, 23, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 24) {
								row24.respuestatencion = null;
							} else {
	                         		
        	row24.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_16, 24, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 25) {
								row24.x = null;
							} else {
	                         		
        	row24.x = routines.system.JDBCUtil.getString(rs_tDBInput_16, 25, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 26) {
								row24.y = null;
							} else {
	                         		
        	row24.y = routines.system.JDBCUtil.getString(rs_tDBInput_16, 26, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 27) {
								row24.Ano = null;
							} else {
	                         		
        	row24.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_16, 27, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 28) {
								row24.Mes = null;
							} else {
	                         		
        	row24.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_16, 28, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 29) {
								row24.Dia = null;
							} else {
	                         		
        	row24.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_16, 29, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 30) {
								row24.desc_cna = null;
							} else {
	                         		
        	row24.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_16, 30, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 31) {
								row24.ACTIVIDAD = null;
							} else {
	                         		
        	row24.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_16, 31, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 32) {
								row24.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row24.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_16, 32, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 33) {
								row24.FRECUENCIA = null;
							} else {
	                         		
        	row24.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_16, 33, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 34) {
								row24.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row24.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_16, 34, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 35) {
								row24.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row24.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_16, 35, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 36) {
								row24.ESTADO_CORTE = null;
							} else {
	                         		
        	row24.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_16, 36, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 37) {
								row24.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row24.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_16, 37, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 38) {
								row24.ROUTE_ID = null;
							} else {
	                         		
        	row24.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_16, 38, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 39) {
								row24.NAME_ = null;
							} else {
	                         		
        	row24.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_16, 39, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 40) {
								row24.NUMBER_ID = null;
							} else {
	                         		
        	row24.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_16, 40, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 41) {
								row24.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row24.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_16, 41, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 42) {
								row24.CAUSANL_OBS = null;
							} else {
	                         		
        	row24.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_16, 42, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 43) {
								row24.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row24.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_16, 43, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 44) {
								row24.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row24.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_16, 44, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 45) {
								row24.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row24.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_16, 45, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 46) {
								row24.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row24.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_16, 46, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 47) {
								row24.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row24.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_16, 47, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 48) {
								row24.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row24.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_16, 48, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 49) {
								row24.TIPO_SERVICIO = null;
							} else {
	                         		
        	row24.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_16, 49, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 50) {
								row24.categoria = null;
							} else {
	                         		
        	row24.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_16, 50, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 51) {
								row24.ESTRATO = null;
							} else {
	                         		
        	row24.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_16, 51, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 52) {
								row24.DESC_SERVICIO = null;
							} else {
	                         		
        	row24.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_16, 52, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 53) {
								row24.orden_relacionada = null;
							} else {
	                         		
        	row24.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_16, 53, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 54) {
								row24.order_activity_ID = null;
							} else {
	                         		
        	row24.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_16, 54, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 55) {
								row24.Adjunto = null;
							} else {
	                         		
        	row24.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_16, 55, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 56) {
								row24.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row24.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_16, 56, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 57) {
								row24.K_DISPERSION = null;
							} else {
	                         		
        	row24.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_16, 57, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 58) {
								row24.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row24.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_16, 58, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 59) {
								row24.VALOR_UNITARIO = null;
							} else {
	                         		
        	row24.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_16, 59, false);
		                    }
							if(colQtyInRs_tDBInput_16 < 60) {
								row24.VALOR_K = null;
							} else {
	                         		
        	row24.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_16, 60, false);
		                    }
					

 



/**
 * [tDBInput_16 begin ] stop
 */
	
	/**
	 * [tDBInput_16 main ] start
	 */

	

	
	
	currentComponent="tDBInput_16";

	

 


	tos_count_tDBInput_16++;

/**
 * [tDBInput_16 main ] stop
 */
	
	/**
	 * [tDBInput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_16";

	

 



/**
 * [tDBInput_16 process_data_begin ] stop
 */

	
	/**
	 * [tMap_16 main ] start
	 */

	

	
	
	currentComponent="tMap_16";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row24");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_16 = false;
		  boolean mainRowRejected_tMap_16 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfKDISPERSION_DETALLE_1_0 = null;


// # Output table : 'copyOfcopyOfKDISPERSION_DETALLE_1_0'
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.FechaAsignacion = row24.FechaAsignacion;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Equipo_Trabajo = row24.Equipo_Trabajo;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.UNIDAD_OPERATIVA = row24.UNIDAD_OPERATIVA;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Tarea = row24.Tarea;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.DescTarea = row24.DescTarea;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Orden = row24.Orden;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Ciclo = row24.Ciclo;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.servicio = row24.servicio;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Estado = row24.Estado;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Desc_estado = row24.Desc_estado;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.FechaCREATED = row24.FechaCREATED;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Fechalegalization = row24.Fechalegalization;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Horalegalization = row24.Horalegalization;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Instalacion = row24.Instalacion;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.urbano_rural = row24.urbano_rural;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.ortrinur = row24.ortrinur;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.descripciona = row24.descripciona;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Ciudad = row24.Ciudad;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.cmrudesc = row24.cmrudesc;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.region = row24.region;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.regndesc = row24.regndesc;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.depacodi = row24.depacodi;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.codigorespuesta = row24.codigorespuesta;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.respuestatencion = row24.respuestatencion;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.x = row24.x;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.y = row24.y;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Ano = row24.Ano;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Mes = row24.Mes;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Dia = row24.Dia;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.desc_cna = row24.desc_cna;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.ACTIVIDAD = row24.ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.DESC_ACTIVIDAD = row24.DESC_ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.FRECUENCIA = row24.FRECUENCIA;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.CUENTAS_VENCIDAS = row24.CUENTAS_VENCIDAS;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.SALDO_CUENTAS_VENCIDAS = row24.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.ESTADO_CORTE = row24.ESTADO_CORTE;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.TIPO_ACTIVIDAD = row24.TIPO_ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.ROUTE_ID = row24.ROUTE_ID;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.NAME_ = row24.NAME_;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.NUMBER_ID = row24.NUMBER_ID;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.CODIGO_CAUSANL_OBS = row24.CODIGO_CAUSANL_OBS;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.CAUSANL_OBS = row24.CAUSANL_OBS;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.CODIGO_CAUSANL_OBS2 = row24.CODIGO_CAUSANL_OBS2;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.CAUSANL_OBS2 = row24.CAUSANL_OBS2;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.CODIGO_CAUSANL_OBS3 = row24.CODIGO_CAUSANL_OBS3;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.CAUSANL_OBS3 = row24.CAUSANL_OBS3;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.SERVICIO_SUSCRITO = row24.SERVICIO_SUSCRITO;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.COD_TIPO_SERVICIO = row24.COD_TIPO_SERVICIO;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.TIPO_SERVICIO = row24.TIPO_SERVICIO;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.categoria = row24.categoria;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.ESTRATO = row24.ESTRATO;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.DESC_SERVICIO = row24.DESC_SERVICIO;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.orden_relacionada = row24.orden_relacionada;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.order_activity_ID = row24.order_activity_ID;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.Adjunto = row24.Adjunto;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.ID_SECUENCIAS_ACTA = row24.ID_SECUENCIAS_ACTA;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.K_DISPERSION = row24.K_DISPERSION;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.SIGLA_ACTIVIDAD = row24.SIGLA_ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.VALOR_UNITARIO = row24.VALOR_UNITARIO;
copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp.VALOR_K = row24.VALOR_K;
copyOfcopyOfKDISPERSION_DETALLE_1_0 = copyOfcopyOfKDISPERSION_DETALLE_1_0_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_16 = false;










 


	tos_count_tMap_16++;

/**
 * [tMap_16 main ] stop
 */
	
	/**
	 * [tMap_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_16";

	

 



/**
 * [tMap_16 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfKDISPERSION_DETALLE_1_0"
if(copyOfcopyOfKDISPERSION_DETALLE_1_0 != null) { 



	
	/**
	 * [tDBOutput_16 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_16";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfKDISPERSION_DETALLE_1_0");
					}
					



        whetherReject_tDBOutput_16 = false;
                    if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_16.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_16.setString(1, copyOfcopyOfKDISPERSION_DETALLE_1_0.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_16 = -1;
            try (java.sql.ResultSet rs_tDBOutput_16 = pstmt_tDBOutput_16.executeQuery()) {
                while(rs_tDBOutput_16.next()) {
                    checkCount_tDBOutput_16 = rs_tDBOutput_16.getInt(1);
                }
            }
            if(checkCount_tDBOutput_16 > 0) {
                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_16.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(1, copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaAsignacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_16.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(2, copyOfcopyOfKDISPERSION_DETALLE_1_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_16.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(3, copyOfcopyOfKDISPERSION_DETALLE_1_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Tarea == null) {
pstmtUpdate_tDBOutput_16.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(4, copyOfcopyOfKDISPERSION_DETALLE_1_0.Tarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.DescTarea == null) {
pstmtUpdate_tDBOutput_16.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(5, copyOfcopyOfKDISPERSION_DETALLE_1_0.DescTarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Orden == null) {
pstmtUpdate_tDBOutput_16.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(6, copyOfcopyOfKDISPERSION_DETALLE_1_0.Orden);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciclo == null) {
pstmtUpdate_tDBOutput_16.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(7, copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciclo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.servicio == null) {
pstmtUpdate_tDBOutput_16.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(8, copyOfcopyOfKDISPERSION_DETALLE_1_0.servicio);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Estado == null) {
pstmtUpdate_tDBOutput_16.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(9, copyOfcopyOfKDISPERSION_DETALLE_1_0.Estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Desc_estado == null) {
pstmtUpdate_tDBOutput_16.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(10, copyOfcopyOfKDISPERSION_DETALLE_1_0.Desc_estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaCREATED == null) {
pstmtUpdate_tDBOutput_16.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(11, copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaCREATED);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Fechalegalization == null) {
pstmtUpdate_tDBOutput_16.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(12, copyOfcopyOfKDISPERSION_DETALLE_1_0.Fechalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Horalegalization == null) {
pstmtUpdate_tDBOutput_16.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(13, copyOfcopyOfKDISPERSION_DETALLE_1_0.Horalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Instalacion == null) {
pstmtUpdate_tDBOutput_16.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(14, copyOfcopyOfKDISPERSION_DETALLE_1_0.Instalacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.urbano_rural == null) {
pstmtUpdate_tDBOutput_16.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(15, copyOfcopyOfKDISPERSION_DETALLE_1_0.urbano_rural);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ortrinur == null) {
pstmtUpdate_tDBOutput_16.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(16, copyOfcopyOfKDISPERSION_DETALLE_1_0.ortrinur);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.descripciona == null) {
pstmtUpdate_tDBOutput_16.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(17, copyOfcopyOfKDISPERSION_DETALLE_1_0.descripciona);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciudad == null) {
pstmtUpdate_tDBOutput_16.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(18, copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciudad);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.cmrudesc == null) {
pstmtUpdate_tDBOutput_16.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(19, copyOfcopyOfKDISPERSION_DETALLE_1_0.cmrudesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.region == null) {
pstmtUpdate_tDBOutput_16.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(20, copyOfcopyOfKDISPERSION_DETALLE_1_0.region);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.regndesc == null) {
pstmtUpdate_tDBOutput_16.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(21, copyOfcopyOfKDISPERSION_DETALLE_1_0.regndesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.depacodi == null) {
pstmtUpdate_tDBOutput_16.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(22, copyOfcopyOfKDISPERSION_DETALLE_1_0.depacodi);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.codigorespuesta == null) {
pstmtUpdate_tDBOutput_16.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(23, copyOfcopyOfKDISPERSION_DETALLE_1_0.codigorespuesta);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.respuestatencion == null) {
pstmtUpdate_tDBOutput_16.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(24, copyOfcopyOfKDISPERSION_DETALLE_1_0.respuestatencion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.x == null) {
pstmtUpdate_tDBOutput_16.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(25, copyOfcopyOfKDISPERSION_DETALLE_1_0.x);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.y == null) {
pstmtUpdate_tDBOutput_16.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(26, copyOfcopyOfKDISPERSION_DETALLE_1_0.y);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Ano == null) {
pstmtUpdate_tDBOutput_16.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(27, copyOfcopyOfKDISPERSION_DETALLE_1_0.Ano);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Mes == null) {
pstmtUpdate_tDBOutput_16.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(28, copyOfcopyOfKDISPERSION_DETALLE_1_0.Mes);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Dia == null) {
pstmtUpdate_tDBOutput_16.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(29, copyOfcopyOfKDISPERSION_DETALLE_1_0.Dia);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.desc_cna == null) {
pstmtUpdate_tDBOutput_16.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(30, copyOfcopyOfKDISPERSION_DETALLE_1_0.desc_cna);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_16.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(31, copyOfcopyOfKDISPERSION_DETALLE_1_0.ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_16.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(32, copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_16.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(33, copyOfcopyOfKDISPERSION_DETALLE_1_0.FRECUENCIA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_16.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(34, copyOfcopyOfKDISPERSION_DETALLE_1_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_16.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(35, copyOfcopyOfKDISPERSION_DETALLE_1_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_16.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(36, copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_16.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(37, copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_16.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(38, copyOfcopyOfKDISPERSION_DETALLE_1_0.ROUTE_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.NAME_ == null) {
pstmtUpdate_tDBOutput_16.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(39, copyOfcopyOfKDISPERSION_DETALLE_1_0.NAME_);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_16.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(40, copyOfcopyOfKDISPERSION_DETALLE_1_0.NUMBER_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_16.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(41, copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_16.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(42, copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_16.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(43, copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_16.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(44, copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_16.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(45, copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_16.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(46, copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_16.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(47, copyOfcopyOfKDISPERSION_DETALLE_1_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_16.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(48, copyOfcopyOfKDISPERSION_DETALLE_1_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_16.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(49, copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.categoria == null) {
pstmtUpdate_tDBOutput_16.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(50, copyOfcopyOfKDISPERSION_DETALLE_1_0.categoria);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTRATO == null) {
pstmtUpdate_tDBOutput_16.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(51, copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTRATO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_16.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(52, copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.orden_relacionada == null) {
pstmtUpdate_tDBOutput_16.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(53, copyOfcopyOfKDISPERSION_DETALLE_1_0.orden_relacionada);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.order_activity_ID == null) {
pstmtUpdate_tDBOutput_16.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(54, copyOfcopyOfKDISPERSION_DETALLE_1_0.order_activity_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Adjunto == null) {
pstmtUpdate_tDBOutput_16.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(55, copyOfcopyOfKDISPERSION_DETALLE_1_0.Adjunto);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_16.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(56, copyOfcopyOfKDISPERSION_DETALLE_1_0.K_DISPERSION);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_16.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(57, copyOfcopyOfKDISPERSION_DETALLE_1_0.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_16.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(58, copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_UNITARIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_K == null) {
pstmtUpdate_tDBOutput_16.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(59, copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_K);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_16.setNull(60 + count_tDBOutput_16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_16.setString(60 + count_tDBOutput_16, copyOfcopyOfKDISPERSION_DETALLE_1_0.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_16 = updatedCount_tDBOutput_16 + pstmtUpdate_tDBOutput_16.executeUpdate();
                    nb_line_tDBOutput_16++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_16 = true;
                        nb_line_tDBOutput_16++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaAsignacion == null) {
pstmtInsert_tDBOutput_16.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(1, copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaAsignacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_16.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(2, copyOfcopyOfKDISPERSION_DETALLE_1_0.Equipo_Trabajo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_16.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(3, copyOfcopyOfKDISPERSION_DETALLE_1_0.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Tarea == null) {
pstmtInsert_tDBOutput_16.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(4, copyOfcopyOfKDISPERSION_DETALLE_1_0.Tarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.DescTarea == null) {
pstmtInsert_tDBOutput_16.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(5, copyOfcopyOfKDISPERSION_DETALLE_1_0.DescTarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Orden == null) {
pstmtInsert_tDBOutput_16.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(6, copyOfcopyOfKDISPERSION_DETALLE_1_0.Orden);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciclo == null) {
pstmtInsert_tDBOutput_16.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(7, copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciclo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.servicio == null) {
pstmtInsert_tDBOutput_16.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(8, copyOfcopyOfKDISPERSION_DETALLE_1_0.servicio);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Estado == null) {
pstmtInsert_tDBOutput_16.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(9, copyOfcopyOfKDISPERSION_DETALLE_1_0.Estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Desc_estado == null) {
pstmtInsert_tDBOutput_16.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(10, copyOfcopyOfKDISPERSION_DETALLE_1_0.Desc_estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaCREATED == null) {
pstmtInsert_tDBOutput_16.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(11, copyOfcopyOfKDISPERSION_DETALLE_1_0.FechaCREATED);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Fechalegalization == null) {
pstmtInsert_tDBOutput_16.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(12, copyOfcopyOfKDISPERSION_DETALLE_1_0.Fechalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Horalegalization == null) {
pstmtInsert_tDBOutput_16.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(13, copyOfcopyOfKDISPERSION_DETALLE_1_0.Horalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Instalacion == null) {
pstmtInsert_tDBOutput_16.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(14, copyOfcopyOfKDISPERSION_DETALLE_1_0.Instalacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.urbano_rural == null) {
pstmtInsert_tDBOutput_16.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(15, copyOfcopyOfKDISPERSION_DETALLE_1_0.urbano_rural);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ortrinur == null) {
pstmtInsert_tDBOutput_16.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(16, copyOfcopyOfKDISPERSION_DETALLE_1_0.ortrinur);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.descripciona == null) {
pstmtInsert_tDBOutput_16.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(17, copyOfcopyOfKDISPERSION_DETALLE_1_0.descripciona);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciudad == null) {
pstmtInsert_tDBOutput_16.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(18, copyOfcopyOfKDISPERSION_DETALLE_1_0.Ciudad);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.cmrudesc == null) {
pstmtInsert_tDBOutput_16.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(19, copyOfcopyOfKDISPERSION_DETALLE_1_0.cmrudesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.region == null) {
pstmtInsert_tDBOutput_16.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(20, copyOfcopyOfKDISPERSION_DETALLE_1_0.region);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.regndesc == null) {
pstmtInsert_tDBOutput_16.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(21, copyOfcopyOfKDISPERSION_DETALLE_1_0.regndesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.depacodi == null) {
pstmtInsert_tDBOutput_16.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(22, copyOfcopyOfKDISPERSION_DETALLE_1_0.depacodi);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.codigorespuesta == null) {
pstmtInsert_tDBOutput_16.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(23, copyOfcopyOfKDISPERSION_DETALLE_1_0.codigorespuesta);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.respuestatencion == null) {
pstmtInsert_tDBOutput_16.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(24, copyOfcopyOfKDISPERSION_DETALLE_1_0.respuestatencion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.x == null) {
pstmtInsert_tDBOutput_16.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(25, copyOfcopyOfKDISPERSION_DETALLE_1_0.x);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.y == null) {
pstmtInsert_tDBOutput_16.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(26, copyOfcopyOfKDISPERSION_DETALLE_1_0.y);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Ano == null) {
pstmtInsert_tDBOutput_16.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(27, copyOfcopyOfKDISPERSION_DETALLE_1_0.Ano);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Mes == null) {
pstmtInsert_tDBOutput_16.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(28, copyOfcopyOfKDISPERSION_DETALLE_1_0.Mes);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Dia == null) {
pstmtInsert_tDBOutput_16.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(29, copyOfcopyOfKDISPERSION_DETALLE_1_0.Dia);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.desc_cna == null) {
pstmtInsert_tDBOutput_16.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(30, copyOfcopyOfKDISPERSION_DETALLE_1_0.desc_cna);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_16.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(31, copyOfcopyOfKDISPERSION_DETALLE_1_0.ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_16.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(32, copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.FRECUENCIA == null) {
pstmtInsert_tDBOutput_16.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(33, copyOfcopyOfKDISPERSION_DETALLE_1_0.FRECUENCIA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_16.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(34, copyOfcopyOfKDISPERSION_DETALLE_1_0.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_16.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(35, copyOfcopyOfKDISPERSION_DETALLE_1_0.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_16.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(36, copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTADO_CORTE);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_16.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(37, copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ROUTE_ID == null) {
pstmtInsert_tDBOutput_16.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(38, copyOfcopyOfKDISPERSION_DETALLE_1_0.ROUTE_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.NAME_ == null) {
pstmtInsert_tDBOutput_16.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(39, copyOfcopyOfKDISPERSION_DETALLE_1_0.NAME_);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.NUMBER_ID == null) {
pstmtInsert_tDBOutput_16.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(40, copyOfcopyOfKDISPERSION_DETALLE_1_0.NUMBER_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_16.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(41, copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_16.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(42, copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_16.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(43, copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_16.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(44, copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_16.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(45, copyOfcopyOfKDISPERSION_DETALLE_1_0.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_16.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(46, copyOfcopyOfKDISPERSION_DETALLE_1_0.CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_16.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(47, copyOfcopyOfKDISPERSION_DETALLE_1_0.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_16.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(48, copyOfcopyOfKDISPERSION_DETALLE_1_0.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_16.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(49, copyOfcopyOfKDISPERSION_DETALLE_1_0.TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.categoria == null) {
pstmtInsert_tDBOutput_16.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(50, copyOfcopyOfKDISPERSION_DETALLE_1_0.categoria);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTRATO == null) {
pstmtInsert_tDBOutput_16.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(51, copyOfcopyOfKDISPERSION_DETALLE_1_0.ESTRATO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_16.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(52, copyOfcopyOfKDISPERSION_DETALLE_1_0.DESC_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.orden_relacionada == null) {
pstmtInsert_tDBOutput_16.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(53, copyOfcopyOfKDISPERSION_DETALLE_1_0.orden_relacionada);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.order_activity_ID == null) {
pstmtInsert_tDBOutput_16.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(54, copyOfcopyOfKDISPERSION_DETALLE_1_0.order_activity_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.Adjunto == null) {
pstmtInsert_tDBOutput_16.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(55, copyOfcopyOfKDISPERSION_DETALLE_1_0.Adjunto);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_16.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(56, copyOfcopyOfKDISPERSION_DETALLE_1_0.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.K_DISPERSION == null) {
pstmtInsert_tDBOutput_16.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(57, copyOfcopyOfKDISPERSION_DETALLE_1_0.K_DISPERSION);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_16.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(58, copyOfcopyOfKDISPERSION_DETALLE_1_0.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_16.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(59, copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_UNITARIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_K == null) {
pstmtInsert_tDBOutput_16.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_16.setString(60, copyOfcopyOfKDISPERSION_DETALLE_1_0.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_16 = insertedCount_tDBOutput_16 + pstmtInsert_tDBOutput_16.executeUpdate();
                    nb_line_tDBOutput_16++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_16 = true;
                        nb_line_tDBOutput_16++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_16) {
            }
                commitCounter_tDBOutput_16++;

                if(commitEvery_tDBOutput_16 <= commitCounter_tDBOutput_16) {

                    conn_tDBOutput_16.commit();
                    commitCounter_tDBOutput_16=0;

                }


 


	tos_count_tDBOutput_16++;

/**
 * [tDBOutput_16 main ] stop
 */
	
	/**
	 * [tDBOutput_16 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_16";

	

 



/**
 * [tDBOutput_16 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_16";

	

 



/**
 * [tDBOutput_16 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfKDISPERSION_DETALLE_1_0"




	
	/**
	 * [tMap_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_16";

	

 



/**
 * [tMap_16 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_16 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_16";

	

 



/**
 * [tDBInput_16 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_16 end ] start
	 */

	

	
	
	currentComponent="tDBInput_16";

	

	}
}finally{
	if (rs_tDBInput_16 != null) {
		rs_tDBInput_16.close();
	}
	if (stmt_tDBInput_16 != null) {
		stmt_tDBInput_16.close();
	}
		if(conn_tDBInput_16 != null && !conn_tDBInput_16.isClosed()) {
			
			conn_tDBInput_16.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_16_NB_LINE",nb_line_tDBInput_16);
		


 

ok_Hash.put("tDBInput_16", true);
end_Hash.put("tDBInput_16", System.currentTimeMillis());




/**
 * [tDBInput_16 end ] stop
 */

	
	/**
	 * [tMap_16 end ] start
	 */

	

	
	
	currentComponent="tMap_16";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row24");
			  	}
			  	
 

ok_Hash.put("tMap_16", true);
end_Hash.put("tMap_16", System.currentTimeMillis());




/**
 * [tMap_16 end ] stop
 */

	
	/**
	 * [tDBOutput_16 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_16";

	



        if(pstmtUpdate_tDBOutput_16 != null){
            pstmtUpdate_tDBOutput_16.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_16");
        }
        if(pstmtInsert_tDBOutput_16 != null){
            pstmtInsert_tDBOutput_16.close();
            resourceMap.remove("pstmtInsert_tDBOutput_16");
        }
        if(pstmt_tDBOutput_16 != null) {
            pstmt_tDBOutput_16.close();
            resourceMap.remove("pstmt_tDBOutput_16");
        }
    resourceMap.put("statementClosed_tDBOutput_16", true);
    	if (commitCounter_tDBOutput_16 > 0) {
    		
    		conn_tDBOutput_16.commit();
    		
    	}
    		
		
    	conn_tDBOutput_16 .close();
    	
    	resourceMap.put("finish_tDBOutput_16", true);
    	

	nb_line_deleted_tDBOutput_16=nb_line_deleted_tDBOutput_16+ deletedCount_tDBOutput_16;
	nb_line_update_tDBOutput_16=nb_line_update_tDBOutput_16 + updatedCount_tDBOutput_16;
	nb_line_inserted_tDBOutput_16=nb_line_inserted_tDBOutput_16 + insertedCount_tDBOutput_16;
	nb_line_rejected_tDBOutput_16=nb_line_rejected_tDBOutput_16 + rejectedCount_tDBOutput_16;
	
        globalMap.put("tDBOutput_16_NB_LINE",nb_line_tDBOutput_16);
        globalMap.put("tDBOutput_16_NB_LINE_UPDATED",nb_line_update_tDBOutput_16);
        globalMap.put("tDBOutput_16_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_16);
        globalMap.put("tDBOutput_16_NB_LINE_DELETED",nb_line_deleted_tDBOutput_16);
        globalMap.put("tDBOutput_16_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_16);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfKDISPERSION_DETALLE_1_0");
			  	}
			  	
 

ok_Hash.put("tDBOutput_16", true);
end_Hash.put("tDBOutput_16", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk16", 0, "ok");
				}
				tDBInput_17Process(globalMap);



/**
 * [tDBOutput_16 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_16 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_16";

	

 



/**
 * [tDBInput_16 finally ] stop
 */

	
	/**
	 * [tMap_16 finally ] start
	 */

	

	
	
	currentComponent="tMap_16";

	

 



/**
 * [tMap_16 finally ] stop
 */

	
	/**
	 * [tDBOutput_16 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_16";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_16") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_16 = null;
                if ((pstmtUpdateToClose_tDBOutput_16 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_16")) != null) {
                    pstmtUpdateToClose_tDBOutput_16.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_16 = null;
                if ((pstmtInsertToClose_tDBOutput_16 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_16")) != null) {
                    pstmtInsertToClose_tDBOutput_16.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_16 = null;
                if ((pstmtToClose_tDBOutput_16 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_16")) != null) {
                    pstmtToClose_tDBOutput_16.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_16") == null){
            java.sql.Connection ctn_tDBOutput_16 = null;
            if((ctn_tDBOutput_16 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_16")) != null){
                try {
                    ctn_tDBOutput_16.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_16) {
                    String errorMessage_tDBOutput_16 = "failed to close the connection in tDBOutput_16 :" + sqlEx_tDBOutput_16.getMessage();
                    System.err.println(errorMessage_tDBOutput_16);
                }
            }
        }
    }
 



/**
 * [tDBOutput_16 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_16_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfcopyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfKDISPERSION_DETALLE_1Struct other = (copyOfcopyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row16Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_17_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row16Struct row16 = new row16Struct();
copyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfKDISPERSION_DETALLE_1 = new copyOfcopyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_17", false);
		start_Hash.put("tDBOutput_17", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_17";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_17 = 0;
		





        int updateKeyCount_tDBOutput_17 = 1;
        if(updateKeyCount_tDBOutput_17 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_17 = 0;
int nb_line_update_tDBOutput_17 = 0;
int nb_line_inserted_tDBOutput_17 = 0;
int nb_line_deleted_tDBOutput_17 = 0;
int nb_line_rejected_tDBOutput_17 = 0;

int deletedCount_tDBOutput_17=0;
int updatedCount_tDBOutput_17=0;
int insertedCount_tDBOutput_17=0;

int rejectedCount_tDBOutput_17=0;

String tableName_tDBOutput_17 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_17 = false;

java.util.Calendar calendar_tDBOutput_17 = java.util.Calendar.getInstance();
calendar_tDBOutput_17.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_17 = calendar_tDBOutput_17.getTime().getTime();
calendar_tDBOutput_17.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_17 = calendar_tDBOutput_17.getTime().getTime();
long date_tDBOutput_17;

java.sql.Connection conn_tDBOutput_17 = null;
		String dbProperties_tDBOutput_17 = "noDatetimeStringSync=true";
		String url_tDBOutput_17 = null;
		if(dbProperties_tDBOutput_17 == null || dbProperties_tDBOutput_17.trim().length() == 0) {
			url_tDBOutput_17 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_17 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_17.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_17 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_17 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_17;
		}
		String driverClass_tDBOutput_17 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_17 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_17 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:Fd6nhBe3ih6bu7xe03lyUyfOzwBpEYYKL970Crj93kP5dXbXP37reSU=");

		String dbPwd_tDBOutput_17 = decryptedPassword_tDBOutput_17;
		java.lang.Class.forName(driverClass_tDBOutput_17);
		
		conn_tDBOutput_17 = java.sql.DriverManager.getConnection(url_tDBOutput_17, dbUser_tDBOutput_17, dbPwd_tDBOutput_17);
		
	
	resourceMap.put("conn_tDBOutput_17", conn_tDBOutput_17);
        conn_tDBOutput_17.setAutoCommit(false);
        int commitEvery_tDBOutput_17 = 10000;
        int commitCounter_tDBOutput_17 = 0;

int count_tDBOutput_17=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_17 = conn_tDBOutput_17.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_17", pstmt_tDBOutput_17);
	    String insert_tDBOutput_17 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_17 = conn_tDBOutput_17.prepareStatement(insert_tDBOutput_17);
	    resourceMap.put("pstmtInsert_tDBOutput_17", pstmtInsert_tDBOutput_17);
	    String update_tDBOutput_17 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_17 = conn_tDBOutput_17.prepareStatement(update_tDBOutput_17);
	    resourceMap.put("pstmtUpdate_tDBOutput_17", pstmtUpdate_tDBOutput_17);
	    

 



/**
 * [tDBOutput_17 begin ] stop
 */



	
	/**
	 * [tMap_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_17", false);
		start_Hash.put("tMap_17", System.currentTimeMillis());
		
	
	currentComponent="tMap_17";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row16");
					}
				
		int tos_count_tMap_17 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_17__Struct  {
}
Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfKDISPERSION_DETALLE_1_tmp = new copyOfcopyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_17 begin ] stop
 */



	
	/**
	 * [tDBInput_17 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_17", false);
		start_Hash.put("tDBInput_17", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_17";

	
		int tos_count_tDBInput_17 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_17 = java.util.Calendar.getInstance();
		    calendar_tDBInput_17.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_17 = calendar_tDBInput_17.getTime();
		    int nb_line_tDBInput_17 = 0;
		    java.sql.Connection conn_tDBInput_17 = null;
				String driverClass_tDBInput_17 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_17 = java.lang.Class.forName(driverClass_tDBInput_17);
				String dbUser_tDBInput_17 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_17 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:r6iMfupMCUYansB/MXFQJ5wG2FXj1D4PTKRj0O1unRk6bukw/nc8e9I=");
				
				String dbPwd_tDBInput_17 = decryptedPassword_tDBInput_17;
				
				String url_tDBInput_17 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_17 = java.sql.DriverManager.getConnection(url_tDBInput_17,dbUser_tDBInput_17,dbPwd_tDBInput_17);
		        
		    
			java.sql.Statement stmt_tDBInput_17 = conn_tDBInput_17.createStatement();

		    String dbquery_tDBInput_17 = "select \na.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a.Orde"
+"n  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization  ,\n	"
+" a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  ,\n	 "
+"a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 a.x  "
+",\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FRECUENCI"
+"A ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_ID  ,"
+"\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CAUSANL"
+"_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a.TIPO_"
+"SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_ID  ,"
+"\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'LECT1'SIGLA_ACTIVIDAD\n,(SELECT distinct c.PRICE FROM acta"
+"_precios c where c.ITEMS_ID = '3602' AND c.MERCADO =  'MALAMBO' )VALOR_UNITARIO\n,((SELECT distinct c.PRICE FROM acta_pr"
+"ecios c where c.ITEMS_ID = '3602' AND c.MERCADO =  'MALAMBO'  )*1 ) VALOR_K\nfrom secuencias_acta1 a\nwhere \n a.region "
+"='8'\nand  a.id_secuencias_acta not in (SELECT id_secuencias_acta FROM secuencias_kdispersion )\nand a.FECHALEGALIZATION"
+" >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion)\nand a.FECHALEGALIZATION <= (select (CONCAT"
+"(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_17_QUERY",dbquery_tDBInput_17);
		    java.sql.ResultSet rs_tDBInput_17 = null;

		    try {
		    	rs_tDBInput_17 = stmt_tDBInput_17.executeQuery(dbquery_tDBInput_17);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_17 = rs_tDBInput_17.getMetaData();
		    	int colQtyInRs_tDBInput_17 = rsmd_tDBInput_17.getColumnCount();

		    String tmpContent_tDBInput_17 = null;
		    
		    
		    while (rs_tDBInput_17.next()) {
		        nb_line_tDBInput_17++;
		        
							if(colQtyInRs_tDBInput_17 < 1) {
								row16.FechaAsignacion = null;
							} else {
	                         		
        	row16.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_17, 1, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 2) {
								row16.Equipo_Trabajo = null;
							} else {
	                         		
        	row16.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_17, 2, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 3) {
								row16.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row16.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_17, 3, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 4) {
								row16.Tarea = null;
							} else {
	                         		
        	row16.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_17, 4, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 5) {
								row16.DescTarea = null;
							} else {
	                         		
        	row16.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_17, 5, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 6) {
								row16.Orden = null;
							} else {
	                         		
        	row16.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_17, 6, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 7) {
								row16.Ciclo = null;
							} else {
	                         		
        	row16.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_17, 7, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 8) {
								row16.servicio = null;
							} else {
	                         		
        	row16.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_17, 8, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 9) {
								row16.Estado = null;
							} else {
	                         		
        	row16.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_17, 9, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 10) {
								row16.Desc_estado = null;
							} else {
	                         		
        	row16.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_17, 10, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 11) {
								row16.FechaCREATED = null;
							} else {
	                         		
        	row16.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_17, 11, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 12) {
								row16.Fechalegalization = null;
							} else {
	                         		
        	row16.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_17, 12, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 13) {
								row16.Horalegalization = null;
							} else {
	                         		
        	row16.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_17, 13, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 14) {
								row16.Instalacion = null;
							} else {
	                         		
        	row16.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_17, 14, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 15) {
								row16.urbano_rural = null;
							} else {
	                         		
        	row16.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_17, 15, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 16) {
								row16.ortrinur = null;
							} else {
	                         		
        	row16.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_17, 16, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 17) {
								row16.descripciona = null;
							} else {
	                         		
        	row16.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_17, 17, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 18) {
								row16.Ciudad = null;
							} else {
	                         		
        	row16.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_17, 18, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 19) {
								row16.cmrudesc = null;
							} else {
	                         		
        	row16.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_17, 19, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 20) {
								row16.region = null;
							} else {
	                         		
        	row16.region = routines.system.JDBCUtil.getString(rs_tDBInput_17, 20, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 21) {
								row16.regndesc = null;
							} else {
	                         		
        	row16.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_17, 21, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 22) {
								row16.depacodi = null;
							} else {
	                         		
        	row16.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_17, 22, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 23) {
								row16.codigorespuesta = null;
							} else {
	                         		
        	row16.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_17, 23, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 24) {
								row16.respuestatencion = null;
							} else {
	                         		
        	row16.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_17, 24, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 25) {
								row16.x = null;
							} else {
	                         		
        	row16.x = routines.system.JDBCUtil.getString(rs_tDBInput_17, 25, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 26) {
								row16.y = null;
							} else {
	                         		
        	row16.y = routines.system.JDBCUtil.getString(rs_tDBInput_17, 26, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 27) {
								row16.Ano = null;
							} else {
	                         		
        	row16.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_17, 27, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 28) {
								row16.Mes = null;
							} else {
	                         		
        	row16.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_17, 28, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 29) {
								row16.Dia = null;
							} else {
	                         		
        	row16.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_17, 29, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 30) {
								row16.desc_cna = null;
							} else {
	                         		
        	row16.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_17, 30, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 31) {
								row16.ACTIVIDAD = null;
							} else {
	                         		
        	row16.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_17, 31, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 32) {
								row16.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row16.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_17, 32, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 33) {
								row16.FRECUENCIA = null;
							} else {
	                         		
        	row16.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_17, 33, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 34) {
								row16.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row16.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_17, 34, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 35) {
								row16.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row16.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_17, 35, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 36) {
								row16.ESTADO_CORTE = null;
							} else {
	                         		
        	row16.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_17, 36, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 37) {
								row16.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row16.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_17, 37, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 38) {
								row16.ROUTE_ID = null;
							} else {
	                         		
        	row16.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_17, 38, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 39) {
								row16.NAME_ = null;
							} else {
	                         		
        	row16.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_17, 39, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 40) {
								row16.NUMBER_ID = null;
							} else {
	                         		
        	row16.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_17, 40, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 41) {
								row16.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row16.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_17, 41, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 42) {
								row16.CAUSANL_OBS = null;
							} else {
	                         		
        	row16.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_17, 42, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 43) {
								row16.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row16.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_17, 43, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 44) {
								row16.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row16.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_17, 44, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 45) {
								row16.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row16.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_17, 45, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 46) {
								row16.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row16.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_17, 46, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 47) {
								row16.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row16.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_17, 47, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 48) {
								row16.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row16.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_17, 48, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 49) {
								row16.TIPO_SERVICIO = null;
							} else {
	                         		
        	row16.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_17, 49, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 50) {
								row16.categoria = null;
							} else {
	                         		
        	row16.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_17, 50, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 51) {
								row16.ESTRATO = null;
							} else {
	                         		
        	row16.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_17, 51, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 52) {
								row16.DESC_SERVICIO = null;
							} else {
	                         		
        	row16.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_17, 52, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 53) {
								row16.orden_relacionada = null;
							} else {
	                         		
        	row16.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_17, 53, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 54) {
								row16.order_activity_ID = null;
							} else {
	                         		
        	row16.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_17, 54, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 55) {
								row16.Adjunto = null;
							} else {
	                         		
        	row16.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_17, 55, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 56) {
								row16.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row16.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_17, 56, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 57) {
								row16.K_DISPERSION = null;
							} else {
	                         		
        	row16.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_17, 57, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 58) {
								row16.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row16.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_17, 58, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 59) {
								row16.VALOR_UNITARIO = null;
							} else {
	                         		
        	row16.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_17, 59, false);
		                    }
							if(colQtyInRs_tDBInput_17 < 60) {
								row16.VALOR_K = null;
							} else {
	                         		
        	row16.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_17, 60, false);
		                    }
					

 



/**
 * [tDBInput_17 begin ] stop
 */
	
	/**
	 * [tDBInput_17 main ] start
	 */

	

	
	
	currentComponent="tDBInput_17";

	

 


	tos_count_tDBInput_17++;

/**
 * [tDBInput_17 main ] stop
 */
	
	/**
	 * [tDBInput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_17";

	

 



/**
 * [tDBInput_17 process_data_begin ] stop
 */

	
	/**
	 * [tMap_17 main ] start
	 */

	

	
	
	currentComponent="tMap_17";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row16");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_17 = false;
		  boolean mainRowRejected_tMap_17 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_17__Struct Var = Var__tMap_17;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfcopyOfKDISPERSION_DETALLE_1'
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row16.FechaAsignacion;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row16.Equipo_Trabajo;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row16.UNIDAD_OPERATIVA;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Tarea = row16.Tarea;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row16.DescTarea;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Orden = row16.Orden;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row16.Ciclo;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.servicio = row16.servicio;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Estado = row16.Estado;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row16.Desc_estado;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row16.FechaCREATED;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row16.Fechalegalization;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row16.Horalegalization;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row16.Instalacion;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row16.urbano_rural;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row16.ortrinur;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.descripciona = row16.descripciona;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row16.Ciudad;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row16.cmrudesc;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.region = row16.region;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.regndesc = row16.regndesc;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.depacodi = row16.depacodi;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row16.codigorespuesta;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row16.respuestatencion;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.x = row16.x;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.y = row16.y;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ano = row16.Ano;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Mes = row16.Mes;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Dia = row16.Dia;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row16.desc_cna;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row16.ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row16.DESC_ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row16.FRECUENCIA;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row16.CUENTAS_VENCIDAS;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row16.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row16.ESTADO_CORTE;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row16.TIPO_ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row16.ROUTE_ID;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row16.NAME_;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row16.NUMBER_ID;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row16.CODIGO_CAUSANL_OBS;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row16.CAUSANL_OBS;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row16.CODIGO_CAUSANL_OBS2;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row16.CAUSANL_OBS2;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row16.CODIGO_CAUSANL_OBS3;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row16.CAUSANL_OBS3;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row16.SERVICIO_SUSCRITO;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row16.COD_TIPO_SERVICIO;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row16.TIPO_SERVICIO;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.categoria = row16.categoria;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row16.ESTRATO;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row16.DESC_SERVICIO;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row16.orden_relacionada;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row16.order_activity_ID;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row16.Adjunto;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row16.ID_SECUENCIAS_ACTA;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row16.K_DISPERSION;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row16.SIGLA_ACTIVIDAD;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row16.VALOR_UNITARIO;
copyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row16.VALOR_K;
copyOfcopyOfKDISPERSION_DETALLE_1 = copyOfcopyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_17 = false;










 


	tos_count_tMap_17++;

/**
 * [tMap_17 main ] stop
 */
	
	/**
	 * [tMap_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_17";

	

 



/**
 * [tMap_17 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfKDISPERSION_DETALLE_1"
if(copyOfcopyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_17 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_17";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_17 = false;
                    if(copyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_17.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_17.setString(1, copyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_17 = -1;
            try (java.sql.ResultSet rs_tDBOutput_17 = pstmt_tDBOutput_17.executeQuery()) {
                while(rs_tDBOutput_17.next()) {
                    checkCount_tDBOutput_17 = rs_tDBOutput_17.getInt(1);
                }
            }
            if(checkCount_tDBOutput_17 > 0) {
                        if(copyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_17.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(1, copyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_17.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(2, copyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_17.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(3, copyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_17.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(4, copyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_17.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(5, copyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_17.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(6, copyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_17.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(7, copyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_17.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(8, copyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_17.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(9, copyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_17.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(10, copyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_17.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(11, copyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_17.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(12, copyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_17.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(13, copyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_17.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(14, copyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_17.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(15, copyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_17.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(16, copyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_17.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(17, copyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_17.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(18, copyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_17.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(19, copyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_17.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(20, copyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_17.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(21, copyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_17.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(22, copyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_17.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(23, copyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_17.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(24, copyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_17.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(25, copyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_17.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(26, copyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_17.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(27, copyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_17.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(28, copyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_17.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(29, copyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_17.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(30, copyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_17.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(31, copyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_17.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(32, copyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_17.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(33, copyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_17.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(34, copyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_17.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(35, copyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_17.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(36, copyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_17.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(37, copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_17.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(38, copyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_17.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(39, copyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_17.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(40, copyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_17.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(41, copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_17.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(42, copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_17.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(43, copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_17.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(44, copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_17.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(45, copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_17.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(46, copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_17.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(47, copyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_17.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(48, copyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_17.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(49, copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_17.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(50, copyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_17.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(51, copyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_17.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(52, copyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_17.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(53, copyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_17.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(54, copyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_17.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(55, copyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_17.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(56, copyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_17.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(57, copyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_17.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(58, copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_17.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(59, copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_17.setNull(60 + count_tDBOutput_17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_17.setString(60 + count_tDBOutput_17, copyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_17 = updatedCount_tDBOutput_17 + pstmtUpdate_tDBOutput_17.executeUpdate();
                    nb_line_tDBOutput_17++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_17 = true;
                        nb_line_tDBOutput_17++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_17.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(1, copyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_17.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(2, copyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_17.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(3, copyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_17.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(4, copyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_17.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(5, copyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_17.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(6, copyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_17.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(7, copyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_17.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(8, copyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_17.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(9, copyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_17.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(10, copyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_17.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(11, copyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_17.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(12, copyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_17.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(13, copyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_17.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(14, copyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_17.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(15, copyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_17.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(16, copyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_17.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(17, copyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_17.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(18, copyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_17.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(19, copyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_17.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(20, copyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_17.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(21, copyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_17.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(22, copyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_17.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(23, copyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_17.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(24, copyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_17.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(25, copyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_17.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(26, copyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_17.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(27, copyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_17.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(28, copyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_17.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(29, copyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_17.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(30, copyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_17.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(31, copyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_17.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(32, copyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_17.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(33, copyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_17.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(34, copyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_17.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(35, copyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_17.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(36, copyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_17.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(37, copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_17.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(38, copyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_17.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(39, copyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_17.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(40, copyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_17.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(41, copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_17.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(42, copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_17.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(43, copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_17.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(44, copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_17.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(45, copyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_17.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(46, copyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_17.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(47, copyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_17.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(48, copyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_17.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(49, copyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_17.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(50, copyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_17.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(51, copyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_17.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(52, copyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_17.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(53, copyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_17.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(54, copyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_17.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(55, copyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_17.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(56, copyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_17.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(57, copyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_17.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(58, copyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_17.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(59, copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_17.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_17.setString(60, copyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_17 = insertedCount_tDBOutput_17 + pstmtInsert_tDBOutput_17.executeUpdate();
                    nb_line_tDBOutput_17++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_17 = true;
                        nb_line_tDBOutput_17++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_17) {
            }
                commitCounter_tDBOutput_17++;

                if(commitEvery_tDBOutput_17 <= commitCounter_tDBOutput_17) {

                    conn_tDBOutput_17.commit();
                    commitCounter_tDBOutput_17=0;

                }


 


	tos_count_tDBOutput_17++;

/**
 * [tDBOutput_17 main ] stop
 */
	
	/**
	 * [tDBOutput_17 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_17";

	

 



/**
 * [tDBOutput_17 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_17";

	

 



/**
 * [tDBOutput_17 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_17";

	

 



/**
 * [tMap_17 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_17 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_17";

	

 



/**
 * [tDBInput_17 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_17 end ] start
	 */

	

	
	
	currentComponent="tDBInput_17";

	

	}
}finally{
	if (rs_tDBInput_17 != null) {
		rs_tDBInput_17.close();
	}
	if (stmt_tDBInput_17 != null) {
		stmt_tDBInput_17.close();
	}
		if(conn_tDBInput_17 != null && !conn_tDBInput_17.isClosed()) {
			
			conn_tDBInput_17.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_17_NB_LINE",nb_line_tDBInput_17);
		


 

ok_Hash.put("tDBInput_17", true);
end_Hash.put("tDBInput_17", System.currentTimeMillis());




/**
 * [tDBInput_17 end ] stop
 */

	
	/**
	 * [tMap_17 end ] start
	 */

	

	
	
	currentComponent="tMap_17";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row16");
			  	}
			  	
 

ok_Hash.put("tMap_17", true);
end_Hash.put("tMap_17", System.currentTimeMillis());




/**
 * [tMap_17 end ] stop
 */

	
	/**
	 * [tDBOutput_17 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_17";

	



        if(pstmtUpdate_tDBOutput_17 != null){
            pstmtUpdate_tDBOutput_17.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_17");
        }
        if(pstmtInsert_tDBOutput_17 != null){
            pstmtInsert_tDBOutput_17.close();
            resourceMap.remove("pstmtInsert_tDBOutput_17");
        }
        if(pstmt_tDBOutput_17 != null) {
            pstmt_tDBOutput_17.close();
            resourceMap.remove("pstmt_tDBOutput_17");
        }
    resourceMap.put("statementClosed_tDBOutput_17", true);
    	if (commitCounter_tDBOutput_17 > 0) {
    		
    		conn_tDBOutput_17.commit();
    		
    	}
    		
		
    	conn_tDBOutput_17 .close();
    	
    	resourceMap.put("finish_tDBOutput_17", true);
    	

	nb_line_deleted_tDBOutput_17=nb_line_deleted_tDBOutput_17+ deletedCount_tDBOutput_17;
	nb_line_update_tDBOutput_17=nb_line_update_tDBOutput_17 + updatedCount_tDBOutput_17;
	nb_line_inserted_tDBOutput_17=nb_line_inserted_tDBOutput_17 + insertedCount_tDBOutput_17;
	nb_line_rejected_tDBOutput_17=nb_line_rejected_tDBOutput_17 + rejectedCount_tDBOutput_17;
	
        globalMap.put("tDBOutput_17_NB_LINE",nb_line_tDBOutput_17);
        globalMap.put("tDBOutput_17_NB_LINE_UPDATED",nb_line_update_tDBOutput_17);
        globalMap.put("tDBOutput_17_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_17);
        globalMap.put("tDBOutput_17_NB_LINE_DELETED",nb_line_deleted_tDBOutput_17);
        globalMap.put("tDBOutput_17_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_17);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_17", true);
end_Hash.put("tDBOutput_17", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk17", 0, "ok");
				}
				tDBInput_18Process(globalMap);



/**
 * [tDBOutput_17 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_17 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_17";

	

 



/**
 * [tDBInput_17 finally ] stop
 */

	
	/**
	 * [tMap_17 finally ] start
	 */

	

	
	
	currentComponent="tMap_17";

	

 



/**
 * [tMap_17 finally ] stop
 */

	
	/**
	 * [tDBOutput_17 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_17";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_17") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_17 = null;
                if ((pstmtUpdateToClose_tDBOutput_17 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_17")) != null) {
                    pstmtUpdateToClose_tDBOutput_17.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_17 = null;
                if ((pstmtInsertToClose_tDBOutput_17 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_17")) != null) {
                    pstmtInsertToClose_tDBOutput_17.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_17 = null;
                if ((pstmtToClose_tDBOutput_17 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_17")) != null) {
                    pstmtToClose_tDBOutput_17.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_17") == null){
            java.sql.Connection ctn_tDBOutput_17 = null;
            if((ctn_tDBOutput_17 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_17")) != null){
                try {
                    ctn_tDBOutput_17.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_17) {
                    String errorMessage_tDBOutput_17 = "failed to close the connection in tDBOutput_17 :" + sqlEx_tDBOutput_17.getMessage();
                    System.err.println(errorMessage_tDBOutput_17);
                }
            }
        }
    }
 



/**
 * [tDBOutput_17 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_17_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other = (copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row18Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_18_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row18Struct row18 = new row18Struct();
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = new copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_18", false);
		start_Hash.put("tDBOutput_18", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_18";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_18 = 0;
		





        int updateKeyCount_tDBOutput_18 = 1;
        if(updateKeyCount_tDBOutput_18 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_18 = 0;
int nb_line_update_tDBOutput_18 = 0;
int nb_line_inserted_tDBOutput_18 = 0;
int nb_line_deleted_tDBOutput_18 = 0;
int nb_line_rejected_tDBOutput_18 = 0;

int deletedCount_tDBOutput_18=0;
int updatedCount_tDBOutput_18=0;
int insertedCount_tDBOutput_18=0;

int rejectedCount_tDBOutput_18=0;

String tableName_tDBOutput_18 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_18 = false;

java.util.Calendar calendar_tDBOutput_18 = java.util.Calendar.getInstance();
calendar_tDBOutput_18.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_18 = calendar_tDBOutput_18.getTime().getTime();
calendar_tDBOutput_18.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_18 = calendar_tDBOutput_18.getTime().getTime();
long date_tDBOutput_18;

java.sql.Connection conn_tDBOutput_18 = null;
		String dbProperties_tDBOutput_18 = "noDatetimeStringSync=true";
		String url_tDBOutput_18 = null;
		if(dbProperties_tDBOutput_18 == null || dbProperties_tDBOutput_18.trim().length() == 0) {
			url_tDBOutput_18 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_18 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_18.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_18 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_18 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_18;
		}
		String driverClass_tDBOutput_18 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_18 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_18 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:BZE+wXzr4+vc2eBCYnEvivzA9DtdDmEWV2yVgZX3vkRDnAuXKGRUZC4=");

		String dbPwd_tDBOutput_18 = decryptedPassword_tDBOutput_18;
		java.lang.Class.forName(driverClass_tDBOutput_18);
		
		conn_tDBOutput_18 = java.sql.DriverManager.getConnection(url_tDBOutput_18, dbUser_tDBOutput_18, dbPwd_tDBOutput_18);
		
	
	resourceMap.put("conn_tDBOutput_18", conn_tDBOutput_18);
        conn_tDBOutput_18.setAutoCommit(false);
        int commitEvery_tDBOutput_18 = 10000;
        int commitCounter_tDBOutput_18 = 0;

int count_tDBOutput_18=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_18 = conn_tDBOutput_18.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_18", pstmt_tDBOutput_18);
	    String insert_tDBOutput_18 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_18 = conn_tDBOutput_18.prepareStatement(insert_tDBOutput_18);
	    resourceMap.put("pstmtInsert_tDBOutput_18", pstmtInsert_tDBOutput_18);
	    String update_tDBOutput_18 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_18 = conn_tDBOutput_18.prepareStatement(update_tDBOutput_18);
	    resourceMap.put("pstmtUpdate_tDBOutput_18", pstmtUpdate_tDBOutput_18);
	    

 



/**
 * [tDBOutput_18 begin ] stop
 */



	
	/**
	 * [tMap_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_18", false);
		start_Hash.put("tMap_18", System.currentTimeMillis());
		
	
	currentComponent="tMap_18";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row18");
					}
				
		int tos_count_tMap_18 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_18__Struct  {
}
Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp = new copyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_18 begin ] stop
 */



	
	/**
	 * [tDBInput_18 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_18", false);
		start_Hash.put("tDBInput_18", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_18";

	
		int tos_count_tDBInput_18 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_18 = java.util.Calendar.getInstance();
		    calendar_tDBInput_18.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_18 = calendar_tDBInput_18.getTime();
		    int nb_line_tDBInput_18 = 0;
		    java.sql.Connection conn_tDBInput_18 = null;
				String driverClass_tDBInput_18 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_18 = java.lang.Class.forName(driverClass_tDBInput_18);
				String dbUser_tDBInput_18 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_18 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:hm3t58dbrV5B39dGsFoqt247r21siE3GsFt0P9eTXQ1KGqb4pucbOdY=");
				
				String dbPwd_tDBInput_18 = decryptedPassword_tDBInput_18;
				
				String url_tDBInput_18 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_18 = java.sql.DriverManager.getConnection(url_tDBInput_18,dbUser_tDBInput_18,dbPwd_tDBInput_18);
		        
		    
			java.sql.Statement stmt_tDBInput_18 = conn_tDBInput_18.createStatement();

		    String dbquery_tDBInput_18 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'LECT1'SIGLA_ACTIVIDAD\n,(SELECT c.RURAL_PRICE FROM ac"
+"ta_precios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL'  )VALOR_UNITARIO\n,((SELECT c.RURAL_PRICE FROM acta_pr"
+"ecios c where c.ITEMS_ID = '3602' AND c.MERCADO = 'REGIONAL'  )*1) VALOR_K\nfrom secuencias_acta1 a\nwhere \n a.FRECUENC"
+"IA<>'3'\nAND a.region <> '8'\nAND a.ortrinur = 'R'\nand  a.id_secuencias_acta not in (SELECT id_secuencias_acta FROM sec"
+"uencias_kdispersion )\nand a.FECHALEGALIZATION >=  (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersi"
+"on)\nand a.FECHALEGALIZATION <=  (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_18_QUERY",dbquery_tDBInput_18);
		    java.sql.ResultSet rs_tDBInput_18 = null;

		    try {
		    	rs_tDBInput_18 = stmt_tDBInput_18.executeQuery(dbquery_tDBInput_18);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_18 = rs_tDBInput_18.getMetaData();
		    	int colQtyInRs_tDBInput_18 = rsmd_tDBInput_18.getColumnCount();

		    String tmpContent_tDBInput_18 = null;
		    
		    
		    while (rs_tDBInput_18.next()) {
		        nb_line_tDBInput_18++;
		        
							if(colQtyInRs_tDBInput_18 < 1) {
								row18.FechaAsignacion = null;
							} else {
	                         		
        	row18.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_18, 1, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 2) {
								row18.Equipo_Trabajo = null;
							} else {
	                         		
        	row18.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_18, 2, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 3) {
								row18.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row18.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_18, 3, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 4) {
								row18.Tarea = null;
							} else {
	                         		
        	row18.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_18, 4, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 5) {
								row18.DescTarea = null;
							} else {
	                         		
        	row18.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_18, 5, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 6) {
								row18.Orden = null;
							} else {
	                         		
        	row18.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_18, 6, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 7) {
								row18.Ciclo = null;
							} else {
	                         		
        	row18.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_18, 7, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 8) {
								row18.servicio = null;
							} else {
	                         		
        	row18.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_18, 8, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 9) {
								row18.Estado = null;
							} else {
	                         		
        	row18.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_18, 9, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 10) {
								row18.Desc_estado = null;
							} else {
	                         		
        	row18.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_18, 10, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 11) {
								row18.FechaCREATED = null;
							} else {
	                         		
        	row18.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_18, 11, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 12) {
								row18.Fechalegalization = null;
							} else {
	                         		
        	row18.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_18, 12, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 13) {
								row18.Horalegalization = null;
							} else {
	                         		
        	row18.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_18, 13, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 14) {
								row18.Instalacion = null;
							} else {
	                         		
        	row18.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_18, 14, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 15) {
								row18.urbano_rural = null;
							} else {
	                         		
        	row18.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_18, 15, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 16) {
								row18.ortrinur = null;
							} else {
	                         		
        	row18.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_18, 16, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 17) {
								row18.descripciona = null;
							} else {
	                         		
        	row18.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_18, 17, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 18) {
								row18.Ciudad = null;
							} else {
	                         		
        	row18.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_18, 18, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 19) {
								row18.cmrudesc = null;
							} else {
	                         		
        	row18.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_18, 19, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 20) {
								row18.region = null;
							} else {
	                         		
        	row18.region = routines.system.JDBCUtil.getString(rs_tDBInput_18, 20, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 21) {
								row18.regndesc = null;
							} else {
	                         		
        	row18.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_18, 21, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 22) {
								row18.depacodi = null;
							} else {
	                         		
        	row18.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_18, 22, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 23) {
								row18.codigorespuesta = null;
							} else {
	                         		
        	row18.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_18, 23, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 24) {
								row18.respuestatencion = null;
							} else {
	                         		
        	row18.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_18, 24, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 25) {
								row18.x = null;
							} else {
	                         		
        	row18.x = routines.system.JDBCUtil.getString(rs_tDBInput_18, 25, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 26) {
								row18.y = null;
							} else {
	                         		
        	row18.y = routines.system.JDBCUtil.getString(rs_tDBInput_18, 26, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 27) {
								row18.Ano = null;
							} else {
	                         		
        	row18.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_18, 27, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 28) {
								row18.Mes = null;
							} else {
	                         		
        	row18.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_18, 28, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 29) {
								row18.Dia = null;
							} else {
	                         		
        	row18.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_18, 29, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 30) {
								row18.desc_cna = null;
							} else {
	                         		
        	row18.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_18, 30, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 31) {
								row18.ACTIVIDAD = null;
							} else {
	                         		
        	row18.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_18, 31, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 32) {
								row18.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row18.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_18, 32, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 33) {
								row18.FRECUENCIA = null;
							} else {
	                         		
        	row18.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_18, 33, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 34) {
								row18.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row18.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_18, 34, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 35) {
								row18.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row18.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_18, 35, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 36) {
								row18.ESTADO_CORTE = null;
							} else {
	                         		
        	row18.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_18, 36, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 37) {
								row18.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row18.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_18, 37, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 38) {
								row18.ROUTE_ID = null;
							} else {
	                         		
        	row18.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_18, 38, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 39) {
								row18.NAME_ = null;
							} else {
	                         		
        	row18.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_18, 39, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 40) {
								row18.NUMBER_ID = null;
							} else {
	                         		
        	row18.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_18, 40, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 41) {
								row18.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row18.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_18, 41, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 42) {
								row18.CAUSANL_OBS = null;
							} else {
	                         		
        	row18.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_18, 42, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 43) {
								row18.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row18.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_18, 43, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 44) {
								row18.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row18.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_18, 44, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 45) {
								row18.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row18.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_18, 45, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 46) {
								row18.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row18.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_18, 46, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 47) {
								row18.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row18.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_18, 47, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 48) {
								row18.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row18.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_18, 48, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 49) {
								row18.TIPO_SERVICIO = null;
							} else {
	                         		
        	row18.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_18, 49, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 50) {
								row18.categoria = null;
							} else {
	                         		
        	row18.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_18, 50, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 51) {
								row18.ESTRATO = null;
							} else {
	                         		
        	row18.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_18, 51, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 52) {
								row18.DESC_SERVICIO = null;
							} else {
	                         		
        	row18.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_18, 52, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 53) {
								row18.orden_relacionada = null;
							} else {
	                         		
        	row18.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_18, 53, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 54) {
								row18.order_activity_ID = null;
							} else {
	                         		
        	row18.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_18, 54, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 55) {
								row18.Adjunto = null;
							} else {
	                         		
        	row18.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_18, 55, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 56) {
								row18.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row18.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_18, 56, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 57) {
								row18.K_DISPERSION = null;
							} else {
	                         		
        	row18.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_18, 57, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 58) {
								row18.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row18.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_18, 58, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 59) {
								row18.VALOR_UNITARIO = null;
							} else {
	                         		
        	row18.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_18, 59, false);
		                    }
							if(colQtyInRs_tDBInput_18 < 60) {
								row18.VALOR_K = null;
							} else {
	                         		
        	row18.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_18, 60, false);
		                    }
					

 



/**
 * [tDBInput_18 begin ] stop
 */
	
	/**
	 * [tDBInput_18 main ] start
	 */

	

	
	
	currentComponent="tDBInput_18";

	

 


	tos_count_tDBInput_18++;

/**
 * [tDBInput_18 main ] stop
 */
	
	/**
	 * [tDBInput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_18";

	

 



/**
 * [tDBInput_18 process_data_begin ] stop
 */

	
	/**
	 * [tMap_18 main ] start
	 */

	

	
	
	currentComponent="tMap_18";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row18");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_18 = false;
		  boolean mainRowRejected_tMap_18 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfcopyOfcopyOfKDISPERSION_DETALLE_1'
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row18.FechaAsignacion;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row18.Equipo_Trabajo;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row18.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Tarea = row18.Tarea;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row18.DescTarea;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Orden = row18.Orden;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row18.Ciclo;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.servicio = row18.servicio;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Estado = row18.Estado;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row18.Desc_estado;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row18.FechaCREATED;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row18.Fechalegalization;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row18.Horalegalization;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row18.Instalacion;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row18.urbano_rural;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row18.ortrinur;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.descripciona = row18.descripciona;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row18.Ciudad;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row18.cmrudesc;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.region = row18.region;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.regndesc = row18.regndesc;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.depacodi = row18.depacodi;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row18.codigorespuesta;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row18.respuestatencion;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.x = row18.x;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.y = row18.y;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ano = row18.Ano;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Mes = row18.Mes;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Dia = row18.Dia;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row18.desc_cna;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row18.ACTIVIDAD;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row18.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row18.FRECUENCIA;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row18.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row18.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row18.ESTADO_CORTE;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row18.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row18.ROUTE_ID;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row18.NAME_;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row18.NUMBER_ID;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row18.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row18.CAUSANL_OBS;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row18.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row18.CAUSANL_OBS2;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row18.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row18.CAUSANL_OBS3;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row18.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row18.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row18.TIPO_SERVICIO;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.categoria = row18.categoria;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row18.ESTRATO;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row18.DESC_SERVICIO;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row18.orden_relacionada;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row18.order_activity_ID;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row18.Adjunto;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row18.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row18.K_DISPERSION;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row18.SIGLA_ACTIVIDAD;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row18.VALOR_UNITARIO;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row18.VALOR_K;
copyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = copyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_18 = false;










 


	tos_count_tMap_18++;

/**
 * [tMap_18 main ] stop
 */
	
	/**
	 * [tMap_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_18";

	

 



/**
 * [tMap_18 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfKDISPERSION_DETALLE_1"
if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_18 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_18";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_18 = false;
                    if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_18.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_18.setString(1, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_18 = -1;
            try (java.sql.ResultSet rs_tDBOutput_18 = pstmt_tDBOutput_18.executeQuery()) {
                while(rs_tDBOutput_18.next()) {
                    checkCount_tDBOutput_18 = rs_tDBOutput_18.getInt(1);
                }
            }
            if(checkCount_tDBOutput_18 > 0) {
                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_18.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(1, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_18.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(2, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_18.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(3, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_18.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(4, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_18.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(5, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_18.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(6, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_18.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(7, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_18.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(8, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_18.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(9, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_18.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(10, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_18.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(11, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_18.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(12, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_18.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(13, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_18.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(14, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_18.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(15, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_18.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(16, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_18.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(17, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_18.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(18, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_18.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(19, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_18.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(20, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_18.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(21, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_18.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(22, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_18.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(23, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_18.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(24, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_18.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(25, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_18.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(26, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_18.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(27, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_18.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(28, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_18.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(29, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_18.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(30, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_18.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(31, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_18.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(32, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_18.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(33, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_18.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(34, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_18.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(35, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_18.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(36, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_18.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(37, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_18.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(38, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_18.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(39, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_18.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(40, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_18.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(41, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_18.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(42, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_18.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(43, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_18.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(44, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_18.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(45, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_18.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(46, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_18.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(47, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_18.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(48, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_18.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(49, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_18.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(50, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_18.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(51, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_18.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(52, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_18.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(53, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_18.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(54, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_18.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(55, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_18.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(56, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_18.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(57, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_18.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(58, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_18.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(59, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_18.setNull(60 + count_tDBOutput_18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_18.setString(60 + count_tDBOutput_18, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_18 = updatedCount_tDBOutput_18 + pstmtUpdate_tDBOutput_18.executeUpdate();
                    nb_line_tDBOutput_18++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_18 = true;
                        nb_line_tDBOutput_18++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_18.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(1, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_18.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(2, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_18.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(3, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_18.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(4, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_18.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(5, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_18.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(6, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_18.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(7, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_18.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(8, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_18.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(9, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_18.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(10, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_18.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(11, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_18.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(12, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_18.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(13, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_18.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(14, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_18.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(15, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_18.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(16, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_18.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(17, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_18.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(18, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_18.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(19, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_18.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(20, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_18.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(21, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_18.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(22, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_18.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(23, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_18.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(24, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_18.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(25, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_18.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(26, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_18.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(27, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_18.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(28, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_18.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(29, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_18.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(30, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_18.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(31, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_18.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(32, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_18.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(33, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_18.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(34, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_18.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(35, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_18.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(36, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_18.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(37, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_18.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(38, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_18.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(39, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_18.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(40, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_18.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(41, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_18.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(42, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_18.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(43, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_18.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(44, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_18.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(45, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_18.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(46, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_18.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(47, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_18.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(48, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_18.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(49, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_18.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(50, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_18.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(51, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_18.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(52, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_18.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(53, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_18.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(54, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_18.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(55, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_18.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(56, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_18.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(57, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_18.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(58, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_18.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(59, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_18.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_18.setString(60, copyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_18 = insertedCount_tDBOutput_18 + pstmtInsert_tDBOutput_18.executeUpdate();
                    nb_line_tDBOutput_18++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_18 = true;
                        nb_line_tDBOutput_18++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_18) {
            }
                commitCounter_tDBOutput_18++;

                if(commitEvery_tDBOutput_18 <= commitCounter_tDBOutput_18) {

                    conn_tDBOutput_18.commit();
                    commitCounter_tDBOutput_18=0;

                }


 


	tos_count_tDBOutput_18++;

/**
 * [tDBOutput_18 main ] stop
 */
	
	/**
	 * [tDBOutput_18 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_18";

	

 



/**
 * [tDBOutput_18 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_18";

	

 



/**
 * [tDBOutput_18 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_18";

	

 



/**
 * [tMap_18 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_18 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_18";

	

 



/**
 * [tDBInput_18 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_18 end ] start
	 */

	

	
	
	currentComponent="tDBInput_18";

	

	}
}finally{
	if (rs_tDBInput_18 != null) {
		rs_tDBInput_18.close();
	}
	if (stmt_tDBInput_18 != null) {
		stmt_tDBInput_18.close();
	}
		if(conn_tDBInput_18 != null && !conn_tDBInput_18.isClosed()) {
			
			conn_tDBInput_18.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_18_NB_LINE",nb_line_tDBInput_18);
		


 

ok_Hash.put("tDBInput_18", true);
end_Hash.put("tDBInput_18", System.currentTimeMillis());




/**
 * [tDBInput_18 end ] stop
 */

	
	/**
	 * [tMap_18 end ] start
	 */

	

	
	
	currentComponent="tMap_18";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row18");
			  	}
			  	
 

ok_Hash.put("tMap_18", true);
end_Hash.put("tMap_18", System.currentTimeMillis());




/**
 * [tMap_18 end ] stop
 */

	
	/**
	 * [tDBOutput_18 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_18";

	



        if(pstmtUpdate_tDBOutput_18 != null){
            pstmtUpdate_tDBOutput_18.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_18");
        }
        if(pstmtInsert_tDBOutput_18 != null){
            pstmtInsert_tDBOutput_18.close();
            resourceMap.remove("pstmtInsert_tDBOutput_18");
        }
        if(pstmt_tDBOutput_18 != null) {
            pstmt_tDBOutput_18.close();
            resourceMap.remove("pstmt_tDBOutput_18");
        }
    resourceMap.put("statementClosed_tDBOutput_18", true);
    	if (commitCounter_tDBOutput_18 > 0) {
    		
    		conn_tDBOutput_18.commit();
    		
    	}
    		
		
    	conn_tDBOutput_18 .close();
    	
    	resourceMap.put("finish_tDBOutput_18", true);
    	

	nb_line_deleted_tDBOutput_18=nb_line_deleted_tDBOutput_18+ deletedCount_tDBOutput_18;
	nb_line_update_tDBOutput_18=nb_line_update_tDBOutput_18 + updatedCount_tDBOutput_18;
	nb_line_inserted_tDBOutput_18=nb_line_inserted_tDBOutput_18 + insertedCount_tDBOutput_18;
	nb_line_rejected_tDBOutput_18=nb_line_rejected_tDBOutput_18 + rejectedCount_tDBOutput_18;
	
        globalMap.put("tDBOutput_18_NB_LINE",nb_line_tDBOutput_18);
        globalMap.put("tDBOutput_18_NB_LINE_UPDATED",nb_line_update_tDBOutput_18);
        globalMap.put("tDBOutput_18_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_18);
        globalMap.put("tDBOutput_18_NB_LINE_DELETED",nb_line_deleted_tDBOutput_18);
        globalMap.put("tDBOutput_18_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_18);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_18", true);
end_Hash.put("tDBOutput_18", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk18", 0, "ok");
				}
				tDBInput_19Process(globalMap);



/**
 * [tDBOutput_18 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_18 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_18";

	

 



/**
 * [tDBInput_18 finally ] stop
 */

	
	/**
	 * [tMap_18 finally ] start
	 */

	

	
	
	currentComponent="tMap_18";

	

 



/**
 * [tMap_18 finally ] stop
 */

	
	/**
	 * [tDBOutput_18 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_18";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_18") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_18 = null;
                if ((pstmtUpdateToClose_tDBOutput_18 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_18")) != null) {
                    pstmtUpdateToClose_tDBOutput_18.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_18 = null;
                if ((pstmtInsertToClose_tDBOutput_18 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_18")) != null) {
                    pstmtInsertToClose_tDBOutput_18.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_18 = null;
                if ((pstmtToClose_tDBOutput_18 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_18")) != null) {
                    pstmtToClose_tDBOutput_18.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_18") == null){
            java.sql.Connection ctn_tDBOutput_18 = null;
            if((ctn_tDBOutput_18 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_18")) != null){
                try {
                    ctn_tDBOutput_18.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_18) {
                    String errorMessage_tDBOutput_18 = "failed to close the connection in tDBOutput_18 :" + sqlEx_tDBOutput_18.getMessage();
                    System.err.println(errorMessage_tDBOutput_18);
                }
            }
        }
    }
 



/**
 * [tDBOutput_18 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_18_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other = (copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row19Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_19_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row19Struct row19 = new row19Struct();
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = new copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_19", false);
		start_Hash.put("tDBOutput_19", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_19";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_19 = 0;
		





        int updateKeyCount_tDBOutput_19 = 1;
        if(updateKeyCount_tDBOutput_19 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_19 = 0;
int nb_line_update_tDBOutput_19 = 0;
int nb_line_inserted_tDBOutput_19 = 0;
int nb_line_deleted_tDBOutput_19 = 0;
int nb_line_rejected_tDBOutput_19 = 0;

int deletedCount_tDBOutput_19=0;
int updatedCount_tDBOutput_19=0;
int insertedCount_tDBOutput_19=0;

int rejectedCount_tDBOutput_19=0;

String tableName_tDBOutput_19 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_19 = false;

java.util.Calendar calendar_tDBOutput_19 = java.util.Calendar.getInstance();
calendar_tDBOutput_19.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_19 = calendar_tDBOutput_19.getTime().getTime();
calendar_tDBOutput_19.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_19 = calendar_tDBOutput_19.getTime().getTime();
long date_tDBOutput_19;

java.sql.Connection conn_tDBOutput_19 = null;
		String dbProperties_tDBOutput_19 = "noDatetimeStringSync=true";
		String url_tDBOutput_19 = null;
		if(dbProperties_tDBOutput_19 == null || dbProperties_tDBOutput_19.trim().length() == 0) {
			url_tDBOutput_19 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_19 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_19.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_19 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_19 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_19;
		}
		String driverClass_tDBOutput_19 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_19 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_19 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:tGRCjKDOQjm4Aictk37M2bu3r4znIIWoOe5T2+EruTcluB4QFFSPXaQ=");

		String dbPwd_tDBOutput_19 = decryptedPassword_tDBOutput_19;
		java.lang.Class.forName(driverClass_tDBOutput_19);
		
		conn_tDBOutput_19 = java.sql.DriverManager.getConnection(url_tDBOutput_19, dbUser_tDBOutput_19, dbPwd_tDBOutput_19);
		
	
	resourceMap.put("conn_tDBOutput_19", conn_tDBOutput_19);
        conn_tDBOutput_19.setAutoCommit(false);
        int commitEvery_tDBOutput_19 = 10000;
        int commitCounter_tDBOutput_19 = 0;

int count_tDBOutput_19=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_19 = conn_tDBOutput_19.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_19", pstmt_tDBOutput_19);
	    String insert_tDBOutput_19 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_19 = conn_tDBOutput_19.prepareStatement(insert_tDBOutput_19);
	    resourceMap.put("pstmtInsert_tDBOutput_19", pstmtInsert_tDBOutput_19);
	    String update_tDBOutput_19 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_19 = conn_tDBOutput_19.prepareStatement(update_tDBOutput_19);
	    resourceMap.put("pstmtUpdate_tDBOutput_19", pstmtUpdate_tDBOutput_19);
	    

 



/**
 * [tDBOutput_19 begin ] stop
 */



	
	/**
	 * [tMap_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_19", false);
		start_Hash.put("tMap_19", System.currentTimeMillis());
		
	
	currentComponent="tMap_19";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row19");
					}
				
		int tos_count_tMap_19 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_19__Struct  {
}
Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp = new copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_19 begin ] stop
 */



	
	/**
	 * [tDBInput_19 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_19", false);
		start_Hash.put("tDBInput_19", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_19";

	
		int tos_count_tDBInput_19 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_19 = java.util.Calendar.getInstance();
		    calendar_tDBInput_19.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_19 = calendar_tDBInput_19.getTime();
		    int nb_line_tDBInput_19 = 0;
		    java.sql.Connection conn_tDBInput_19 = null;
				String driverClass_tDBInput_19 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_19 = java.lang.Class.forName(driverClass_tDBInput_19);
				String dbUser_tDBInput_19 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_19 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:+22yKEop3ap2VinDPzc2LualxtPyqNzSwx4+3ITwnb2RYpZHnfgNojI=");
				
				String dbPwd_tDBInput_19 = decryptedPassword_tDBInput_19;
				
				String url_tDBInput_19 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_19 = java.sql.DriverManager.getConnection(url_tDBInput_19,dbUser_tDBInput_19,dbPwd_tDBInput_19);
		        
		    
			java.sql.Statement stmt_tDBInput_19 = conn_tDBInput_19.createStatement();

		    String dbquery_tDBInput_19 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'RTEC3'SIGLA_ACTIVIDAD\n,(SELECT c.RURAL_PRICE FROM ac"
+"ta_precios c where c.ITEMS_ID = '3382' AND c.MERCADO = 'REGIONAL'  )VALOR_UNITARIO\n,((SELECT c.RURAL_PRICE FROM acta_pr"
+"ecios c where c.ITEMS_ID = '3382' AND c.MERCADO = 'REGIONAL' )*1) VALOR_K\n\nfrom secuencias_acta1 a\nwhere \n a.FRECUEN"
+"CIA ='3'\nAND a.region <> 8\nand a.codigo_causanl_obs  in(20,22,24,26,30,33,37)\nand a.codigo_causanl_obs2  in(72,93)\na"
+"nd a.FECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion)\nand a.FECHALEGALIZAT"
+"ION <= (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_19_QUERY",dbquery_tDBInput_19);
		    java.sql.ResultSet rs_tDBInput_19 = null;

		    try {
		    	rs_tDBInput_19 = stmt_tDBInput_19.executeQuery(dbquery_tDBInput_19);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_19 = rs_tDBInput_19.getMetaData();
		    	int colQtyInRs_tDBInput_19 = rsmd_tDBInput_19.getColumnCount();

		    String tmpContent_tDBInput_19 = null;
		    
		    
		    while (rs_tDBInput_19.next()) {
		        nb_line_tDBInput_19++;
		        
							if(colQtyInRs_tDBInput_19 < 1) {
								row19.FechaAsignacion = null;
							} else {
	                         		
        	row19.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_19, 1, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 2) {
								row19.Equipo_Trabajo = null;
							} else {
	                         		
        	row19.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_19, 2, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 3) {
								row19.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row19.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_19, 3, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 4) {
								row19.Tarea = null;
							} else {
	                         		
        	row19.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_19, 4, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 5) {
								row19.DescTarea = null;
							} else {
	                         		
        	row19.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_19, 5, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 6) {
								row19.Orden = null;
							} else {
	                         		
        	row19.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_19, 6, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 7) {
								row19.Ciclo = null;
							} else {
	                         		
        	row19.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_19, 7, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 8) {
								row19.servicio = null;
							} else {
	                         		
        	row19.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_19, 8, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 9) {
								row19.Estado = null;
							} else {
	                         		
        	row19.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_19, 9, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 10) {
								row19.Desc_estado = null;
							} else {
	                         		
        	row19.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_19, 10, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 11) {
								row19.FechaCREATED = null;
							} else {
	                         		
        	row19.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_19, 11, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 12) {
								row19.Fechalegalization = null;
							} else {
	                         		
        	row19.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_19, 12, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 13) {
								row19.Horalegalization = null;
							} else {
	                         		
        	row19.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_19, 13, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 14) {
								row19.Instalacion = null;
							} else {
	                         		
        	row19.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_19, 14, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 15) {
								row19.urbano_rural = null;
							} else {
	                         		
        	row19.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_19, 15, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 16) {
								row19.ortrinur = null;
							} else {
	                         		
        	row19.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_19, 16, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 17) {
								row19.descripciona = null;
							} else {
	                         		
        	row19.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_19, 17, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 18) {
								row19.Ciudad = null;
							} else {
	                         		
        	row19.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_19, 18, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 19) {
								row19.cmrudesc = null;
							} else {
	                         		
        	row19.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_19, 19, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 20) {
								row19.region = null;
							} else {
	                         		
        	row19.region = routines.system.JDBCUtil.getString(rs_tDBInput_19, 20, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 21) {
								row19.regndesc = null;
							} else {
	                         		
        	row19.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_19, 21, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 22) {
								row19.depacodi = null;
							} else {
	                         		
        	row19.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_19, 22, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 23) {
								row19.codigorespuesta = null;
							} else {
	                         		
        	row19.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_19, 23, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 24) {
								row19.respuestatencion = null;
							} else {
	                         		
        	row19.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_19, 24, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 25) {
								row19.x = null;
							} else {
	                         		
        	row19.x = routines.system.JDBCUtil.getString(rs_tDBInput_19, 25, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 26) {
								row19.y = null;
							} else {
	                         		
        	row19.y = routines.system.JDBCUtil.getString(rs_tDBInput_19, 26, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 27) {
								row19.Ano = null;
							} else {
	                         		
        	row19.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_19, 27, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 28) {
								row19.Mes = null;
							} else {
	                         		
        	row19.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_19, 28, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 29) {
								row19.Dia = null;
							} else {
	                         		
        	row19.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_19, 29, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 30) {
								row19.desc_cna = null;
							} else {
	                         		
        	row19.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_19, 30, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 31) {
								row19.ACTIVIDAD = null;
							} else {
	                         		
        	row19.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_19, 31, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 32) {
								row19.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row19.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_19, 32, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 33) {
								row19.FRECUENCIA = null;
							} else {
	                         		
        	row19.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_19, 33, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 34) {
								row19.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row19.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_19, 34, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 35) {
								row19.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row19.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_19, 35, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 36) {
								row19.ESTADO_CORTE = null;
							} else {
	                         		
        	row19.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_19, 36, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 37) {
								row19.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row19.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_19, 37, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 38) {
								row19.ROUTE_ID = null;
							} else {
	                         		
        	row19.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_19, 38, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 39) {
								row19.NAME_ = null;
							} else {
	                         		
        	row19.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_19, 39, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 40) {
								row19.NUMBER_ID = null;
							} else {
	                         		
        	row19.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_19, 40, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 41) {
								row19.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row19.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_19, 41, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 42) {
								row19.CAUSANL_OBS = null;
							} else {
	                         		
        	row19.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_19, 42, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 43) {
								row19.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row19.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_19, 43, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 44) {
								row19.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row19.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_19, 44, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 45) {
								row19.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row19.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_19, 45, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 46) {
								row19.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row19.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_19, 46, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 47) {
								row19.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row19.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_19, 47, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 48) {
								row19.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row19.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_19, 48, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 49) {
								row19.TIPO_SERVICIO = null;
							} else {
	                         		
        	row19.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_19, 49, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 50) {
								row19.categoria = null;
							} else {
	                         		
        	row19.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_19, 50, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 51) {
								row19.ESTRATO = null;
							} else {
	                         		
        	row19.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_19, 51, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 52) {
								row19.DESC_SERVICIO = null;
							} else {
	                         		
        	row19.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_19, 52, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 53) {
								row19.orden_relacionada = null;
							} else {
	                         		
        	row19.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_19, 53, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 54) {
								row19.order_activity_ID = null;
							} else {
	                         		
        	row19.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_19, 54, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 55) {
								row19.Adjunto = null;
							} else {
	                         		
        	row19.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_19, 55, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 56) {
								row19.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row19.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_19, 56, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 57) {
								row19.K_DISPERSION = null;
							} else {
	                         		
        	row19.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_19, 57, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 58) {
								row19.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row19.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_19, 58, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 59) {
								row19.VALOR_UNITARIO = null;
							} else {
	                         		
        	row19.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_19, 59, false);
		                    }
							if(colQtyInRs_tDBInput_19 < 60) {
								row19.VALOR_K = null;
							} else {
	                         		
        	row19.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_19, 60, false);
		                    }
					

 



/**
 * [tDBInput_19 begin ] stop
 */
	
	/**
	 * [tDBInput_19 main ] start
	 */

	

	
	
	currentComponent="tDBInput_19";

	

 


	tos_count_tDBInput_19++;

/**
 * [tDBInput_19 main ] stop
 */
	
	/**
	 * [tDBInput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_19";

	

 



/**
 * [tDBInput_19 process_data_begin ] stop
 */

	
	/**
	 * [tMap_19 main ] start
	 */

	

	
	
	currentComponent="tMap_19";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row19");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_19 = false;
		  boolean mainRowRejected_tMap_19 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_19__Struct Var = Var__tMap_19;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1'
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row19.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row19.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row19.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Tarea = row19.Tarea;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row19.DescTarea;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Orden = row19.Orden;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row19.Ciclo;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.servicio = row19.servicio;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Estado = row19.Estado;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row19.Desc_estado;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row19.FechaCREATED;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row19.Fechalegalization;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row19.Horalegalization;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row19.Instalacion;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row19.urbano_rural;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row19.ortrinur;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.descripciona = row19.descripciona;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row19.Ciudad;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row19.cmrudesc;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.region = row19.region;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.regndesc = row19.regndesc;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.depacodi = row19.depacodi;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row19.codigorespuesta;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row19.respuestatencion;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.x = row19.x;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.y = row19.y;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ano = row19.Ano;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Mes = row19.Mes;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Dia = row19.Dia;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row19.desc_cna;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row19.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row19.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row19.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row19.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row19.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row19.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row19.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row19.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row19.NAME_;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row19.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row19.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row19.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row19.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row19.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row19.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row19.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row19.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row19.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row19.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.categoria = row19.categoria;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row19.ESTRATO;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row19.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row19.orden_relacionada;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row19.order_activity_ID;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row19.Adjunto;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row19.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row19.K_DISPERSION;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row19.SIGLA_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row19.VALOR_UNITARIO;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row19.VALOR_K;
copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_19 = false;










 


	tos_count_tMap_19++;

/**
 * [tMap_19 main ] stop
 */
	
	/**
	 * [tMap_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_19";

	

 



/**
 * [tMap_19 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"
if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_19 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_19";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_19 = false;
                    if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_19.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_19.setString(1, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_19 = -1;
            try (java.sql.ResultSet rs_tDBOutput_19 = pstmt_tDBOutput_19.executeQuery()) {
                while(rs_tDBOutput_19.next()) {
                    checkCount_tDBOutput_19 = rs_tDBOutput_19.getInt(1);
                }
            }
            if(checkCount_tDBOutput_19 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_19.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(1, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_19.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(2, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_19.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(3, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_19.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(4, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_19.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(5, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_19.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(6, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_19.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(7, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_19.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(8, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_19.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(9, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_19.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(10, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_19.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(11, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_19.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(12, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_19.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(13, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_19.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(14, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_19.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(15, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_19.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(16, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_19.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(17, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_19.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(18, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_19.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(19, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_19.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(20, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_19.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(21, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_19.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(22, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_19.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(23, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_19.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(24, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_19.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(25, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_19.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(26, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_19.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(27, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_19.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(28, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_19.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(29, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_19.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(30, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_19.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(31, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_19.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(32, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_19.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(33, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_19.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(34, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_19.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(35, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_19.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(36, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_19.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(37, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_19.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(38, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_19.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(39, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_19.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(40, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_19.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(41, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_19.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(42, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_19.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(43, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_19.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(44, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_19.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(45, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_19.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(46, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_19.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(47, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_19.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(48, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_19.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(49, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_19.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(50, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_19.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(51, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_19.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(52, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_19.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(53, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_19.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(54, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_19.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(55, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_19.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(56, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_19.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(57, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_19.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(58, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_19.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(59, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_19.setNull(60 + count_tDBOutput_19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_19.setString(60 + count_tDBOutput_19, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_19 = updatedCount_tDBOutput_19 + pstmtUpdate_tDBOutput_19.executeUpdate();
                    nb_line_tDBOutput_19++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_19 = true;
                        nb_line_tDBOutput_19++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_19.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(1, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_19.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(2, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_19.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(3, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_19.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(4, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_19.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(5, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_19.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(6, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_19.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(7, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_19.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(8, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_19.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(9, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_19.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(10, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_19.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(11, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_19.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(12, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_19.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(13, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_19.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(14, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_19.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(15, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_19.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(16, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_19.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(17, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_19.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(18, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_19.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(19, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_19.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(20, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_19.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(21, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_19.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(22, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_19.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(23, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_19.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(24, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_19.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(25, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_19.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(26, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_19.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(27, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_19.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(28, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_19.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(29, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_19.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(30, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_19.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(31, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_19.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(32, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_19.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(33, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_19.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(34, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_19.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(35, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_19.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(36, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_19.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(37, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_19.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(38, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_19.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(39, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_19.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(40, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_19.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(41, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_19.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(42, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_19.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(43, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_19.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(44, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_19.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(45, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_19.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(46, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_19.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(47, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_19.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(48, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_19.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(49, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_19.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(50, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_19.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(51, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_19.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(52, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_19.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(53, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_19.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(54, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_19.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(55, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_19.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(56, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_19.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(57, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_19.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(58, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_19.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(59, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_19.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_19.setString(60, copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_19 = insertedCount_tDBOutput_19 + pstmtInsert_tDBOutput_19.executeUpdate();
                    nb_line_tDBOutput_19++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_19 = true;
                        nb_line_tDBOutput_19++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_19) {
            }
                commitCounter_tDBOutput_19++;

                if(commitEvery_tDBOutput_19 <= commitCounter_tDBOutput_19) {

                    conn_tDBOutput_19.commit();
                    commitCounter_tDBOutput_19=0;

                }


 


	tos_count_tDBOutput_19++;

/**
 * [tDBOutput_19 main ] stop
 */
	
	/**
	 * [tDBOutput_19 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_19";

	

 



/**
 * [tDBOutput_19 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_19";

	

 



/**
 * [tDBOutput_19 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_19";

	

 



/**
 * [tMap_19 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_19 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_19";

	

 



/**
 * [tDBInput_19 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_19 end ] start
	 */

	

	
	
	currentComponent="tDBInput_19";

	

	}
}finally{
	if (rs_tDBInput_19 != null) {
		rs_tDBInput_19.close();
	}
	if (stmt_tDBInput_19 != null) {
		stmt_tDBInput_19.close();
	}
		if(conn_tDBInput_19 != null && !conn_tDBInput_19.isClosed()) {
			
			conn_tDBInput_19.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_19_NB_LINE",nb_line_tDBInput_19);
		


 

ok_Hash.put("tDBInput_19", true);
end_Hash.put("tDBInput_19", System.currentTimeMillis());




/**
 * [tDBInput_19 end ] stop
 */

	
	/**
	 * [tMap_19 end ] start
	 */

	

	
	
	currentComponent="tMap_19";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row19");
			  	}
			  	
 

ok_Hash.put("tMap_19", true);
end_Hash.put("tMap_19", System.currentTimeMillis());




/**
 * [tMap_19 end ] stop
 */

	
	/**
	 * [tDBOutput_19 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_19";

	



        if(pstmtUpdate_tDBOutput_19 != null){
            pstmtUpdate_tDBOutput_19.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_19");
        }
        if(pstmtInsert_tDBOutput_19 != null){
            pstmtInsert_tDBOutput_19.close();
            resourceMap.remove("pstmtInsert_tDBOutput_19");
        }
        if(pstmt_tDBOutput_19 != null) {
            pstmt_tDBOutput_19.close();
            resourceMap.remove("pstmt_tDBOutput_19");
        }
    resourceMap.put("statementClosed_tDBOutput_19", true);
    	if (commitCounter_tDBOutput_19 > 0) {
    		
    		conn_tDBOutput_19.commit();
    		
    	}
    		
		
    	conn_tDBOutput_19 .close();
    	
    	resourceMap.put("finish_tDBOutput_19", true);
    	

	nb_line_deleted_tDBOutput_19=nb_line_deleted_tDBOutput_19+ deletedCount_tDBOutput_19;
	nb_line_update_tDBOutput_19=nb_line_update_tDBOutput_19 + updatedCount_tDBOutput_19;
	nb_line_inserted_tDBOutput_19=nb_line_inserted_tDBOutput_19 + insertedCount_tDBOutput_19;
	nb_line_rejected_tDBOutput_19=nb_line_rejected_tDBOutput_19 + rejectedCount_tDBOutput_19;
	
        globalMap.put("tDBOutput_19_NB_LINE",nb_line_tDBOutput_19);
        globalMap.put("tDBOutput_19_NB_LINE_UPDATED",nb_line_update_tDBOutput_19);
        globalMap.put("tDBOutput_19_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_19);
        globalMap.put("tDBOutput_19_NB_LINE_DELETED",nb_line_deleted_tDBOutput_19);
        globalMap.put("tDBOutput_19_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_19);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_19", true);
end_Hash.put("tDBOutput_19", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk19", 0, "ok");
				}
				tDBInput_21Process(globalMap);



/**
 * [tDBOutput_19 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_19 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_19";

	

 



/**
 * [tDBInput_19 finally ] stop
 */

	
	/**
	 * [tMap_19 finally ] start
	 */

	

	
	
	currentComponent="tMap_19";

	

 



/**
 * [tMap_19 finally ] stop
 */

	
	/**
	 * [tDBOutput_19 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_19";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_19") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_19 = null;
                if ((pstmtUpdateToClose_tDBOutput_19 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_19")) != null) {
                    pstmtUpdateToClose_tDBOutput_19.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_19 = null;
                if ((pstmtInsertToClose_tDBOutput_19 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_19")) != null) {
                    pstmtInsertToClose_tDBOutput_19.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_19 = null;
                if ((pstmtToClose_tDBOutput_19 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_19")) != null) {
                    pstmtToClose_tDBOutput_19.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_19") == null){
            java.sql.Connection ctn_tDBOutput_19 = null;
            if((ctn_tDBOutput_19 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_19")) != null){
                try {
                    ctn_tDBOutput_19.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_19) {
                    String errorMessage_tDBOutput_19 = "failed to close the connection in tDBOutput_19 :" + sqlEx_tDBOutput_19.getMessage();
                    System.err.println(errorMessage_tDBOutput_19);
                }
            }
        }
    }
 



/**
 * [tDBOutput_19 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_19_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row17Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_21_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row17Struct row17 = new row17Struct();
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = new copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_21", false);
		start_Hash.put("tDBOutput_21", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_21";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_21 = 0;
		





        int updateKeyCount_tDBOutput_21 = 1;
        if(updateKeyCount_tDBOutput_21 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_21 = 0;
int nb_line_update_tDBOutput_21 = 0;
int nb_line_inserted_tDBOutput_21 = 0;
int nb_line_deleted_tDBOutput_21 = 0;
int nb_line_rejected_tDBOutput_21 = 0;

int deletedCount_tDBOutput_21=0;
int updatedCount_tDBOutput_21=0;
int insertedCount_tDBOutput_21=0;

int rejectedCount_tDBOutput_21=0;

String tableName_tDBOutput_21 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_21 = false;

java.util.Calendar calendar_tDBOutput_21 = java.util.Calendar.getInstance();
calendar_tDBOutput_21.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_21 = calendar_tDBOutput_21.getTime().getTime();
calendar_tDBOutput_21.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_21 = calendar_tDBOutput_21.getTime().getTime();
long date_tDBOutput_21;

java.sql.Connection conn_tDBOutput_21 = null;
		String dbProperties_tDBOutput_21 = "noDatetimeStringSync=true";
		String url_tDBOutput_21 = null;
		if(dbProperties_tDBOutput_21 == null || dbProperties_tDBOutput_21.trim().length() == 0) {
			url_tDBOutput_21 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_21 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_21.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_21 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_21 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_21;
		}
		String driverClass_tDBOutput_21 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_21 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_21 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:Ok5fNWDiK69IAKjKaMvbL9PsDiMT9lWwjRJNPegZCyg3+TCVG6yQmog=");

		String dbPwd_tDBOutput_21 = decryptedPassword_tDBOutput_21;
		java.lang.Class.forName(driverClass_tDBOutput_21);
		
		conn_tDBOutput_21 = java.sql.DriverManager.getConnection(url_tDBOutput_21, dbUser_tDBOutput_21, dbPwd_tDBOutput_21);
		
	
	resourceMap.put("conn_tDBOutput_21", conn_tDBOutput_21);
        conn_tDBOutput_21.setAutoCommit(false);
        int commitEvery_tDBOutput_21 = 10000;
        int commitCounter_tDBOutput_21 = 0;

int count_tDBOutput_21=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_21 = conn_tDBOutput_21.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_21", pstmt_tDBOutput_21);
	    String insert_tDBOutput_21 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_21 = conn_tDBOutput_21.prepareStatement(insert_tDBOutput_21);
	    resourceMap.put("pstmtInsert_tDBOutput_21", pstmtInsert_tDBOutput_21);
	    String update_tDBOutput_21 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_21 = conn_tDBOutput_21.prepareStatement(update_tDBOutput_21);
	    resourceMap.put("pstmtUpdate_tDBOutput_21", pstmtUpdate_tDBOutput_21);
	    

 



/**
 * [tDBOutput_21 begin ] stop
 */



	
	/**
	 * [tMap_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_21", false);
		start_Hash.put("tMap_21", System.currentTimeMillis());
		
	
	currentComponent="tMap_21";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row17");
					}
				
		int tos_count_tMap_21 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_21__Struct  {
}
Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_21 begin ] stop
 */



	
	/**
	 * [tDBInput_21 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_21", false);
		start_Hash.put("tDBInput_21", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_21";

	
		int tos_count_tDBInput_21 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_21 = java.util.Calendar.getInstance();
		    calendar_tDBInput_21.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_21 = calendar_tDBInput_21.getTime();
		    int nb_line_tDBInput_21 = 0;
		    java.sql.Connection conn_tDBInput_21 = null;
				String driverClass_tDBInput_21 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_21 = java.lang.Class.forName(driverClass_tDBInput_21);
				String dbUser_tDBInput_21 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_21 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:dLs6z4TNC9ywGzzwx09Iv54EdlnEb2/uTZ6/Ci+U2MhbHPWjmmL/gxw=");
				
				String dbPwd_tDBInput_21 = decryptedPassword_tDBInput_21;
				
				String url_tDBInput_21 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_21 = java.sql.DriverManager.getConnection(url_tDBInput_21,dbUser_tDBInput_21,dbPwd_tDBInput_21);
		        
		    
			java.sql.Statement stmt_tDBInput_21 = conn_tDBInput_21.createStatement();

		    String dbquery_tDBInput_21 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'RTEC1'SIGLA_ACTIVIDAD\n,(SELECT c.RURAL_PRICE FROM ac"
+"ta_precios c where c.ITEMS_ID = '3382' AND c.MERCADO = 'REGIONAL'  )VALOR_UNITARIO\n,((SELECT c.RURAL_PRICE FROM acta_pr"
+"ecios c where c.ITEMS_ID = '3382' AND c.MERCADO = 'REGIONAL' )*1) VALOR_K\n\nfrom secuencias_acta1 a\nwhere \n a.FRECUEN"
+"CIA <>'3'\nAND a.region <> 8\nAND a.ortrinur = 'R'\nand a.codigo_causanl_obs  in(20,22,24,26,30,33,37)\nand a.codigo_cau"
+"sanl_obs2  in(72,93)\nand a.FECHALEGALIZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion"
+")\nand a.FECHALEGALIZATION <= (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_21_QUERY",dbquery_tDBInput_21);
		    java.sql.ResultSet rs_tDBInput_21 = null;

		    try {
		    	rs_tDBInput_21 = stmt_tDBInput_21.executeQuery(dbquery_tDBInput_21);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_21 = rs_tDBInput_21.getMetaData();
		    	int colQtyInRs_tDBInput_21 = rsmd_tDBInput_21.getColumnCount();

		    String tmpContent_tDBInput_21 = null;
		    
		    
		    while (rs_tDBInput_21.next()) {
		        nb_line_tDBInput_21++;
		        
							if(colQtyInRs_tDBInput_21 < 1) {
								row17.FechaAsignacion = null;
							} else {
	                         		
        	row17.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_21, 1, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 2) {
								row17.Equipo_Trabajo = null;
							} else {
	                         		
        	row17.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_21, 2, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 3) {
								row17.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row17.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_21, 3, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 4) {
								row17.Tarea = null;
							} else {
	                         		
        	row17.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_21, 4, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 5) {
								row17.DescTarea = null;
							} else {
	                         		
        	row17.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_21, 5, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 6) {
								row17.Orden = null;
							} else {
	                         		
        	row17.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_21, 6, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 7) {
								row17.Ciclo = null;
							} else {
	                         		
        	row17.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_21, 7, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 8) {
								row17.servicio = null;
							} else {
	                         		
        	row17.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_21, 8, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 9) {
								row17.Estado = null;
							} else {
	                         		
        	row17.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_21, 9, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 10) {
								row17.Desc_estado = null;
							} else {
	                         		
        	row17.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_21, 10, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 11) {
								row17.FechaCREATED = null;
							} else {
	                         		
        	row17.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_21, 11, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 12) {
								row17.Fechalegalization = null;
							} else {
	                         		
        	row17.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_21, 12, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 13) {
								row17.Horalegalization = null;
							} else {
	                         		
        	row17.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_21, 13, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 14) {
								row17.Instalacion = null;
							} else {
	                         		
        	row17.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_21, 14, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 15) {
								row17.urbano_rural = null;
							} else {
	                         		
        	row17.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_21, 15, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 16) {
								row17.ortrinur = null;
							} else {
	                         		
        	row17.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_21, 16, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 17) {
								row17.descripciona = null;
							} else {
	                         		
        	row17.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_21, 17, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 18) {
								row17.Ciudad = null;
							} else {
	                         		
        	row17.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_21, 18, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 19) {
								row17.cmrudesc = null;
							} else {
	                         		
        	row17.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_21, 19, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 20) {
								row17.region = null;
							} else {
	                         		
        	row17.region = routines.system.JDBCUtil.getString(rs_tDBInput_21, 20, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 21) {
								row17.regndesc = null;
							} else {
	                         		
        	row17.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_21, 21, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 22) {
								row17.depacodi = null;
							} else {
	                         		
        	row17.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_21, 22, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 23) {
								row17.codigorespuesta = null;
							} else {
	                         		
        	row17.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_21, 23, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 24) {
								row17.respuestatencion = null;
							} else {
	                         		
        	row17.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_21, 24, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 25) {
								row17.x = null;
							} else {
	                         		
        	row17.x = routines.system.JDBCUtil.getString(rs_tDBInput_21, 25, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 26) {
								row17.y = null;
							} else {
	                         		
        	row17.y = routines.system.JDBCUtil.getString(rs_tDBInput_21, 26, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 27) {
								row17.Ano = null;
							} else {
	                         		
        	row17.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_21, 27, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 28) {
								row17.Mes = null;
							} else {
	                         		
        	row17.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_21, 28, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 29) {
								row17.Dia = null;
							} else {
	                         		
        	row17.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_21, 29, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 30) {
								row17.desc_cna = null;
							} else {
	                         		
        	row17.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_21, 30, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 31) {
								row17.ACTIVIDAD = null;
							} else {
	                         		
        	row17.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_21, 31, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 32) {
								row17.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row17.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_21, 32, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 33) {
								row17.FRECUENCIA = null;
							} else {
	                         		
        	row17.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_21, 33, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 34) {
								row17.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row17.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_21, 34, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 35) {
								row17.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row17.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_21, 35, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 36) {
								row17.ESTADO_CORTE = null;
							} else {
	                         		
        	row17.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_21, 36, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 37) {
								row17.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row17.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_21, 37, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 38) {
								row17.ROUTE_ID = null;
							} else {
	                         		
        	row17.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_21, 38, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 39) {
								row17.NAME_ = null;
							} else {
	                         		
        	row17.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_21, 39, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 40) {
								row17.NUMBER_ID = null;
							} else {
	                         		
        	row17.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_21, 40, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 41) {
								row17.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row17.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_21, 41, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 42) {
								row17.CAUSANL_OBS = null;
							} else {
	                         		
        	row17.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_21, 42, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 43) {
								row17.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row17.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_21, 43, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 44) {
								row17.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row17.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_21, 44, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 45) {
								row17.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row17.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_21, 45, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 46) {
								row17.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row17.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_21, 46, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 47) {
								row17.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row17.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_21, 47, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 48) {
								row17.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row17.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_21, 48, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 49) {
								row17.TIPO_SERVICIO = null;
							} else {
	                         		
        	row17.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_21, 49, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 50) {
								row17.categoria = null;
							} else {
	                         		
        	row17.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_21, 50, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 51) {
								row17.ESTRATO = null;
							} else {
	                         		
        	row17.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_21, 51, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 52) {
								row17.DESC_SERVICIO = null;
							} else {
	                         		
        	row17.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_21, 52, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 53) {
								row17.orden_relacionada = null;
							} else {
	                         		
        	row17.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_21, 53, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 54) {
								row17.order_activity_ID = null;
							} else {
	                         		
        	row17.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_21, 54, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 55) {
								row17.Adjunto = null;
							} else {
	                         		
        	row17.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_21, 55, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 56) {
								row17.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row17.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_21, 56, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 57) {
								row17.K_DISPERSION = null;
							} else {
	                         		
        	row17.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_21, 57, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 58) {
								row17.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row17.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_21, 58, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 59) {
								row17.VALOR_UNITARIO = null;
							} else {
	                         		
        	row17.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_21, 59, false);
		                    }
							if(colQtyInRs_tDBInput_21 < 60) {
								row17.VALOR_K = null;
							} else {
	                         		
        	row17.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_21, 60, false);
		                    }
					

 



/**
 * [tDBInput_21 begin ] stop
 */
	
	/**
	 * [tDBInput_21 main ] start
	 */

	

	
	
	currentComponent="tDBInput_21";

	

 


	tos_count_tDBInput_21++;

/**
 * [tDBInput_21 main ] stop
 */
	
	/**
	 * [tDBInput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_21";

	

 



/**
 * [tDBInput_21 process_data_begin ] stop
 */

	
	/**
	 * [tMap_21 main ] start
	 */

	

	
	
	currentComponent="tMap_21";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row17");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_21 = false;
		  boolean mainRowRejected_tMap_21 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1'
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row17.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row17.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row17.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Tarea = row17.Tarea;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row17.DescTarea;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Orden = row17.Orden;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row17.Ciclo;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.servicio = row17.servicio;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Estado = row17.Estado;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row17.Desc_estado;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row17.FechaCREATED;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row17.Fechalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row17.Horalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row17.Instalacion;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row17.urbano_rural;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row17.ortrinur;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.descripciona = row17.descripciona;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row17.Ciudad;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row17.cmrudesc;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.region = row17.region;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.regndesc = row17.regndesc;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.depacodi = row17.depacodi;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row17.codigorespuesta;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row17.respuestatencion;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.x = row17.x;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.y = row17.y;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ano = row17.Ano;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Mes = row17.Mes;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Dia = row17.Dia;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row17.desc_cna;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row17.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row17.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row17.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row17.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row17.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row17.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row17.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row17.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row17.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row17.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row17.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row17.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row17.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row17.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row17.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row17.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row17.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row17.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row17.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.categoria = row17.categoria;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row17.ESTRATO;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row17.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row17.orden_relacionada;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row17.order_activity_ID;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row17.Adjunto;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row17.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row17.K_DISPERSION;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row17.SIGLA_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row17.VALOR_UNITARIO;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row17.VALOR_K;
copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_21 = false;










 


	tos_count_tMap_21++;

/**
 * [tMap_21 main ] stop
 */
	
	/**
	 * [tMap_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_21";

	

 



/**
 * [tMap_21 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"
if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_21 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_21";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_21 = false;
                    if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_21.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_21.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_21 = -1;
            try (java.sql.ResultSet rs_tDBOutput_21 = pstmt_tDBOutput_21.executeQuery()) {
                while(rs_tDBOutput_21.next()) {
                    checkCount_tDBOutput_21 = rs_tDBOutput_21.getInt(1);
                }
            }
            if(checkCount_tDBOutput_21 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_21.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_21.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_21.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_21.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_21.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_21.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_21.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_21.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_21.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_21.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_21.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_21.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_21.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_21.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_21.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_21.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_21.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_21.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_21.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_21.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_21.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_21.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_21.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_21.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_21.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_21.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_21.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_21.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_21.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_21.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_21.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_21.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_21.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_21.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_21.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_21.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_21.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_21.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_21.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_21.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_21.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_21.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_21.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_21.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_21.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_21.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_21.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_21.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_21.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_21.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_21.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_21.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_21.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_21.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_21.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_21.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_21.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_21.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_21.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_21.setNull(60 + count_tDBOutput_21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_21.setString(60 + count_tDBOutput_21, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_21 = updatedCount_tDBOutput_21 + pstmtUpdate_tDBOutput_21.executeUpdate();
                    nb_line_tDBOutput_21++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_21 = true;
                        nb_line_tDBOutput_21++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_21.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_21.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_21.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_21.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_21.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_21.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_21.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_21.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_21.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_21.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_21.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_21.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_21.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_21.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_21.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_21.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_21.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_21.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_21.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_21.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_21.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_21.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_21.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_21.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_21.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_21.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_21.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_21.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_21.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_21.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_21.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_21.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_21.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_21.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_21.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_21.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_21.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_21.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_21.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_21.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_21.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_21.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_21.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_21.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_21.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_21.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_21.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_21.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_21.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_21.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_21.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_21.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_21.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_21.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_21.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_21.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_21.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_21.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_21.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_21.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_21.setString(60, copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_21 = insertedCount_tDBOutput_21 + pstmtInsert_tDBOutput_21.executeUpdate();
                    nb_line_tDBOutput_21++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_21 = true;
                        nb_line_tDBOutput_21++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_21) {
            }
                commitCounter_tDBOutput_21++;

                if(commitEvery_tDBOutput_21 <= commitCounter_tDBOutput_21) {

                    conn_tDBOutput_21.commit();
                    commitCounter_tDBOutput_21=0;

                }


 


	tos_count_tDBOutput_21++;

/**
 * [tDBOutput_21 main ] stop
 */
	
	/**
	 * [tDBOutput_21 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_21";

	

 



/**
 * [tDBOutput_21 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_21";

	

 



/**
 * [tDBOutput_21 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_21";

	

 



/**
 * [tMap_21 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_21 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_21";

	

 



/**
 * [tDBInput_21 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_21 end ] start
	 */

	

	
	
	currentComponent="tDBInput_21";

	

	}
}finally{
	if (rs_tDBInput_21 != null) {
		rs_tDBInput_21.close();
	}
	if (stmt_tDBInput_21 != null) {
		stmt_tDBInput_21.close();
	}
		if(conn_tDBInput_21 != null && !conn_tDBInput_21.isClosed()) {
			
			conn_tDBInput_21.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_21_NB_LINE",nb_line_tDBInput_21);
		


 

ok_Hash.put("tDBInput_21", true);
end_Hash.put("tDBInput_21", System.currentTimeMillis());




/**
 * [tDBInput_21 end ] stop
 */

	
	/**
	 * [tMap_21 end ] start
	 */

	

	
	
	currentComponent="tMap_21";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row17");
			  	}
			  	
 

ok_Hash.put("tMap_21", true);
end_Hash.put("tMap_21", System.currentTimeMillis());




/**
 * [tMap_21 end ] stop
 */

	
	/**
	 * [tDBOutput_21 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_21";

	



        if(pstmtUpdate_tDBOutput_21 != null){
            pstmtUpdate_tDBOutput_21.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_21");
        }
        if(pstmtInsert_tDBOutput_21 != null){
            pstmtInsert_tDBOutput_21.close();
            resourceMap.remove("pstmtInsert_tDBOutput_21");
        }
        if(pstmt_tDBOutput_21 != null) {
            pstmt_tDBOutput_21.close();
            resourceMap.remove("pstmt_tDBOutput_21");
        }
    resourceMap.put("statementClosed_tDBOutput_21", true);
    	if (commitCounter_tDBOutput_21 > 0) {
    		
    		conn_tDBOutput_21.commit();
    		
    	}
    		
		
    	conn_tDBOutput_21 .close();
    	
    	resourceMap.put("finish_tDBOutput_21", true);
    	

	nb_line_deleted_tDBOutput_21=nb_line_deleted_tDBOutput_21+ deletedCount_tDBOutput_21;
	nb_line_update_tDBOutput_21=nb_line_update_tDBOutput_21 + updatedCount_tDBOutput_21;
	nb_line_inserted_tDBOutput_21=nb_line_inserted_tDBOutput_21 + insertedCount_tDBOutput_21;
	nb_line_rejected_tDBOutput_21=nb_line_rejected_tDBOutput_21 + rejectedCount_tDBOutput_21;
	
        globalMap.put("tDBOutput_21_NB_LINE",nb_line_tDBOutput_21);
        globalMap.put("tDBOutput_21_NB_LINE_UPDATED",nb_line_update_tDBOutput_21);
        globalMap.put("tDBOutput_21_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_21);
        globalMap.put("tDBOutput_21_NB_LINE_DELETED",nb_line_deleted_tDBOutput_21);
        globalMap.put("tDBOutput_21_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_21);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_21", true);
end_Hash.put("tDBOutput_21", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk20", 0, "ok");
				}
				tDBInput_22Process(globalMap);



/**
 * [tDBOutput_21 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_21 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_21";

	

 



/**
 * [tDBInput_21 finally ] stop
 */

	
	/**
	 * [tMap_21 finally ] start
	 */

	

	
	
	currentComponent="tMap_21";

	

 



/**
 * [tMap_21 finally ] stop
 */

	
	/**
	 * [tDBOutput_21 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_21";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_21") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_21 = null;
                if ((pstmtUpdateToClose_tDBOutput_21 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_21")) != null) {
                    pstmtUpdateToClose_tDBOutput_21.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_21 = null;
                if ((pstmtInsertToClose_tDBOutput_21 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_21")) != null) {
                    pstmtInsertToClose_tDBOutput_21.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_21 = null;
                if ((pstmtToClose_tDBOutput_21 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_21")) != null) {
                    pstmtToClose_tDBOutput_21.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_21") == null){
            java.sql.Connection ctn_tDBOutput_21 = null;
            if((ctn_tDBOutput_21 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_21")) != null){
                try {
                    ctn_tDBOutput_21.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_21) {
                    String errorMessage_tDBOutput_21 = "failed to close the connection in tDBOutput_21 :" + sqlEx_tDBOutput_21.getMessage();
                    System.err.println(errorMessage_tDBOutput_21);
                }
            }
        }
    }
 



/**
 * [tDBOutput_21 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_21_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row20Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_22Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_22_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row20Struct row20 = new row20Struct();
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_22", false);
		start_Hash.put("tDBOutput_22", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_22";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_22 = 0;
		





        int updateKeyCount_tDBOutput_22 = 1;
        if(updateKeyCount_tDBOutput_22 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_22 = 0;
int nb_line_update_tDBOutput_22 = 0;
int nb_line_inserted_tDBOutput_22 = 0;
int nb_line_deleted_tDBOutput_22 = 0;
int nb_line_rejected_tDBOutput_22 = 0;

int deletedCount_tDBOutput_22=0;
int updatedCount_tDBOutput_22=0;
int insertedCount_tDBOutput_22=0;

int rejectedCount_tDBOutput_22=0;

String tableName_tDBOutput_22 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_22 = false;

java.util.Calendar calendar_tDBOutput_22 = java.util.Calendar.getInstance();
calendar_tDBOutput_22.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_22 = calendar_tDBOutput_22.getTime().getTime();
calendar_tDBOutput_22.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_22 = calendar_tDBOutput_22.getTime().getTime();
long date_tDBOutput_22;

java.sql.Connection conn_tDBOutput_22 = null;
		String dbProperties_tDBOutput_22 = "noDatetimeStringSync=true";
		String url_tDBOutput_22 = null;
		if(dbProperties_tDBOutput_22 == null || dbProperties_tDBOutput_22.trim().length() == 0) {
			url_tDBOutput_22 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_22 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_22.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_22 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_22 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_22;
		}
		String driverClass_tDBOutput_22 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_22 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_22 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:ce/dcg/grdywWlypzmBak/snSwYV17bHRuGo4VriFw5ie89BumQBEOk=");

		String dbPwd_tDBOutput_22 = decryptedPassword_tDBOutput_22;
		java.lang.Class.forName(driverClass_tDBOutput_22);
		
		conn_tDBOutput_22 = java.sql.DriverManager.getConnection(url_tDBOutput_22, dbUser_tDBOutput_22, dbPwd_tDBOutput_22);
		
	
	resourceMap.put("conn_tDBOutput_22", conn_tDBOutput_22);
        conn_tDBOutput_22.setAutoCommit(false);
        int commitEvery_tDBOutput_22 = 10000;
        int commitCounter_tDBOutput_22 = 0;

int count_tDBOutput_22=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_22 = conn_tDBOutput_22.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_22", pstmt_tDBOutput_22);
	    String insert_tDBOutput_22 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_22 = conn_tDBOutput_22.prepareStatement(insert_tDBOutput_22);
	    resourceMap.put("pstmtInsert_tDBOutput_22", pstmtInsert_tDBOutput_22);
	    String update_tDBOutput_22 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_22 = conn_tDBOutput_22.prepareStatement(update_tDBOutput_22);
	    resourceMap.put("pstmtUpdate_tDBOutput_22", pstmtUpdate_tDBOutput_22);
	    

 



/**
 * [tDBOutput_22 begin ] stop
 */



	
	/**
	 * [tMap_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_22", false);
		start_Hash.put("tMap_22", System.currentTimeMillis());
		
	
	currentComponent="tMap_22";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row20");
					}
				
		int tos_count_tMap_22 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_22__Struct  {
}
Var__tMap_22__Struct Var__tMap_22 = new Var__tMap_22__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_22 begin ] stop
 */



	
	/**
	 * [tDBInput_22 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_22", false);
		start_Hash.put("tDBInput_22", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_22";

	
		int tos_count_tDBInput_22 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_22 = java.util.Calendar.getInstance();
		    calendar_tDBInput_22.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_22 = calendar_tDBInput_22.getTime();
		    int nb_line_tDBInput_22 = 0;
		    java.sql.Connection conn_tDBInput_22 = null;
				String driverClass_tDBInput_22 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_22 = java.lang.Class.forName(driverClass_tDBInput_22);
				String dbUser_tDBInput_22 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_22 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:uiYKLFBaXHXQ1E3zyWMjF1pmfBKUZvcE556g8QPEKpGiU7Mlv3nfWHw=");
				
				String dbPwd_tDBInput_22 = decryptedPassword_tDBInput_22;
				
				String url_tDBInput_22 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_22 = java.sql.DriverManager.getConnection(url_tDBInput_22,dbUser_tDBInput_22,dbPwd_tDBInput_22);
		        
		    
			java.sql.Statement stmt_tDBInput_22 = conn_tDBInput_22.createStatement();

		    String dbquery_tDBInput_22 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'RTEC1'SIGLA_ACTIVIDAD\n,(SELECT c.PRICE FROM acta_pre"
+"cios c where c.ITEMS_ID = '3382' AND c.MERCADO = 'MALAMBO'  )VALOR_UNITARIO\n,((SELECT c.PRICE FROM acta_precios c where"
+" c.ITEMS_ID = '3382' AND c.MERCADO = 'MALAMBO' )*1) VALOR_K\n\nfrom secuencias_acta1 a\nwhere \n a.region = 8\nAND a.ort"
+"rinur = 'U'\nand a.codigo_causanl_obs  in(20,22,24,26,30,33,37)\nand a.codigo_causanl_obs2  in(72,93)\nand a.FECHALEGALI"
+"ZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion)\nand a.FECHALEGALIZATION <= (select ("
+"CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_22_QUERY",dbquery_tDBInput_22);
		    java.sql.ResultSet rs_tDBInput_22 = null;

		    try {
		    	rs_tDBInput_22 = stmt_tDBInput_22.executeQuery(dbquery_tDBInput_22);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_22 = rs_tDBInput_22.getMetaData();
		    	int colQtyInRs_tDBInput_22 = rsmd_tDBInput_22.getColumnCount();

		    String tmpContent_tDBInput_22 = null;
		    
		    
		    while (rs_tDBInput_22.next()) {
		        nb_line_tDBInput_22++;
		        
							if(colQtyInRs_tDBInput_22 < 1) {
								row20.FechaAsignacion = null;
							} else {
	                         		
        	row20.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_22, 1, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 2) {
								row20.Equipo_Trabajo = null;
							} else {
	                         		
        	row20.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_22, 2, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 3) {
								row20.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row20.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_22, 3, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 4) {
								row20.Tarea = null;
							} else {
	                         		
        	row20.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_22, 4, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 5) {
								row20.DescTarea = null;
							} else {
	                         		
        	row20.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_22, 5, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 6) {
								row20.Orden = null;
							} else {
	                         		
        	row20.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_22, 6, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 7) {
								row20.Ciclo = null;
							} else {
	                         		
        	row20.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_22, 7, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 8) {
								row20.servicio = null;
							} else {
	                         		
        	row20.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_22, 8, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 9) {
								row20.Estado = null;
							} else {
	                         		
        	row20.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_22, 9, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 10) {
								row20.Desc_estado = null;
							} else {
	                         		
        	row20.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_22, 10, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 11) {
								row20.FechaCREATED = null;
							} else {
	                         		
        	row20.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_22, 11, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 12) {
								row20.Fechalegalization = null;
							} else {
	                         		
        	row20.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_22, 12, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 13) {
								row20.Horalegalization = null;
							} else {
	                         		
        	row20.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_22, 13, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 14) {
								row20.Instalacion = null;
							} else {
	                         		
        	row20.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_22, 14, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 15) {
								row20.urbano_rural = null;
							} else {
	                         		
        	row20.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_22, 15, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 16) {
								row20.ortrinur = null;
							} else {
	                         		
        	row20.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_22, 16, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 17) {
								row20.descripciona = null;
							} else {
	                         		
        	row20.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_22, 17, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 18) {
								row20.Ciudad = null;
							} else {
	                         		
        	row20.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_22, 18, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 19) {
								row20.cmrudesc = null;
							} else {
	                         		
        	row20.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_22, 19, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 20) {
								row20.region = null;
							} else {
	                         		
        	row20.region = routines.system.JDBCUtil.getString(rs_tDBInput_22, 20, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 21) {
								row20.regndesc = null;
							} else {
	                         		
        	row20.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_22, 21, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 22) {
								row20.depacodi = null;
							} else {
	                         		
        	row20.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_22, 22, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 23) {
								row20.codigorespuesta = null;
							} else {
	                         		
        	row20.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_22, 23, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 24) {
								row20.respuestatencion = null;
							} else {
	                         		
        	row20.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_22, 24, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 25) {
								row20.x = null;
							} else {
	                         		
        	row20.x = routines.system.JDBCUtil.getString(rs_tDBInput_22, 25, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 26) {
								row20.y = null;
							} else {
	                         		
        	row20.y = routines.system.JDBCUtil.getString(rs_tDBInput_22, 26, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 27) {
								row20.Ano = null;
							} else {
	                         		
        	row20.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_22, 27, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 28) {
								row20.Mes = null;
							} else {
	                         		
        	row20.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_22, 28, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 29) {
								row20.Dia = null;
							} else {
	                         		
        	row20.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_22, 29, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 30) {
								row20.desc_cna = null;
							} else {
	                         		
        	row20.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_22, 30, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 31) {
								row20.ACTIVIDAD = null;
							} else {
	                         		
        	row20.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_22, 31, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 32) {
								row20.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row20.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_22, 32, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 33) {
								row20.FRECUENCIA = null;
							} else {
	                         		
        	row20.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_22, 33, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 34) {
								row20.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row20.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_22, 34, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 35) {
								row20.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row20.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_22, 35, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 36) {
								row20.ESTADO_CORTE = null;
							} else {
	                         		
        	row20.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_22, 36, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 37) {
								row20.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row20.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_22, 37, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 38) {
								row20.ROUTE_ID = null;
							} else {
	                         		
        	row20.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_22, 38, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 39) {
								row20.NAME_ = null;
							} else {
	                         		
        	row20.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_22, 39, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 40) {
								row20.NUMBER_ID = null;
							} else {
	                         		
        	row20.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_22, 40, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 41) {
								row20.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row20.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_22, 41, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 42) {
								row20.CAUSANL_OBS = null;
							} else {
	                         		
        	row20.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_22, 42, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 43) {
								row20.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row20.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_22, 43, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 44) {
								row20.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row20.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_22, 44, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 45) {
								row20.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row20.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_22, 45, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 46) {
								row20.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row20.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_22, 46, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 47) {
								row20.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row20.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_22, 47, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 48) {
								row20.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row20.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_22, 48, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 49) {
								row20.TIPO_SERVICIO = null;
							} else {
	                         		
        	row20.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_22, 49, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 50) {
								row20.categoria = null;
							} else {
	                         		
        	row20.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_22, 50, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 51) {
								row20.ESTRATO = null;
							} else {
	                         		
        	row20.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_22, 51, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 52) {
								row20.DESC_SERVICIO = null;
							} else {
	                         		
        	row20.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_22, 52, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 53) {
								row20.orden_relacionada = null;
							} else {
	                         		
        	row20.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_22, 53, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 54) {
								row20.order_activity_ID = null;
							} else {
	                         		
        	row20.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_22, 54, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 55) {
								row20.Adjunto = null;
							} else {
	                         		
        	row20.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_22, 55, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 56) {
								row20.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row20.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_22, 56, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 57) {
								row20.K_DISPERSION = null;
							} else {
	                         		
        	row20.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_22, 57, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 58) {
								row20.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row20.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_22, 58, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 59) {
								row20.VALOR_UNITARIO = null;
							} else {
	                         		
        	row20.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_22, 59, false);
		                    }
							if(colQtyInRs_tDBInput_22 < 60) {
								row20.VALOR_K = null;
							} else {
	                         		
        	row20.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_22, 60, false);
		                    }
					

 



/**
 * [tDBInput_22 begin ] stop
 */
	
	/**
	 * [tDBInput_22 main ] start
	 */

	

	
	
	currentComponent="tDBInput_22";

	

 


	tos_count_tDBInput_22++;

/**
 * [tDBInput_22 main ] stop
 */
	
	/**
	 * [tDBInput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_22";

	

 



/**
 * [tDBInput_22 process_data_begin ] stop
 */

	
	/**
	 * [tMap_22 main ] start
	 */

	

	
	
	currentComponent="tMap_22";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row20");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_22 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_22 = false;
		  boolean mainRowRejected_tMap_22 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_22__Struct Var = Var__tMap_22;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1'
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row20.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row20.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row20.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Tarea = row20.Tarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row20.DescTarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Orden = row20.Orden;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row20.Ciclo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.servicio = row20.servicio;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Estado = row20.Estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row20.Desc_estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row20.FechaCREATED;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row20.Fechalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row20.Horalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row20.Instalacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row20.urbano_rural;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row20.ortrinur;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.descripciona = row20.descripciona;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row20.Ciudad;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row20.cmrudesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.region = row20.region;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.regndesc = row20.regndesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.depacodi = row20.depacodi;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row20.codigorespuesta;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row20.respuestatencion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.x = row20.x;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.y = row20.y;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ano = row20.Ano;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Mes = row20.Mes;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Dia = row20.Dia;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row20.desc_cna;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row20.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row20.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row20.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row20.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row20.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row20.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row20.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row20.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row20.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row20.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row20.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row20.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row20.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row20.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row20.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row20.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row20.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row20.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row20.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.categoria = row20.categoria;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row20.ESTRATO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row20.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row20.orden_relacionada;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row20.order_activity_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row20.Adjunto;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row20.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row20.K_DISPERSION;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row20.SIGLA_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row20.VALOR_UNITARIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row20.VALOR_K;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_22 = false;










 


	tos_count_tMap_22++;

/**
 * [tMap_22 main ] stop
 */
	
	/**
	 * [tMap_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_22";

	

 



/**
 * [tMap_22 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_22 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_22";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_22 = false;
                    if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_22.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_22.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_22 = -1;
            try (java.sql.ResultSet rs_tDBOutput_22 = pstmt_tDBOutput_22.executeQuery()) {
                while(rs_tDBOutput_22.next()) {
                    checkCount_tDBOutput_22 = rs_tDBOutput_22.getInt(1);
                }
            }
            if(checkCount_tDBOutput_22 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_22.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_22.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_22.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_22.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_22.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_22.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_22.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_22.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_22.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_22.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_22.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_22.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_22.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_22.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_22.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_22.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_22.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_22.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_22.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_22.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_22.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_22.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_22.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_22.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_22.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_22.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_22.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_22.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_22.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_22.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_22.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_22.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_22.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_22.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_22.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_22.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_22.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_22.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_22.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_22.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_22.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_22.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_22.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_22.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_22.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_22.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_22.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_22.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_22.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_22.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_22.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_22.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_22.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_22.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_22.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_22.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_22.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_22.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_22.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_22.setNull(60 + count_tDBOutput_22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_22.setString(60 + count_tDBOutput_22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_22 = updatedCount_tDBOutput_22 + pstmtUpdate_tDBOutput_22.executeUpdate();
                    nb_line_tDBOutput_22++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_22 = true;
                        nb_line_tDBOutput_22++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_22.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_22.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_22.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_22.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_22.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_22.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_22.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_22.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_22.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_22.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_22.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_22.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_22.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_22.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_22.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_22.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_22.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_22.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_22.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_22.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_22.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_22.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_22.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_22.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_22.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_22.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_22.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_22.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_22.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_22.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_22.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_22.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_22.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_22.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_22.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_22.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_22.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_22.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_22.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_22.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_22.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_22.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_22.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_22.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_22.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_22.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_22.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_22.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_22.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_22.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_22.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_22.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_22.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_22.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_22.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_22.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_22.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_22.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_22.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_22.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_22.setString(60, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_22 = insertedCount_tDBOutput_22 + pstmtInsert_tDBOutput_22.executeUpdate();
                    nb_line_tDBOutput_22++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_22 = true;
                        nb_line_tDBOutput_22++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_22) {
            }
                commitCounter_tDBOutput_22++;

                if(commitEvery_tDBOutput_22 <= commitCounter_tDBOutput_22) {

                    conn_tDBOutput_22.commit();
                    commitCounter_tDBOutput_22=0;

                }


 


	tos_count_tDBOutput_22++;

/**
 * [tDBOutput_22 main ] stop
 */
	
	/**
	 * [tDBOutput_22 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_22";

	

 



/**
 * [tDBOutput_22 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_22";

	

 



/**
 * [tDBOutput_22 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_22";

	

 



/**
 * [tMap_22 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_22 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_22";

	

 



/**
 * [tDBInput_22 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_22 end ] start
	 */

	

	
	
	currentComponent="tDBInput_22";

	

	}
}finally{
	if (rs_tDBInput_22 != null) {
		rs_tDBInput_22.close();
	}
	if (stmt_tDBInput_22 != null) {
		stmt_tDBInput_22.close();
	}
		if(conn_tDBInput_22 != null && !conn_tDBInput_22.isClosed()) {
			
			conn_tDBInput_22.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_22_NB_LINE",nb_line_tDBInput_22);
		


 

ok_Hash.put("tDBInput_22", true);
end_Hash.put("tDBInput_22", System.currentTimeMillis());




/**
 * [tDBInput_22 end ] stop
 */

	
	/**
	 * [tMap_22 end ] start
	 */

	

	
	
	currentComponent="tMap_22";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row20");
			  	}
			  	
 

ok_Hash.put("tMap_22", true);
end_Hash.put("tMap_22", System.currentTimeMillis());




/**
 * [tMap_22 end ] stop
 */

	
	/**
	 * [tDBOutput_22 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_22";

	



        if(pstmtUpdate_tDBOutput_22 != null){
            pstmtUpdate_tDBOutput_22.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_22");
        }
        if(pstmtInsert_tDBOutput_22 != null){
            pstmtInsert_tDBOutput_22.close();
            resourceMap.remove("pstmtInsert_tDBOutput_22");
        }
        if(pstmt_tDBOutput_22 != null) {
            pstmt_tDBOutput_22.close();
            resourceMap.remove("pstmt_tDBOutput_22");
        }
    resourceMap.put("statementClosed_tDBOutput_22", true);
    	if (commitCounter_tDBOutput_22 > 0) {
    		
    		conn_tDBOutput_22.commit();
    		
    	}
    		
		
    	conn_tDBOutput_22 .close();
    	
    	resourceMap.put("finish_tDBOutput_22", true);
    	

	nb_line_deleted_tDBOutput_22=nb_line_deleted_tDBOutput_22+ deletedCount_tDBOutput_22;
	nb_line_update_tDBOutput_22=nb_line_update_tDBOutput_22 + updatedCount_tDBOutput_22;
	nb_line_inserted_tDBOutput_22=nb_line_inserted_tDBOutput_22 + insertedCount_tDBOutput_22;
	nb_line_rejected_tDBOutput_22=nb_line_rejected_tDBOutput_22 + rejectedCount_tDBOutput_22;
	
        globalMap.put("tDBOutput_22_NB_LINE",nb_line_tDBOutput_22);
        globalMap.put("tDBOutput_22_NB_LINE_UPDATED",nb_line_update_tDBOutput_22);
        globalMap.put("tDBOutput_22_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_22);
        globalMap.put("tDBOutput_22_NB_LINE_DELETED",nb_line_deleted_tDBOutput_22);
        globalMap.put("tDBOutput_22_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_22);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_22", true);
end_Hash.put("tDBOutput_22", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk21", 0, "ok");
				}
				tDBInput_23Process(globalMap);



/**
 * [tDBOutput_22 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_22 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_22";

	

 



/**
 * [tDBInput_22 finally ] stop
 */

	
	/**
	 * [tMap_22 finally ] start
	 */

	

	
	
	currentComponent="tMap_22";

	

 



/**
 * [tMap_22 finally ] stop
 */

	
	/**
	 * [tDBOutput_22 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_22";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_22") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_22 = null;
                if ((pstmtUpdateToClose_tDBOutput_22 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_22")) != null) {
                    pstmtUpdateToClose_tDBOutput_22.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_22 = null;
                if ((pstmtInsertToClose_tDBOutput_22 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_22")) != null) {
                    pstmtInsertToClose_tDBOutput_22.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_22 = null;
                if ((pstmtToClose_tDBOutput_22 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_22")) != null) {
                    pstmtToClose_tDBOutput_22.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_22") == null){
            java.sql.Connection ctn_tDBOutput_22 = null;
            if((ctn_tDBOutput_22 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_22")) != null){
                try {
                    ctn_tDBOutput_22.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_22) {
                    String errorMessage_tDBOutput_22 = "failed to close the connection in tDBOutput_22 :" + sqlEx_tDBOutput_22.getMessage();
                    System.err.println(errorMessage_tDBOutput_22);
                }
            }
        }
    }
 



/**
 * [tDBOutput_22 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_22_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row21Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_23_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row21Struct row21 = new row21Struct();
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_23", false);
		start_Hash.put("tDBOutput_23", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_23";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_23 = 0;
		





        int updateKeyCount_tDBOutput_23 = 1;
        if(updateKeyCount_tDBOutput_23 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_23 = 0;
int nb_line_update_tDBOutput_23 = 0;
int nb_line_inserted_tDBOutput_23 = 0;
int nb_line_deleted_tDBOutput_23 = 0;
int nb_line_rejected_tDBOutput_23 = 0;

int deletedCount_tDBOutput_23=0;
int updatedCount_tDBOutput_23=0;
int insertedCount_tDBOutput_23=0;

int rejectedCount_tDBOutput_23=0;

String tableName_tDBOutput_23 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_23 = false;

java.util.Calendar calendar_tDBOutput_23 = java.util.Calendar.getInstance();
calendar_tDBOutput_23.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_23 = calendar_tDBOutput_23.getTime().getTime();
calendar_tDBOutput_23.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_23 = calendar_tDBOutput_23.getTime().getTime();
long date_tDBOutput_23;

java.sql.Connection conn_tDBOutput_23 = null;
		String dbProperties_tDBOutput_23 = "noDatetimeStringSync=true";
		String url_tDBOutput_23 = null;
		if(dbProperties_tDBOutput_23 == null || dbProperties_tDBOutput_23.trim().length() == 0) {
			url_tDBOutput_23 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_23 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_23.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_23 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_23 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_23;
		}
		String driverClass_tDBOutput_23 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_23 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_23 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:Ue2l8E+TmdhlIIDH67yZvSRQ7OzNFcaKBTIXL100FCdcF49SJYyrNHw=");

		String dbPwd_tDBOutput_23 = decryptedPassword_tDBOutput_23;
		java.lang.Class.forName(driverClass_tDBOutput_23);
		
		conn_tDBOutput_23 = java.sql.DriverManager.getConnection(url_tDBOutput_23, dbUser_tDBOutput_23, dbPwd_tDBOutput_23);
		
	
	resourceMap.put("conn_tDBOutput_23", conn_tDBOutput_23);
        conn_tDBOutput_23.setAutoCommit(false);
        int commitEvery_tDBOutput_23 = 10000;
        int commitCounter_tDBOutput_23 = 0;

int count_tDBOutput_23=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_23 = conn_tDBOutput_23.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_23", pstmt_tDBOutput_23);
	    String insert_tDBOutput_23 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_23 = conn_tDBOutput_23.prepareStatement(insert_tDBOutput_23);
	    resourceMap.put("pstmtInsert_tDBOutput_23", pstmtInsert_tDBOutput_23);
	    String update_tDBOutput_23 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_23 = conn_tDBOutput_23.prepareStatement(update_tDBOutput_23);
	    resourceMap.put("pstmtUpdate_tDBOutput_23", pstmtUpdate_tDBOutput_23);
	    

 



/**
 * [tDBOutput_23 begin ] stop
 */



	
	/**
	 * [tMap_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_23", false);
		start_Hash.put("tMap_23", System.currentTimeMillis());
		
	
	currentComponent="tMap_23";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row21");
					}
				
		int tos_count_tMap_23 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_23__Struct  {
}
Var__tMap_23__Struct Var__tMap_23 = new Var__tMap_23__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_23 begin ] stop
 */



	
	/**
	 * [tDBInput_23 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_23", false);
		start_Hash.put("tDBInput_23", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_23";

	
		int tos_count_tDBInput_23 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_23 = java.util.Calendar.getInstance();
		    calendar_tDBInput_23.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_23 = calendar_tDBInput_23.getTime();
		    int nb_line_tDBInput_23 = 0;
		    java.sql.Connection conn_tDBInput_23 = null;
				String driverClass_tDBInput_23 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_23 = java.lang.Class.forName(driverClass_tDBInput_23);
				String dbUser_tDBInput_23 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_23 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:qv3Y+pxKT1gV97f8WashQRoLo7nWLyOa0NrT5srl2zRPt/qyaYn7wIU=");
				
				String dbPwd_tDBInput_23 = decryptedPassword_tDBInput_23;
				
				String url_tDBInput_23 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_23 = java.sql.DriverManager.getConnection(url_tDBInput_23,dbUser_tDBInput_23,dbPwd_tDBInput_23);
		        
		    
			java.sql.Statement stmt_tDBInput_23 = conn_tDBInput_23.createStatement();

		    String dbquery_tDBInput_23 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'RTEC1'SIGLA_ACTIVIDAD\n,(SELECT c.PRICE FROM acta_pre"
+"cios c where c.ITEMS_ID = '3382' AND c.MERCADO ='REGIONAL'  )VALOR_UNITARIO\n,((SELECT c.PRICE FROM acta_precios c where"
+" c.ITEMS_ID = '3382' AND c.MERCADO = 'REGIONAL' )*1) VALOR_K\n\nfrom secuencias_acta1 a\nwhere \n a.region <> 8\nAND a.o"
+"rtrinur = 'U'\nand a.codigo_causanl_obs  in(20,22,24,26,30,33,37)\nand a.codigo_causanl_obs2  in(72,93)\nand a.FECHALEGA"
+"LIZATION >= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fecha_k_dispersion)\nand a.FECHALEGALIZATION <= (select"
+" (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_23_QUERY",dbquery_tDBInput_23);
		    java.sql.ResultSet rs_tDBInput_23 = null;

		    try {
		    	rs_tDBInput_23 = stmt_tDBInput_23.executeQuery(dbquery_tDBInput_23);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_23 = rs_tDBInput_23.getMetaData();
		    	int colQtyInRs_tDBInput_23 = rsmd_tDBInput_23.getColumnCount();

		    String tmpContent_tDBInput_23 = null;
		    
		    
		    while (rs_tDBInput_23.next()) {
		        nb_line_tDBInput_23++;
		        
							if(colQtyInRs_tDBInput_23 < 1) {
								row21.FechaAsignacion = null;
							} else {
	                         		
        	row21.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_23, 1, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 2) {
								row21.Equipo_Trabajo = null;
							} else {
	                         		
        	row21.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_23, 2, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 3) {
								row21.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row21.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_23, 3, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 4) {
								row21.Tarea = null;
							} else {
	                         		
        	row21.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_23, 4, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 5) {
								row21.DescTarea = null;
							} else {
	                         		
        	row21.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_23, 5, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 6) {
								row21.Orden = null;
							} else {
	                         		
        	row21.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_23, 6, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 7) {
								row21.Ciclo = null;
							} else {
	                         		
        	row21.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_23, 7, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 8) {
								row21.servicio = null;
							} else {
	                         		
        	row21.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_23, 8, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 9) {
								row21.Estado = null;
							} else {
	                         		
        	row21.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_23, 9, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 10) {
								row21.Desc_estado = null;
							} else {
	                         		
        	row21.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_23, 10, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 11) {
								row21.FechaCREATED = null;
							} else {
	                         		
        	row21.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_23, 11, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 12) {
								row21.Fechalegalization = null;
							} else {
	                         		
        	row21.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_23, 12, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 13) {
								row21.Horalegalization = null;
							} else {
	                         		
        	row21.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_23, 13, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 14) {
								row21.Instalacion = null;
							} else {
	                         		
        	row21.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_23, 14, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 15) {
								row21.urbano_rural = null;
							} else {
	                         		
        	row21.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_23, 15, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 16) {
								row21.ortrinur = null;
							} else {
	                         		
        	row21.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_23, 16, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 17) {
								row21.descripciona = null;
							} else {
	                         		
        	row21.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_23, 17, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 18) {
								row21.Ciudad = null;
							} else {
	                         		
        	row21.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_23, 18, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 19) {
								row21.cmrudesc = null;
							} else {
	                         		
        	row21.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_23, 19, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 20) {
								row21.region = null;
							} else {
	                         		
        	row21.region = routines.system.JDBCUtil.getString(rs_tDBInput_23, 20, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 21) {
								row21.regndesc = null;
							} else {
	                         		
        	row21.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_23, 21, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 22) {
								row21.depacodi = null;
							} else {
	                         		
        	row21.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_23, 22, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 23) {
								row21.codigorespuesta = null;
							} else {
	                         		
        	row21.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_23, 23, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 24) {
								row21.respuestatencion = null;
							} else {
	                         		
        	row21.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_23, 24, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 25) {
								row21.x = null;
							} else {
	                         		
        	row21.x = routines.system.JDBCUtil.getString(rs_tDBInput_23, 25, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 26) {
								row21.y = null;
							} else {
	                         		
        	row21.y = routines.system.JDBCUtil.getString(rs_tDBInput_23, 26, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 27) {
								row21.Ano = null;
							} else {
	                         		
        	row21.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_23, 27, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 28) {
								row21.Mes = null;
							} else {
	                         		
        	row21.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_23, 28, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 29) {
								row21.Dia = null;
							} else {
	                         		
        	row21.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_23, 29, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 30) {
								row21.desc_cna = null;
							} else {
	                         		
        	row21.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_23, 30, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 31) {
								row21.ACTIVIDAD = null;
							} else {
	                         		
        	row21.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_23, 31, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 32) {
								row21.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row21.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_23, 32, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 33) {
								row21.FRECUENCIA = null;
							} else {
	                         		
        	row21.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_23, 33, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 34) {
								row21.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row21.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_23, 34, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 35) {
								row21.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row21.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_23, 35, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 36) {
								row21.ESTADO_CORTE = null;
							} else {
	                         		
        	row21.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_23, 36, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 37) {
								row21.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row21.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_23, 37, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 38) {
								row21.ROUTE_ID = null;
							} else {
	                         		
        	row21.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_23, 38, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 39) {
								row21.NAME_ = null;
							} else {
	                         		
        	row21.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_23, 39, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 40) {
								row21.NUMBER_ID = null;
							} else {
	                         		
        	row21.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_23, 40, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 41) {
								row21.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row21.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_23, 41, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 42) {
								row21.CAUSANL_OBS = null;
							} else {
	                         		
        	row21.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_23, 42, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 43) {
								row21.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row21.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_23, 43, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 44) {
								row21.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row21.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_23, 44, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 45) {
								row21.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row21.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_23, 45, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 46) {
								row21.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row21.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_23, 46, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 47) {
								row21.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row21.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_23, 47, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 48) {
								row21.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row21.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_23, 48, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 49) {
								row21.TIPO_SERVICIO = null;
							} else {
	                         		
        	row21.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_23, 49, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 50) {
								row21.categoria = null;
							} else {
	                         		
        	row21.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_23, 50, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 51) {
								row21.ESTRATO = null;
							} else {
	                         		
        	row21.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_23, 51, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 52) {
								row21.DESC_SERVICIO = null;
							} else {
	                         		
        	row21.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_23, 52, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 53) {
								row21.orden_relacionada = null;
							} else {
	                         		
        	row21.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_23, 53, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 54) {
								row21.order_activity_ID = null;
							} else {
	                         		
        	row21.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_23, 54, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 55) {
								row21.Adjunto = null;
							} else {
	                         		
        	row21.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_23, 55, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 56) {
								row21.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row21.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_23, 56, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 57) {
								row21.K_DISPERSION = null;
							} else {
	                         		
        	row21.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_23, 57, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 58) {
								row21.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row21.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_23, 58, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 59) {
								row21.VALOR_UNITARIO = null;
							} else {
	                         		
        	row21.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_23, 59, false);
		                    }
							if(colQtyInRs_tDBInput_23 < 60) {
								row21.VALOR_K = null;
							} else {
	                         		
        	row21.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_23, 60, false);
		                    }
					

 



/**
 * [tDBInput_23 begin ] stop
 */
	
	/**
	 * [tDBInput_23 main ] start
	 */

	

	
	
	currentComponent="tDBInput_23";

	

 


	tos_count_tDBInput_23++;

/**
 * [tDBInput_23 main ] stop
 */
	
	/**
	 * [tDBInput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_23";

	

 



/**
 * [tDBInput_23 process_data_begin ] stop
 */

	
	/**
	 * [tMap_23 main ] start
	 */

	

	
	
	currentComponent="tMap_23";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row21");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_23 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_23 = false;
		  boolean mainRowRejected_tMap_23 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_23__Struct Var = Var__tMap_23;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1'
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row21.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row21.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row21.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Tarea = row21.Tarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row21.DescTarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Orden = row21.Orden;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row21.Ciclo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.servicio = row21.servicio;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Estado = row21.Estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row21.Desc_estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row21.FechaCREATED;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row21.Fechalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row21.Horalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row21.Instalacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row21.urbano_rural;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row21.ortrinur;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.descripciona = row21.descripciona;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row21.Ciudad;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row21.cmrudesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.region = row21.region;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.regndesc = row21.regndesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.depacodi = row21.depacodi;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row21.codigorespuesta;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row21.respuestatencion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.x = row21.x;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.y = row21.y;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ano = row21.Ano;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Mes = row21.Mes;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Dia = row21.Dia;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row21.desc_cna;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row21.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row21.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row21.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row21.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row21.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row21.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row21.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row21.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row21.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row21.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row21.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row21.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row21.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row21.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row21.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row21.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row21.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row21.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row21.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.categoria = row21.categoria;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row21.ESTRATO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row21.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row21.orden_relacionada;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row21.order_activity_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row21.Adjunto;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row21.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row21.K_DISPERSION;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row21.SIGLA_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row21.VALOR_UNITARIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row21.VALOR_K;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_23 = false;










 


	tos_count_tMap_23++;

/**
 * [tMap_23 main ] stop
 */
	
	/**
	 * [tMap_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_23";

	

 



/**
 * [tMap_23 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_23 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_23";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_23 = false;
                    if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_23.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_23.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_23 = -1;
            try (java.sql.ResultSet rs_tDBOutput_23 = pstmt_tDBOutput_23.executeQuery()) {
                while(rs_tDBOutput_23.next()) {
                    checkCount_tDBOutput_23 = rs_tDBOutput_23.getInt(1);
                }
            }
            if(checkCount_tDBOutput_23 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_23.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_23.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_23.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_23.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_23.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_23.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_23.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_23.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_23.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_23.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_23.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_23.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_23.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_23.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_23.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_23.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_23.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_23.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_23.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_23.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_23.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_23.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_23.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_23.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_23.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_23.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_23.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_23.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_23.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_23.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_23.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_23.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_23.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_23.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_23.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_23.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_23.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_23.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_23.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_23.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_23.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_23.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_23.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_23.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_23.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_23.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_23.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_23.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_23.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_23.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_23.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_23.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_23.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_23.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_23.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_23.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_23.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_23.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_23.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_23.setNull(60 + count_tDBOutput_23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_23.setString(60 + count_tDBOutput_23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_23 = updatedCount_tDBOutput_23 + pstmtUpdate_tDBOutput_23.executeUpdate();
                    nb_line_tDBOutput_23++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_23 = true;
                        nb_line_tDBOutput_23++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_23.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_23.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_23.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_23.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_23.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_23.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_23.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_23.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_23.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_23.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_23.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_23.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_23.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_23.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_23.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_23.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_23.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_23.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_23.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_23.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_23.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_23.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_23.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_23.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_23.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_23.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_23.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_23.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_23.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_23.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_23.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_23.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_23.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_23.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_23.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_23.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_23.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_23.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_23.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_23.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_23.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_23.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_23.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_23.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_23.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_23.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_23.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_23.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_23.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_23.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_23.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_23.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_23.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_23.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_23.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_23.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_23.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_23.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_23.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_23.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_23.setString(60, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_23 = insertedCount_tDBOutput_23 + pstmtInsert_tDBOutput_23.executeUpdate();
                    nb_line_tDBOutput_23++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_23 = true;
                        nb_line_tDBOutput_23++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_23) {
            }
                commitCounter_tDBOutput_23++;

                if(commitEvery_tDBOutput_23 <= commitCounter_tDBOutput_23) {

                    conn_tDBOutput_23.commit();
                    commitCounter_tDBOutput_23=0;

                }


 


	tos_count_tDBOutput_23++;

/**
 * [tDBOutput_23 main ] stop
 */
	
	/**
	 * [tDBOutput_23 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_23";

	

 



/**
 * [tDBOutput_23 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_23";

	

 



/**
 * [tDBOutput_23 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_23";

	

 



/**
 * [tMap_23 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_23 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_23";

	

 



/**
 * [tDBInput_23 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_23 end ] start
	 */

	

	
	
	currentComponent="tDBInput_23";

	

	}
}finally{
	if (rs_tDBInput_23 != null) {
		rs_tDBInput_23.close();
	}
	if (stmt_tDBInput_23 != null) {
		stmt_tDBInput_23.close();
	}
		if(conn_tDBInput_23 != null && !conn_tDBInput_23.isClosed()) {
			
			conn_tDBInput_23.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_23_NB_LINE",nb_line_tDBInput_23);
		


 

ok_Hash.put("tDBInput_23", true);
end_Hash.put("tDBInput_23", System.currentTimeMillis());




/**
 * [tDBInput_23 end ] stop
 */

	
	/**
	 * [tMap_23 end ] start
	 */

	

	
	
	currentComponent="tMap_23";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row21");
			  	}
			  	
 

ok_Hash.put("tMap_23", true);
end_Hash.put("tMap_23", System.currentTimeMillis());




/**
 * [tMap_23 end ] stop
 */

	
	/**
	 * [tDBOutput_23 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_23";

	



        if(pstmtUpdate_tDBOutput_23 != null){
            pstmtUpdate_tDBOutput_23.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_23");
        }
        if(pstmtInsert_tDBOutput_23 != null){
            pstmtInsert_tDBOutput_23.close();
            resourceMap.remove("pstmtInsert_tDBOutput_23");
        }
        if(pstmt_tDBOutput_23 != null) {
            pstmt_tDBOutput_23.close();
            resourceMap.remove("pstmt_tDBOutput_23");
        }
    resourceMap.put("statementClosed_tDBOutput_23", true);
    	if (commitCounter_tDBOutput_23 > 0) {
    		
    		conn_tDBOutput_23.commit();
    		
    	}
    		
		
    	conn_tDBOutput_23 .close();
    	
    	resourceMap.put("finish_tDBOutput_23", true);
    	

	nb_line_deleted_tDBOutput_23=nb_line_deleted_tDBOutput_23+ deletedCount_tDBOutput_23;
	nb_line_update_tDBOutput_23=nb_line_update_tDBOutput_23 + updatedCount_tDBOutput_23;
	nb_line_inserted_tDBOutput_23=nb_line_inserted_tDBOutput_23 + insertedCount_tDBOutput_23;
	nb_line_rejected_tDBOutput_23=nb_line_rejected_tDBOutput_23 + rejectedCount_tDBOutput_23;
	
        globalMap.put("tDBOutput_23_NB_LINE",nb_line_tDBOutput_23);
        globalMap.put("tDBOutput_23_NB_LINE_UPDATED",nb_line_update_tDBOutput_23);
        globalMap.put("tDBOutput_23_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_23);
        globalMap.put("tDBOutput_23_NB_LINE_DELETED",nb_line_deleted_tDBOutput_23);
        globalMap.put("tDBOutput_23_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_23);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_23", true);
end_Hash.put("tDBOutput_23", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk22", 0, "ok");
				}
				tDBInput_24Process(globalMap);



/**
 * [tDBOutput_23 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_23 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_23";

	

 



/**
 * [tDBInput_23 finally ] stop
 */

	
	/**
	 * [tMap_23 finally ] start
	 */

	

	
	
	currentComponent="tMap_23";

	

 



/**
 * [tMap_23 finally ] stop
 */

	
	/**
	 * [tDBOutput_23 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_23";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_23") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_23 = null;
                if ((pstmtUpdateToClose_tDBOutput_23 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_23")) != null) {
                    pstmtUpdateToClose_tDBOutput_23.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_23 = null;
                if ((pstmtInsertToClose_tDBOutput_23 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_23")) != null) {
                    pstmtInsertToClose_tDBOutput_23.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_23 = null;
                if ((pstmtToClose_tDBOutput_23 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_23")) != null) {
                    pstmtToClose_tDBOutput_23.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_23") == null){
            java.sql.Connection ctn_tDBOutput_23 = null;
            if((ctn_tDBOutput_23 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_23")) != null){
                try {
                    ctn_tDBOutput_23.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_23) {
                    String errorMessage_tDBOutput_23 = "failed to close the connection in tDBOutput_23 :" + sqlEx_tDBOutput_23.getMessage();
                    System.err.println(errorMessage_tDBOutput_23);
                }
            }
        }
    }
 



/**
 * [tDBOutput_23 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_23_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other = (copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Fechalegalization = this.Fechalegalization;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Fechalegalization;

				public String getFechalegalization () {
					return this.Fechalegalization;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Fechalegalization = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Fechalegalization,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Fechalegalization="+Fechalegalization);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row23Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_24Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_24_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row23Struct row23 = new row23Struct();
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();





	
	/**
	 * [tDBOutput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBOutput_24", false);
		start_Hash.put("tDBOutput_24", System.currentTimeMillis());
		
	
	currentComponent="tDBOutput_24";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
				
		int tos_count_tDBOutput_24 = 0;
		





        int updateKeyCount_tDBOutput_24 = 1;
        if(updateKeyCount_tDBOutput_24 < 1) {
            throw new RuntimeException("For update, Schema must have a key");
        }

int nb_line_tDBOutput_24 = 0;
int nb_line_update_tDBOutput_24 = 0;
int nb_line_inserted_tDBOutput_24 = 0;
int nb_line_deleted_tDBOutput_24 = 0;
int nb_line_rejected_tDBOutput_24 = 0;

int deletedCount_tDBOutput_24=0;
int updatedCount_tDBOutput_24=0;
int insertedCount_tDBOutput_24=0;

int rejectedCount_tDBOutput_24=0;

String tableName_tDBOutput_24 = "secuencias_kdispersion";
boolean whetherReject_tDBOutput_24 = false;

java.util.Calendar calendar_tDBOutput_24 = java.util.Calendar.getInstance();
calendar_tDBOutput_24.set(1, 0, 1, 0, 0, 0);
long year1_tDBOutput_24 = calendar_tDBOutput_24.getTime().getTime();
calendar_tDBOutput_24.set(10000, 0, 1, 0, 0, 0);
long year10000_tDBOutput_24 = calendar_tDBOutput_24.getTime().getTime();
long date_tDBOutput_24;

java.sql.Connection conn_tDBOutput_24 = null;
		String dbProperties_tDBOutput_24 = "noDatetimeStringSync=true";
		String url_tDBOutput_24 = null;
		if(dbProperties_tDBOutput_24 == null || dbProperties_tDBOutput_24.trim().length() == 0) {
			url_tDBOutput_24 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "rewriteBatchedStatements=true";
		} else {
			String properties_tDBOutput_24 = "noDatetimeStringSync=true";
			if (!properties_tDBOutput_24.contains("rewriteBatchedStatements")) {
				properties_tDBOutput_24 += "&rewriteBatchedStatements=true";
			}

			url_tDBOutput_24 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + properties_tDBOutput_24;
		}
		String driverClass_tDBOutput_24 = "com.mysql.jdbc.Driver";
		
		String dbUser_tDBOutput_24 = "lectura";
		

		 
	final String decryptedPassword_tDBOutput_24 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:3MslQeb1YyQ7ISRcfftlO9SpRtMEG5OtnxIAp3pISlsrDapZA00E6WE=");

		String dbPwd_tDBOutput_24 = decryptedPassword_tDBOutput_24;
		java.lang.Class.forName(driverClass_tDBOutput_24);
		
		conn_tDBOutput_24 = java.sql.DriverManager.getConnection(url_tDBOutput_24, dbUser_tDBOutput_24, dbPwd_tDBOutput_24);
		
	
	resourceMap.put("conn_tDBOutput_24", conn_tDBOutput_24);
        conn_tDBOutput_24.setAutoCommit(false);
        int commitEvery_tDBOutput_24 = 10000;
        int commitCounter_tDBOutput_24 = 0;

int count_tDBOutput_24=0;
    	
	    java.sql.PreparedStatement pstmt_tDBOutput_24 = conn_tDBOutput_24.prepareStatement("SELECT COUNT(1) FROM `" + "secuencias_kdispersion" + "` WHERE `ID_SECUENCIAS_ACTA` = ?");
	    resourceMap.put("pstmt_tDBOutput_24", pstmt_tDBOutput_24);
	    String insert_tDBOutput_24 = "INSERT INTO `" + "secuencias_kdispersion" + "` (`FechaAsignacion`,`Equipo_Trabajo`,`UNIDAD_OPERATIVA`,`Tarea`,`DescTarea`,`Orden`,`Ciclo`,`servicio`,`Estado`,`Desc_estado`,`FechaCREATED`,`Fechalegalization`,`Horalegalization`,`Instalacion`,`urbano_rural`,`ortrinur`,`descripciona`,`Ciudad`,`cmrudesc`,`region`,`regndesc`,`depacodi`,`codigorespuesta`,`respuestatencion`,`x`,`y`,`Ano`,`Mes`,`Dia`,`desc_cna`,`ACTIVIDAD`,`DESC_ACTIVIDAD`,`FRECUENCIA`,`CUENTAS_VENCIDAS`,`SALDO_CUENTAS_VENCIDAS`,`ESTADO_CORTE`,`TIPO_ACTIVIDAD`,`ROUTE_ID`,`NAME_`,`NUMBER_ID`,`CODIGO_CAUSANL_OBS`,`CAUSANL_OBS`,`CODIGO_CAUSANL_OBS2`,`CAUSANL_OBS2`,`CODIGO_CAUSANL_OBS3`,`CAUSANL_OBS3`,`SERVICIO_SUSCRITO`,`COD_TIPO_SERVICIO`,`TIPO_SERVICIO`,`categoria`,`ESTRATO`,`DESC_SERVICIO`,`orden_relacionada`,`order_activity_ID`,`Adjunto`,`ID_SECUENCIAS_ACTA`,`K_DISPERSION`,`SIGLA_ACTIVIDAD`,`VALOR_UNITARIO`,`VALOR_K`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
	        
	    java.sql.PreparedStatement pstmtInsert_tDBOutput_24 = conn_tDBOutput_24.prepareStatement(insert_tDBOutput_24);
	    resourceMap.put("pstmtInsert_tDBOutput_24", pstmtInsert_tDBOutput_24);
	    String update_tDBOutput_24 = "UPDATE `" + "secuencias_kdispersion" + "` SET `FechaAsignacion` = ?,`Equipo_Trabajo` = ?,`UNIDAD_OPERATIVA` = ?,`Tarea` = ?,`DescTarea` = ?,`Orden` = ?,`Ciclo` = ?,`servicio` = ?,`Estado` = ?,`Desc_estado` = ?,`FechaCREATED` = ?,`Fechalegalization` = ?,`Horalegalization` = ?,`Instalacion` = ?,`urbano_rural` = ?,`ortrinur` = ?,`descripciona` = ?,`Ciudad` = ?,`cmrudesc` = ?,`region` = ?,`regndesc` = ?,`depacodi` = ?,`codigorespuesta` = ?,`respuestatencion` = ?,`x` = ?,`y` = ?,`Ano` = ?,`Mes` = ?,`Dia` = ?,`desc_cna` = ?,`ACTIVIDAD` = ?,`DESC_ACTIVIDAD` = ?,`FRECUENCIA` = ?,`CUENTAS_VENCIDAS` = ?,`SALDO_CUENTAS_VENCIDAS` = ?,`ESTADO_CORTE` = ?,`TIPO_ACTIVIDAD` = ?,`ROUTE_ID` = ?,`NAME_` = ?,`NUMBER_ID` = ?,`CODIGO_CAUSANL_OBS` = ?,`CAUSANL_OBS` = ?,`CODIGO_CAUSANL_OBS2` = ?,`CAUSANL_OBS2` = ?,`CODIGO_CAUSANL_OBS3` = ?,`CAUSANL_OBS3` = ?,`SERVICIO_SUSCRITO` = ?,`COD_TIPO_SERVICIO` = ?,`TIPO_SERVICIO` = ?,`categoria` = ?,`ESTRATO` = ?,`DESC_SERVICIO` = ?,`orden_relacionada` = ?,`order_activity_ID` = ?,`Adjunto` = ?,`K_DISPERSION` = ?,`SIGLA_ACTIVIDAD` = ?,`VALOR_UNITARIO` = ?,`VALOR_K` = ? WHERE `ID_SECUENCIAS_ACTA` = ?";
	    
	    java.sql.PreparedStatement pstmtUpdate_tDBOutput_24 = conn_tDBOutput_24.prepareStatement(update_tDBOutput_24);
	    resourceMap.put("pstmtUpdate_tDBOutput_24", pstmtUpdate_tDBOutput_24);
	    

 



/**
 * [tDBOutput_24 begin ] stop
 */



	
	/**
	 * [tMap_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_24", false);
		start_Hash.put("tMap_24", System.currentTimeMillis());
		
	
	currentComponent="tMap_24";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row23");
					}
				
		int tos_count_tMap_24 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_24__Struct  {
}
Var__tMap_24__Struct Var__tMap_24 = new Var__tMap_24__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp = new copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1Struct();
// ###############################

        
        



        









 



/**
 * [tMap_24 begin ] stop
 */



	
	/**
	 * [tDBInput_24 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_24", false);
		start_Hash.put("tDBInput_24", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_24";

	
		int tos_count_tDBInput_24 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_24 = java.util.Calendar.getInstance();
		    calendar_tDBInput_24.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_24 = calendar_tDBInput_24.getTime();
		    int nb_line_tDBInput_24 = 0;
		    java.sql.Connection conn_tDBInput_24 = null;
				String driverClass_tDBInput_24 = "com.mysql.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_24 = java.lang.Class.forName(driverClass_tDBInput_24);
				String dbUser_tDBInput_24 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_24 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:5zWh7kUAYJFn9HY3Bfh39EjJqM77fWMh1xLlFrQYH2/PmSz0388RYaU=");
				
				String dbPwd_tDBInput_24 = decryptedPassword_tDBInput_24;
				
				String url_tDBInput_24 = "jdbc:mysql://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_24 = java.sql.DriverManager.getConnection(url_tDBInput_24,dbUser_tDBInput_24,dbPwd_tDBInput_24);
		        
		    
			java.sql.Statement stmt_tDBInput_24 = conn_tDBInput_24.createStatement();

		    String dbquery_tDBInput_24 = "select \n     a.FechaAsignacion  ,\n	 a.Equipo_Trabajo  ,\n	 a.UNIDAD_OPERATIVA  ,\n	 a.Tarea  ,\n	 a.DescTarea  ,\n	 a"
+".Orden  ,\n	 a.Ciclo  ,\n	 a.servicio  ,\n	 a.Estado  ,\n	 a.Desc_estado  ,\n	 a.FechaCREATED  ,\n	 a.Fechalegalization "
+" ,\n	 a.Horalegalization  ,\n	 a.Instalacion  ,\n	 a.urbano_rural  ,\n	 a.ortrinur  ,\n	 a.descripciona  ,\n	 a.Ciudad  "
+",\n	 a.cmrudesc  ,\n	 a.region  ,\n	 a.regndesc  ,\n	 a.depacodi  ,\n	 a.codigorespuesta  ,\n	 a.respuestatencion  ,\n	 "
+"a.x  ,\n	 a.y  ,\n	 a.Ano  ,\n	 a.Mes  ,\n	 a.Dia  ,\n	 a.desc_cna  ,\n	 a.ACTIVIDAD  ,\n	 a.DESC_ACTIVIDAD  ,\n	 a.FREC"
+"UENCIA ,\n	 a.CUENTAS_VENCIDAS  ,\n	 a.SALDO_CUENTAS_VENCIDAS  ,\n	 a.ESTADO_CORTE  ,\n	 a.TIPO_ACTIVIDAD  ,\n	 a.ROUTE_"
+"ID  ,\n	 a.NAME_  ,\n	 a.NUMBER_ID  ,\n	 a.CODIGO_CAUSANL_OBS  ,\n	 a.CAUSANL_OBS  ,\n	 a.CODIGO_CAUSANL_OBS2  ,\n	 a.CA"
+"USANL_OBS2  ,\n	 a.CODIGO_CAUSANL_OBS3  ,\n	 a.CAUSANL_OBS3  ,\n	 a.SERVICIO_SUSCRITO  ,\n	 a.COD_TIPO_SERVICIO  ,\n	 a."
+"TIPO_SERVICIO  ,\n	 a.categoria  ,\n	 a.ESTRATO  ,\n	 a.DESC_SERVICIO  ,\n	 a.orden_relacionada  ,\n	 a.order_activity_I"
+"D  ,\n	 a.Adjunto  ,\n	 a.ID_SECUENCIAS_ACTA ,\n'1'K_DISPERSION,\n'verif'SIGLA_ACTIVIDAD\n,(SELECT c.PRICE FROM acta_pre"
+"cios c where c.ITEMS_ID = '3382' AND c.MERCADO ='REGIONAL'  )VALOR_UNITARIO\n,((SELECT c.PRICE FROM acta_precios c where"
+" c.ITEMS_ID = '3382' AND c.MERCADO = 'REGIONAL' )*1) VALOR_K\n\nfrom secuencias_acta1 a\nwhere \n  a.id_secuencias_acta "
+"not in (SELECT id_secuencias_acta FROM secuencias_kdispersion )\n\nand a.FECHALEGALIZATION >= (select (CONCAT(COD_ANO,CO"
+"D_MES,'01')) from consulta_fecha_k_dispersion)\nand a.FECHALEGALIZATION <=(select (CONCAT(COD_ANO,COD_MES,'31')) from co"
+"nsulta_fecha_k_dispersion)";
			

            	globalMap.put("tDBInput_24_QUERY",dbquery_tDBInput_24);
		    java.sql.ResultSet rs_tDBInput_24 = null;

		    try {
		    	rs_tDBInput_24 = stmt_tDBInput_24.executeQuery(dbquery_tDBInput_24);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_24 = rs_tDBInput_24.getMetaData();
		    	int colQtyInRs_tDBInput_24 = rsmd_tDBInput_24.getColumnCount();

		    String tmpContent_tDBInput_24 = null;
		    
		    
		    while (rs_tDBInput_24.next()) {
		        nb_line_tDBInput_24++;
		        
							if(colQtyInRs_tDBInput_24 < 1) {
								row23.FechaAsignacion = null;
							} else {
	                         		
        	row23.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_24, 1, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 2) {
								row23.Equipo_Trabajo = null;
							} else {
	                         		
        	row23.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_24, 2, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 3) {
								row23.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row23.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_24, 3, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 4) {
								row23.Tarea = null;
							} else {
	                         		
        	row23.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_24, 4, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 5) {
								row23.DescTarea = null;
							} else {
	                         		
        	row23.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_24, 5, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 6) {
								row23.Orden = null;
							} else {
	                         		
        	row23.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_24, 6, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 7) {
								row23.Ciclo = null;
							} else {
	                         		
        	row23.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_24, 7, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 8) {
								row23.servicio = null;
							} else {
	                         		
        	row23.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_24, 8, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 9) {
								row23.Estado = null;
							} else {
	                         		
        	row23.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_24, 9, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 10) {
								row23.Desc_estado = null;
							} else {
	                         		
        	row23.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_24, 10, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 11) {
								row23.FechaCREATED = null;
							} else {
	                         		
        	row23.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_24, 11, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 12) {
								row23.Fechalegalization = null;
							} else {
	                         		
        	row23.Fechalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_24, 12, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 13) {
								row23.Horalegalization = null;
							} else {
	                         		
        	row23.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_24, 13, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 14) {
								row23.Instalacion = null;
							} else {
	                         		
        	row23.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_24, 14, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 15) {
								row23.urbano_rural = null;
							} else {
	                         		
        	row23.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_24, 15, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 16) {
								row23.ortrinur = null;
							} else {
	                         		
        	row23.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_24, 16, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 17) {
								row23.descripciona = null;
							} else {
	                         		
        	row23.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_24, 17, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 18) {
								row23.Ciudad = null;
							} else {
	                         		
        	row23.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_24, 18, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 19) {
								row23.cmrudesc = null;
							} else {
	                         		
        	row23.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_24, 19, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 20) {
								row23.region = null;
							} else {
	                         		
        	row23.region = routines.system.JDBCUtil.getString(rs_tDBInput_24, 20, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 21) {
								row23.regndesc = null;
							} else {
	                         		
        	row23.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_24, 21, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 22) {
								row23.depacodi = null;
							} else {
	                         		
        	row23.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_24, 22, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 23) {
								row23.codigorespuesta = null;
							} else {
	                         		
        	row23.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_24, 23, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 24) {
								row23.respuestatencion = null;
							} else {
	                         		
        	row23.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_24, 24, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 25) {
								row23.x = null;
							} else {
	                         		
        	row23.x = routines.system.JDBCUtil.getString(rs_tDBInput_24, 25, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 26) {
								row23.y = null;
							} else {
	                         		
        	row23.y = routines.system.JDBCUtil.getString(rs_tDBInput_24, 26, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 27) {
								row23.Ano = null;
							} else {
	                         		
        	row23.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_24, 27, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 28) {
								row23.Mes = null;
							} else {
	                         		
        	row23.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_24, 28, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 29) {
								row23.Dia = null;
							} else {
	                         		
        	row23.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_24, 29, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 30) {
								row23.desc_cna = null;
							} else {
	                         		
        	row23.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_24, 30, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 31) {
								row23.ACTIVIDAD = null;
							} else {
	                         		
        	row23.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_24, 31, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 32) {
								row23.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row23.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_24, 32, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 33) {
								row23.FRECUENCIA = null;
							} else {
	                         		
        	row23.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_24, 33, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 34) {
								row23.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row23.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_24, 34, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 35) {
								row23.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row23.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_24, 35, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 36) {
								row23.ESTADO_CORTE = null;
							} else {
	                         		
        	row23.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_24, 36, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 37) {
								row23.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row23.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_24, 37, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 38) {
								row23.ROUTE_ID = null;
							} else {
	                         		
        	row23.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_24, 38, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 39) {
								row23.NAME_ = null;
							} else {
	                         		
        	row23.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_24, 39, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 40) {
								row23.NUMBER_ID = null;
							} else {
	                         		
        	row23.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_24, 40, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 41) {
								row23.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row23.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_24, 41, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 42) {
								row23.CAUSANL_OBS = null;
							} else {
	                         		
        	row23.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_24, 42, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 43) {
								row23.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row23.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_24, 43, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 44) {
								row23.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row23.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_24, 44, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 45) {
								row23.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row23.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_24, 45, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 46) {
								row23.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row23.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_24, 46, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 47) {
								row23.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row23.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_24, 47, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 48) {
								row23.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row23.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_24, 48, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 49) {
								row23.TIPO_SERVICIO = null;
							} else {
	                         		
        	row23.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_24, 49, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 50) {
								row23.categoria = null;
							} else {
	                         		
        	row23.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_24, 50, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 51) {
								row23.ESTRATO = null;
							} else {
	                         		
        	row23.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_24, 51, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 52) {
								row23.DESC_SERVICIO = null;
							} else {
	                         		
        	row23.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_24, 52, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 53) {
								row23.orden_relacionada = null;
							} else {
	                         		
        	row23.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_24, 53, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 54) {
								row23.order_activity_ID = null;
							} else {
	                         		
        	row23.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_24, 54, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 55) {
								row23.Adjunto = null;
							} else {
	                         		
        	row23.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_24, 55, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 56) {
								row23.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row23.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_24, 56, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 57) {
								row23.K_DISPERSION = null;
							} else {
	                         		
        	row23.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_24, 57, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 58) {
								row23.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row23.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_24, 58, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 59) {
								row23.VALOR_UNITARIO = null;
							} else {
	                         		
        	row23.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_24, 59, false);
		                    }
							if(colQtyInRs_tDBInput_24 < 60) {
								row23.VALOR_K = null;
							} else {
	                         		
        	row23.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_24, 60, false);
		                    }
					

 



/**
 * [tDBInput_24 begin ] stop
 */
	
	/**
	 * [tDBInput_24 main ] start
	 */

	

	
	
	currentComponent="tDBInput_24";

	

 


	tos_count_tDBInput_24++;

/**
 * [tDBInput_24 main ] stop
 */
	
	/**
	 * [tDBInput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_24";

	

 



/**
 * [tDBInput_24 process_data_begin ] stop
 */

	
	/**
	 * [tMap_24 main ] start
	 */

	

	
	
	currentComponent="tMap_24";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row23");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_24 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_24 = false;
		  boolean mainRowRejected_tMap_24 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_24__Struct Var = Var__tMap_24;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = null;


// # Output table : 'copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1'
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaAsignacion = row23.FechaAsignacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Equipo_Trabajo = row23.Equipo_Trabajo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.UNIDAD_OPERATIVA = row23.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Tarea = row23.Tarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DescTarea = row23.DescTarea;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Orden = row23.Orden;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciclo = row23.Ciclo;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.servicio = row23.servicio;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Estado = row23.Estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Desc_estado = row23.Desc_estado;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FechaCREATED = row23.FechaCREATED;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Fechalegalization = row23.Fechalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Horalegalization = row23.Horalegalization;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Instalacion = row23.Instalacion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.urbano_rural = row23.urbano_rural;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ortrinur = row23.ortrinur;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.descripciona = row23.descripciona;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ciudad = row23.Ciudad;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.cmrudesc = row23.cmrudesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.region = row23.region;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.regndesc = row23.regndesc;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.depacodi = row23.depacodi;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.codigorespuesta = row23.codigorespuesta;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.respuestatencion = row23.respuestatencion;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.x = row23.x;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.y = row23.y;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Ano = row23.Ano;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Mes = row23.Mes;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Dia = row23.Dia;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.desc_cna = row23.desc_cna;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ACTIVIDAD = row23.ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_ACTIVIDAD = row23.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.FRECUENCIA = row23.FRECUENCIA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CUENTAS_VENCIDAS = row23.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SALDO_CUENTAS_VENCIDAS = row23.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTADO_CORTE = row23.ESTADO_CORTE;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_ACTIVIDAD = row23.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ROUTE_ID = row23.ROUTE_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NAME_ = row23.NAME_;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.NUMBER_ID = row23.NUMBER_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS = row23.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS = row23.CAUSANL_OBS;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS2 = row23.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS2 = row23.CAUSANL_OBS2;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CODIGO_CAUSANL_OBS3 = row23.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.CAUSANL_OBS3 = row23.CAUSANL_OBS3;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SERVICIO_SUSCRITO = row23.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.COD_TIPO_SERVICIO = row23.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.TIPO_SERVICIO = row23.TIPO_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.categoria = row23.categoria;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ESTRATO = row23.ESTRATO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.DESC_SERVICIO = row23.DESC_SERVICIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.orden_relacionada = row23.orden_relacionada;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.order_activity_ID = row23.order_activity_ID;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.Adjunto = row23.Adjunto;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.ID_SECUENCIAS_ACTA = row23.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.K_DISPERSION = row23.K_DISPERSION;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.SIGLA_ACTIVIDAD = row23.SIGLA_ACTIVIDAD;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_UNITARIO = row23.VALOR_UNITARIO;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp.VALOR_K = row23.VALOR_K;
copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 = copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_24 = false;










 


	tos_count_tMap_24++;

/**
 * [tMap_24 main ] stop
 */
	
	/**
	 * [tMap_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_24";

	

 



/**
 * [tMap_24 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"
if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1 != null) { 



	
	/**
	 * [tDBOutput_24 main ] start
	 */

	

	
	
	currentComponent="tDBOutput_24";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
					}
					



        whetherReject_tDBOutput_24 = false;
                    if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmt_tDBOutput_24.setNull(1, java.sql.Types.VARCHAR);
} else {pstmt_tDBOutput_24.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

            int checkCount_tDBOutput_24 = -1;
            try (java.sql.ResultSet rs_tDBOutput_24 = pstmt_tDBOutput_24.executeQuery()) {
                while(rs_tDBOutput_24.next()) {
                    checkCount_tDBOutput_24 = rs_tDBOutput_24.getInt(1);
                }
            }
            if(checkCount_tDBOutput_24 > 0) {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtUpdate_tDBOutput_24.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtUpdate_tDBOutput_24.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtUpdate_tDBOutput_24.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtUpdate_tDBOutput_24.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtUpdate_tDBOutput_24.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtUpdate_tDBOutput_24.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtUpdate_tDBOutput_24.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtUpdate_tDBOutput_24.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtUpdate_tDBOutput_24.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtUpdate_tDBOutput_24.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtUpdate_tDBOutput_24.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtUpdate_tDBOutput_24.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtUpdate_tDBOutput_24.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtUpdate_tDBOutput_24.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtUpdate_tDBOutput_24.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtUpdate_tDBOutput_24.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtUpdate_tDBOutput_24.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtUpdate_tDBOutput_24.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtUpdate_tDBOutput_24.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtUpdate_tDBOutput_24.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtUpdate_tDBOutput_24.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtUpdate_tDBOutput_24.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtUpdate_tDBOutput_24.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtUpdate_tDBOutput_24.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtUpdate_tDBOutput_24.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtUpdate_tDBOutput_24.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtUpdate_tDBOutput_24.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtUpdate_tDBOutput_24.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtUpdate_tDBOutput_24.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtUpdate_tDBOutput_24.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_24.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_24.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtUpdate_tDBOutput_24.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_24.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtUpdate_tDBOutput_24.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtUpdate_tDBOutput_24.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_24.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtUpdate_tDBOutput_24.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtUpdate_tDBOutput_24.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtUpdate_tDBOutput_24.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_24.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtUpdate_tDBOutput_24.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_24.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtUpdate_tDBOutput_24.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_24.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtUpdate_tDBOutput_24.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtUpdate_tDBOutput_24.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_24.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtUpdate_tDBOutput_24.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtUpdate_tDBOutput_24.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtUpdate_tDBOutput_24.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtUpdate_tDBOutput_24.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtUpdate_tDBOutput_24.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtUpdate_tDBOutput_24.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtUpdate_tDBOutput_24.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtUpdate_tDBOutput_24.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtUpdate_tDBOutput_24.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtUpdate_tDBOutput_24.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtUpdate_tDBOutput_24.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtUpdate_tDBOutput_24.setNull(60 + count_tDBOutput_24, java.sql.Types.VARCHAR);
} else {pstmtUpdate_tDBOutput_24.setString(60 + count_tDBOutput_24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                try {
                    updatedCount_tDBOutput_24 = updatedCount_tDBOutput_24 + pstmtUpdate_tDBOutput_24.executeUpdate();
                    nb_line_tDBOutput_24++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_24 = true;
                        nb_line_tDBOutput_24++;
                            System.err.print(e.getMessage());
                }
            } else {
                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion == null) {
pstmtInsert_tDBOutput_24.setNull(1, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(1, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaAsignacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo == null) {
pstmtInsert_tDBOutput_24.setNull(2, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(2, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Equipo_Trabajo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA == null) {
pstmtInsert_tDBOutput_24.setNull(3, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(3, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.UNIDAD_OPERATIVA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea == null) {
pstmtInsert_tDBOutput_24.setNull(4, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(4, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Tarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea == null) {
pstmtInsert_tDBOutput_24.setNull(5, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(5, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DescTarea);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden == null) {
pstmtInsert_tDBOutput_24.setNull(6, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(6, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Orden);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo == null) {
pstmtInsert_tDBOutput_24.setNull(7, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(7, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciclo);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio == null) {
pstmtInsert_tDBOutput_24.setNull(8, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(8, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.servicio);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado == null) {
pstmtInsert_tDBOutput_24.setNull(9, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(9, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado == null) {
pstmtInsert_tDBOutput_24.setNull(10, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(10, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Desc_estado);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED == null) {
pstmtInsert_tDBOutput_24.setNull(11, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(11, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FechaCREATED);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization == null) {
pstmtInsert_tDBOutput_24.setNull(12, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(12, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Fechalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization == null) {
pstmtInsert_tDBOutput_24.setNull(13, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(13, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Horalegalization);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion == null) {
pstmtInsert_tDBOutput_24.setNull(14, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(14, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Instalacion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural == null) {
pstmtInsert_tDBOutput_24.setNull(15, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(15, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.urbano_rural);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur == null) {
pstmtInsert_tDBOutput_24.setNull(16, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(16, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ortrinur);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona == null) {
pstmtInsert_tDBOutput_24.setNull(17, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(17, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.descripciona);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad == null) {
pstmtInsert_tDBOutput_24.setNull(18, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(18, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ciudad);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc == null) {
pstmtInsert_tDBOutput_24.setNull(19, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(19, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.cmrudesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region == null) {
pstmtInsert_tDBOutput_24.setNull(20, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(20, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.region);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc == null) {
pstmtInsert_tDBOutput_24.setNull(21, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(21, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.regndesc);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi == null) {
pstmtInsert_tDBOutput_24.setNull(22, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(22, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.depacodi);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta == null) {
pstmtInsert_tDBOutput_24.setNull(23, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(23, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.codigorespuesta);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion == null) {
pstmtInsert_tDBOutput_24.setNull(24, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(24, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.respuestatencion);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x == null) {
pstmtInsert_tDBOutput_24.setNull(25, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(25, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.x);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y == null) {
pstmtInsert_tDBOutput_24.setNull(26, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(26, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.y);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano == null) {
pstmtInsert_tDBOutput_24.setNull(27, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(27, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Ano);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes == null) {
pstmtInsert_tDBOutput_24.setNull(28, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(28, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Mes);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia == null) {
pstmtInsert_tDBOutput_24.setNull(29, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(29, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Dia);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna == null) {
pstmtInsert_tDBOutput_24.setNull(30, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(30, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.desc_cna);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD == null) {
pstmtInsert_tDBOutput_24.setNull(31, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(31, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_24.setNull(32, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(32, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA == null) {
pstmtInsert_tDBOutput_24.setNull(33, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(33, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.FRECUENCIA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_24.setNull(34, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(34, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS == null) {
pstmtInsert_tDBOutput_24.setNull(35, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(35, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SALDO_CUENTAS_VENCIDAS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE == null) {
pstmtInsert_tDBOutput_24.setNull(36, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(36, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTADO_CORTE);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_24.setNull(37, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(37, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID == null) {
pstmtInsert_tDBOutput_24.setNull(38, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(38, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ROUTE_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_ == null) {
pstmtInsert_tDBOutput_24.setNull(39, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(39, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NAME_);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID == null) {
pstmtInsert_tDBOutput_24.setNull(40, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(40, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.NUMBER_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_24.setNull(41, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(41, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS == null) {
pstmtInsert_tDBOutput_24.setNull(42, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(42, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_24.setNull(43, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(43, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2 == null) {
pstmtInsert_tDBOutput_24.setNull(44, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(44, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS2);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_24.setNull(45, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(45, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CODIGO_CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3 == null) {
pstmtInsert_tDBOutput_24.setNull(46, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(46, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.CAUSANL_OBS3);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO == null) {
pstmtInsert_tDBOutput_24.setNull(47, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(47, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SERVICIO_SUSCRITO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_24.setNull(48, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(48, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.COD_TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO == null) {
pstmtInsert_tDBOutput_24.setNull(49, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(49, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.TIPO_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria == null) {
pstmtInsert_tDBOutput_24.setNull(50, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(50, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.categoria);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO == null) {
pstmtInsert_tDBOutput_24.setNull(51, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(51, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ESTRATO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO == null) {
pstmtInsert_tDBOutput_24.setNull(52, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(52, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.DESC_SERVICIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada == null) {
pstmtInsert_tDBOutput_24.setNull(53, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(53, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.orden_relacionada);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID == null) {
pstmtInsert_tDBOutput_24.setNull(54, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(54, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.order_activity_ID);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto == null) {
pstmtInsert_tDBOutput_24.setNull(55, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(55, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.Adjunto);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA == null) {
pstmtInsert_tDBOutput_24.setNull(56, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(56, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.ID_SECUENCIAS_ACTA);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION == null) {
pstmtInsert_tDBOutput_24.setNull(57, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(57, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.K_DISPERSION);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD == null) {
pstmtInsert_tDBOutput_24.setNull(58, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(58, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.SIGLA_ACTIVIDAD);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO == null) {
pstmtInsert_tDBOutput_24.setNull(59, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(59, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_UNITARIO);
}

                        if(copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K == null) {
pstmtInsert_tDBOutput_24.setNull(60, java.sql.Types.VARCHAR);
} else {pstmtInsert_tDBOutput_24.setString(60, copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1.VALOR_K);
}

                try {
                    insertedCount_tDBOutput_24 = insertedCount_tDBOutput_24 + pstmtInsert_tDBOutput_24.executeUpdate();
                    nb_line_tDBOutput_24++;
                } catch(java.lang.Exception e) {
                    whetherReject_tDBOutput_24 = true;
                        nb_line_tDBOutput_24++;
                            System.err.print(e.getMessage());
                }
            }
            if(!whetherReject_tDBOutput_24) {
            }
                commitCounter_tDBOutput_24++;

                if(commitEvery_tDBOutput_24 <= commitCounter_tDBOutput_24) {

                    conn_tDBOutput_24.commit();
                    commitCounter_tDBOutput_24=0;

                }


 


	tos_count_tDBOutput_24++;

/**
 * [tDBOutput_24 main ] stop
 */
	
	/**
	 * [tDBOutput_24 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBOutput_24";

	

 



/**
 * [tDBOutput_24 process_data_begin ] stop
 */
	
	/**
	 * [tDBOutput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBOutput_24";

	

 



/**
 * [tDBOutput_24 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1"




	
	/**
	 * [tMap_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_24";

	

 



/**
 * [tMap_24 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_24 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_24";

	

 



/**
 * [tDBInput_24 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_24 end ] start
	 */

	

	
	
	currentComponent="tDBInput_24";

	

	}
}finally{
	if (rs_tDBInput_24 != null) {
		rs_tDBInput_24.close();
	}
	if (stmt_tDBInput_24 != null) {
		stmt_tDBInput_24.close();
	}
		if(conn_tDBInput_24 != null && !conn_tDBInput_24.isClosed()) {
			
			conn_tDBInput_24.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_24_NB_LINE",nb_line_tDBInput_24);
		


 

ok_Hash.put("tDBInput_24", true);
end_Hash.put("tDBInput_24", System.currentTimeMillis());




/**
 * [tDBInput_24 end ] stop
 */

	
	/**
	 * [tMap_24 end ] start
	 */

	

	
	
	currentComponent="tMap_24";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row23");
			  	}
			  	
 

ok_Hash.put("tMap_24", true);
end_Hash.put("tMap_24", System.currentTimeMillis());




/**
 * [tMap_24 end ] stop
 */

	
	/**
	 * [tDBOutput_24 end ] start
	 */

	

	
	
	currentComponent="tDBOutput_24";

	



        if(pstmtUpdate_tDBOutput_24 != null){
            pstmtUpdate_tDBOutput_24.close();
            resourceMap.remove("pstmtUpdate_tDBOutput_24");
        }
        if(pstmtInsert_tDBOutput_24 != null){
            pstmtInsert_tDBOutput_24.close();
            resourceMap.remove("pstmtInsert_tDBOutput_24");
        }
        if(pstmt_tDBOutput_24 != null) {
            pstmt_tDBOutput_24.close();
            resourceMap.remove("pstmt_tDBOutput_24");
        }
    resourceMap.put("statementClosed_tDBOutput_24", true);
    	if (commitCounter_tDBOutput_24 > 0) {
    		
    		conn_tDBOutput_24.commit();
    		
    	}
    		
		
    	conn_tDBOutput_24 .close();
    	
    	resourceMap.put("finish_tDBOutput_24", true);
    	

	nb_line_deleted_tDBOutput_24=nb_line_deleted_tDBOutput_24+ deletedCount_tDBOutput_24;
	nb_line_update_tDBOutput_24=nb_line_update_tDBOutput_24 + updatedCount_tDBOutput_24;
	nb_line_inserted_tDBOutput_24=nb_line_inserted_tDBOutput_24 + insertedCount_tDBOutput_24;
	nb_line_rejected_tDBOutput_24=nb_line_rejected_tDBOutput_24 + rejectedCount_tDBOutput_24;
	
        globalMap.put("tDBOutput_24_NB_LINE",nb_line_tDBOutput_24);
        globalMap.put("tDBOutput_24_NB_LINE_UPDATED",nb_line_update_tDBOutput_24);
        globalMap.put("tDBOutput_24_NB_LINE_INSERTED",nb_line_inserted_tDBOutput_24);
        globalMap.put("tDBOutput_24_NB_LINE_DELETED",nb_line_deleted_tDBOutput_24);
        globalMap.put("tDBOutput_24_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_24);
    
	

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfcopyOfKDISPERSION_DETALLE_1");
			  	}
			  	
 

ok_Hash.put("tDBOutput_24", true);
end_Hash.put("tDBOutput_24", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk25", 0, "ok");
				}
				tDBInput_1Process(globalMap);



/**
 * [tDBOutput_24 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_24 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_24";

	

 



/**
 * [tDBInput_24 finally ] stop
 */

	
	/**
	 * [tMap_24 finally ] start
	 */

	

	
	
	currentComponent="tMap_24";

	

 



/**
 * [tMap_24 finally ] stop
 */

	
	/**
	 * [tDBOutput_24 finally ] start
	 */

	

	
	
	currentComponent="tDBOutput_24";

	



    try {
    if (resourceMap.get("statementClosed_tDBOutput_24") == null) {
                java.sql.PreparedStatement pstmtUpdateToClose_tDBOutput_24 = null;
                if ((pstmtUpdateToClose_tDBOutput_24 = (java.sql.PreparedStatement) resourceMap.remove("pstmtUpdate_tDBOutput_24")) != null) {
                    pstmtUpdateToClose_tDBOutput_24.close();
                }
                java.sql.PreparedStatement pstmtInsertToClose_tDBOutput_24 = null;
                if ((pstmtInsertToClose_tDBOutput_24 = (java.sql.PreparedStatement) resourceMap.remove("pstmtInsert_tDBOutput_24")) != null) {
                    pstmtInsertToClose_tDBOutput_24.close();
                }
                java.sql.PreparedStatement pstmtToClose_tDBOutput_24 = null;
                if ((pstmtToClose_tDBOutput_24 = (java.sql.PreparedStatement) resourceMap.remove("pstmt_tDBOutput_24")) != null) {
                    pstmtToClose_tDBOutput_24.close();
                }
    }
    } finally {
        if(resourceMap.get("finish_tDBOutput_24") == null){
            java.sql.Connection ctn_tDBOutput_24 = null;
            if((ctn_tDBOutput_24 = (java.sql.Connection)resourceMap.get("conn_tDBOutput_24")) != null){
                try {
                    ctn_tDBOutput_24.close();
                } catch (java.sql.SQLException sqlEx_tDBOutput_24) {
                    String errorMessage_tDBOutput_24 = "failed to close the connection in tDBOutput_24 :" + sqlEx_tDBOutput_24.getMessage();
                    System.err.println(errorMessage_tDBOutput_24);
                }
            }
        }
    }
 



/**
 * [tDBOutput_24 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_24_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfcopyOfsecuencia_actaStruct implements routines.system.IPersistableRow<copyOfcopyOfcopyOfsecuencia_actaStruct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfcopyOfsecuencia_actaStruct other = (copyOfcopyOfcopyOfsecuencia_actaStruct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfcopyOfsecuencia_actaStruct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfcopyOfsecuencia_actaStruct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfcopyOfsecuencia_actaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row1Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row1Struct row1 = new row1Struct();
copyOfcopyOfcopyOfsecuencia_actaStruct copyOfcopyOfcopyOfsecuencia_acta = new copyOfcopyOfcopyOfsecuencia_actaStruct();





	
	/**
	 * [tFileOutputExcel_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_1", false);
		start_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfcopyOfsecuencia_acta");
					}
				
		int tos_count_tFileOutputExcel_1 = 0;
		


		int columnIndex_tFileOutputExcel_1 = 0;
		
		String fileName_tFileOutputExcel_1="C:/Users/Administrador/OneDrive - ingeomega.com/03_Procesos Informáticos/10 Alexander Orozco/02 Acta Con Precio/Del 1 al 15 Acta Con Precio.xlsx";
		int nb_line_tFileOutputExcel_1 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_1 = new org.talend.ExcelTool();
		
		xlsxTool_tFileOutputExcel_1.setSheet("Acta_Con_Precio_1_15");
		xlsxTool_tFileOutputExcel_1.setAppend(false,false);
		xlsxTool_tFileOutputExcel_1.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_1.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_1 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_1 = chm_tFileOutputExcel_1.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_1", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_1) {
			
				xlsxTool_tFileOutputExcel_1.prepareXlsxFile(fileName_tFileOutputExcel_1);
			
		}
		
		xlsxTool_tFileOutputExcel_1.setFont("");
		
		if (xlsxTool_tFileOutputExcel_1.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_1.addRow();
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FechaAsignacion");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Equipo_Trabajo");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("UNIDAD_OPERATIVA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Tarea");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DescTarea");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Orden");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Ciclo");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("servicio");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Estado");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Desc_estado");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FechaCREATED");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Horalegalization");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Instalacion");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("urbano_rural");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ortrinur");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("descripciona");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Ciudad");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("cmrudesc");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("region");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("regndesc");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("depacodi");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("codigorespuesta");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("respuestatencion");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("x");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("y");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Ano");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Mes");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Dia");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("desc_cna");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESC_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FRECUENCIA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CUENTAS_VENCIDAS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("SALDO_CUENTAS_VENCIDAS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ESTADO_CORTE");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TIPO_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ROUTE_ID");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NAME_");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("NUMBER_ID");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_CAUSANL_OBS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CAUSANL_OBS");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_CAUSANL_OBS2");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CAUSANL_OBS2");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CODIGO_CAUSANL_OBS3");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("CAUSANL_OBS3");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("SERVICIO_SUSCRITO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("COD_TIPO_SERVICIO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("TIPO_SERVICIO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("categoria");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ESTRATO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("DESC_SERVICIO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("orden_relacionada");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("order_activity_ID");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("Adjunto");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("ID_SECUENCIAS_ACTA");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("FECHALEGALIZATION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("K_DISPERSION");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("SIGLA_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_UNITARIO");
		
		xlsxTool_tFileOutputExcel_1.addCellValue("VALOR_K");
		
		nb_line_tFileOutputExcel_1++; 
		
	}
		

 



/**
 * [tFileOutputExcel_1 begin ] stop
 */



	
	/**
	 * [tMap_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_1", false);
		start_Hash.put("tMap_1", System.currentTimeMillis());
		
	
	currentComponent="tMap_1";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row1");
					}
				
		int tos_count_tMap_1 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_1__Struct  {
}
Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfcopyOfsecuencia_actaStruct copyOfcopyOfcopyOfsecuencia_acta_tmp = new copyOfcopyOfcopyOfsecuencia_actaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_1 begin ] stop
 */



	
	/**
	 * [tDBInput_1 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_1", false);
		start_Hash.put("tDBInput_1", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_1";

	
		int tos_count_tDBInput_1 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_1 = java.util.Calendar.getInstance();
		    calendar_tDBInput_1.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_1 = calendar_tDBInput_1.getTime();
		    int nb_line_tDBInput_1 = 0;
		    java.sql.Connection conn_tDBInput_1 = null;
				String driverClass_tDBInput_1 = "org.mariadb.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_1 = java.lang.Class.forName(driverClass_tDBInput_1);
				String dbUser_tDBInput_1 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_1 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:jTZbG/gPOkeE8jVVIkN5TKzXIHAKJ+7uZ6EWoTlQSgExWZklnh2sS1s=");
				
				String dbPwd_tDBInput_1 = decryptedPassword_tDBInput_1;
				
				String url_tDBInput_1 = "jdbc:mariadb://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_1 = java.sql.DriverManager.getConnection(url_tDBInput_1,dbUser_tDBInput_1,dbPwd_tDBInput_1);
		        
		    
			java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

		    String dbquery_tDBInput_1 = "SELECT \na.FechaAsignacion,\na.Equipo_Trabajo,\na.UNIDAD_OPERATIVA,\na.Tarea,\na.DescTarea,\na.Orden,\na.Ciclo,\na.serv"
+"icio,\na.Estado,\na.Desc_estado,\na.FechaCREATED,\na.Horalegalization,\na.Instalacion,\na.urbano_rural,\na.ortrinur,\na."
+"descripciona,\na.Ciudad,\na.cmrudesc,\na.region,\na.regndesc,\na.depacodi,\na.codigorespuesta,\na.respuestatencion,\na.x"
+",\na.y,\na.Ano,\na.Mes,\na.Dia,\na.desc_cna,\na.ACTIVIDAD,\na.DESC_ACTIVIDAD,\na.FRECUENCIA,\na.CUENTAS_VENCIDAS,\na.SAL"
+"DO_CUENTAS_VENCIDAS,\na.ESTADO_CORTE,\na.TIPO_ACTIVIDAD,\na.ROUTE_ID,\na.NAME_,\na.NUMBER_ID,\na.CODIGO_CAUSANL_OBS,\na."
+"CAUSANL_OBS,\na.CODIGO_CAUSANL_OBS2,\na.CAUSANL_OBS2,\na.CODIGO_CAUSANL_OBS3,\na.CAUSANL_OBS3,\na.SERVICIO_SUSCRITO,\na."
+"COD_TIPO_SERVICIO,\na.TIPO_SERVICIO,\na.categoria,\na.ESTRATO,\na.DESC_SERVICIO,\na.orden_relacionada,\na.order_activity"
+"_ID,\na.Adjunto,\nb.ID_SECUENCIAS_ACTA, \nb.FECHALEGALIZATION, \nb.K_DISPERSION,\nb.SIGLA_ACTIVIDAD,\nb.VALOR_UNITARIO,"
+"\nCONCAT((Case when instr(b.VALOR_K,'.') >= 1 then substr(b.VALOR_K,1,(instr(b.VALOR_K,'.')-1))\nelse\nb.VALOR_K\nend),',"
+"',(Case when instr(b.VALOR_K,'.') >= 1 then substr(b.VALOR_K,instr(b.VALOR_K,'.')+1,2)\nelse\n0\nend)) VALOR_K\nFROM ing"
+"eomega.secuencias_acta1 a ,ingeomega.secuencias_kdispersion b\nwhere \na.ID_SECUENCIAS_ACTA=b.ID_SECUENCIAS_ACTA\nAND a."
+"FECHALEGALIZATION=b.FECHALEGALIZATION\nAND a.FECHALEGALIZATION>= (select (CONCAT(COD_ANO,COD_MES,'01')) from consulta_fe"
+"cha_k_dispersion)\nAND a.FECHALEGALIZATION<= (select (CONCAT(COD_ANO,COD_MES,'15')) from consulta_fecha_k_dispersion);";
			

            	globalMap.put("tDBInput_1_QUERY",dbquery_tDBInput_1);
		    java.sql.ResultSet rs_tDBInput_1 = null;

		    try {
		    	rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
		    	int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

		    String tmpContent_tDBInput_1 = null;
		    
		    
		    while (rs_tDBInput_1.next()) {
		        nb_line_tDBInput_1++;
		        
							if(colQtyInRs_tDBInput_1 < 1) {
								row1.FechaAsignacion = null;
							} else {
	                         		
        	row1.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_1, 1, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 2) {
								row1.Equipo_Trabajo = null;
							} else {
	                         		
        	row1.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_1, 2, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 3) {
								row1.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row1.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 3, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 4) {
								row1.Tarea = null;
							} else {
	                         		
        	row1.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_1, 4, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 5) {
								row1.DescTarea = null;
							} else {
	                         		
        	row1.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_1, 5, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 6) {
								row1.Orden = null;
							} else {
	                         		
        	row1.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_1, 6, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 7) {
								row1.Ciclo = null;
							} else {
	                         		
        	row1.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_1, 7, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 8) {
								row1.servicio = null;
							} else {
	                         		
        	row1.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_1, 8, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 9) {
								row1.Estado = null;
							} else {
	                         		
        	row1.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_1, 9, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 10) {
								row1.Desc_estado = null;
							} else {
	                         		
        	row1.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_1, 10, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 11) {
								row1.FechaCREATED = null;
							} else {
	                         		
        	row1.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_1, 11, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 12) {
								row1.Horalegalization = null;
							} else {
	                         		
        	row1.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_1, 12, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 13) {
								row1.Instalacion = null;
							} else {
	                         		
        	row1.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_1, 13, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 14) {
								row1.urbano_rural = null;
							} else {
	                         		
        	row1.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_1, 14, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 15) {
								row1.ortrinur = null;
							} else {
	                         		
        	row1.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_1, 15, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 16) {
								row1.descripciona = null;
							} else {
	                         		
        	row1.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_1, 16, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 17) {
								row1.Ciudad = null;
							} else {
	                         		
        	row1.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_1, 17, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 18) {
								row1.cmrudesc = null;
							} else {
	                         		
        	row1.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 18, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 19) {
								row1.region = null;
							} else {
	                         		
        	row1.region = routines.system.JDBCUtil.getString(rs_tDBInput_1, 19, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 20) {
								row1.regndesc = null;
							} else {
	                         		
        	row1.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_1, 20, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 21) {
								row1.depacodi = null;
							} else {
	                         		
        	row1.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_1, 21, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 22) {
								row1.codigorespuesta = null;
							} else {
	                         		
        	row1.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_1, 22, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 23) {
								row1.respuestatencion = null;
							} else {
	                         		
        	row1.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_1, 23, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 24) {
								row1.x = null;
							} else {
	                         		
        	row1.x = routines.system.JDBCUtil.getString(rs_tDBInput_1, 24, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 25) {
								row1.y = null;
							} else {
	                         		
        	row1.y = routines.system.JDBCUtil.getString(rs_tDBInput_1, 25, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 26) {
								row1.Ano = null;
							} else {
	                         		
        	row1.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_1, 26, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 27) {
								row1.Mes = null;
							} else {
	                         		
        	row1.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_1, 27, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 28) {
								row1.Dia = null;
							} else {
	                         		
        	row1.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_1, 28, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 29) {
								row1.desc_cna = null;
							} else {
	                         		
        	row1.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_1, 29, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 30) {
								row1.ACTIVIDAD = null;
							} else {
	                         		
        	row1.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 30, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 31) {
								row1.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row1.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 31, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 32) {
								row1.FRECUENCIA = null;
							} else {
	                         		
        	row1.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 32, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 33) {
								row1.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row1.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_1, 33, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 34) {
								row1.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row1.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_1, 34, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 35) {
								row1.ESTADO_CORTE = null;
							} else {
	                         		
        	row1.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_1, 35, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 36) {
								row1.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row1.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 36, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 37) {
								row1.ROUTE_ID = null;
							} else {
	                         		
        	row1.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_1, 37, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 38) {
								row1.NAME_ = null;
							} else {
	                         		
        	row1.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_1, 38, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 39) {
								row1.NUMBER_ID = null;
							} else {
	                         		
        	row1.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_1, 39, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 40) {
								row1.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row1.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_1, 40, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 41) {
								row1.CAUSANL_OBS = null;
							} else {
	                         		
        	row1.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_1, 41, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 42) {
								row1.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row1.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_1, 42, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 43) {
								row1.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row1.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_1, 43, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 44) {
								row1.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row1.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_1, 44, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 45) {
								row1.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row1.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_1, 45, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 46) {
								row1.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row1.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 46, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 47) {
								row1.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row1.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 47, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 48) {
								row1.TIPO_SERVICIO = null;
							} else {
	                         		
        	row1.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 48, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 49) {
								row1.categoria = null;
							} else {
	                         		
        	row1.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_1, 49, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 50) {
								row1.ESTRATO = null;
							} else {
	                         		
        	row1.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 50, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 51) {
								row1.DESC_SERVICIO = null;
							} else {
	                         		
        	row1.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 51, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 52) {
								row1.orden_relacionada = null;
							} else {
	                         		
        	row1.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_1, 52, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 53) {
								row1.order_activity_ID = null;
							} else {
	                         		
        	row1.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_1, 53, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 54) {
								row1.Adjunto = null;
							} else {
	                         		
        	row1.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_1, 54, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 55) {
								row1.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row1.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_1, 55, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 56) {
								row1.FECHALEGALIZATION = null;
							} else {
	                         		
        	row1.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 56, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 57) {
								row1.K_DISPERSION = null;
							} else {
	                         		
        	row1.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_1, 57, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 58) {
								row1.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row1.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_1, 58, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 59) {
								row1.VALOR_UNITARIO = null;
							} else {
	                         		
        	row1.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_1, 59, false);
		                    }
							if(colQtyInRs_tDBInput_1 < 60) {
								row1.VALOR_K = null;
							} else {
	                         		
        	row1.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_1, 60, false);
		                    }
					

 



/**
 * [tDBInput_1 begin ] stop
 */
	
	/**
	 * [tDBInput_1 main ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 


	tos_count_tDBInput_1++;

/**
 * [tDBInput_1 main ] stop
 */
	
	/**
	 * [tDBInput_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 



/**
 * [tDBInput_1 process_data_begin ] stop
 */

	
	/**
	 * [tMap_1 main ] start
	 */

	

	
	
	currentComponent="tMap_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row1");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_1 = false;
		  boolean mainRowRejected_tMap_1 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfcopyOfsecuencia_acta = null;


// # Output table : 'copyOfcopyOfcopyOfsecuencia_acta'
copyOfcopyOfcopyOfsecuencia_acta_tmp.FechaAsignacion = row1.FechaAsignacion;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Equipo_Trabajo = row1.Equipo_Trabajo;
copyOfcopyOfcopyOfsecuencia_acta_tmp.UNIDAD_OPERATIVA = row1.UNIDAD_OPERATIVA;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Tarea = row1.Tarea;
copyOfcopyOfcopyOfsecuencia_acta_tmp.DescTarea = row1.DescTarea;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Orden = row1.Orden;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Ciclo = row1.Ciclo;
copyOfcopyOfcopyOfsecuencia_acta_tmp.servicio = row1.servicio;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Estado = row1.Estado;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Desc_estado = row1.Desc_estado;
copyOfcopyOfcopyOfsecuencia_acta_tmp.FechaCREATED = row1.FechaCREATED;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Horalegalization = row1.Horalegalization;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Instalacion = row1.Instalacion;
copyOfcopyOfcopyOfsecuencia_acta_tmp.urbano_rural = row1.urbano_rural;
copyOfcopyOfcopyOfsecuencia_acta_tmp.ortrinur = row1.ortrinur;
copyOfcopyOfcopyOfsecuencia_acta_tmp.descripciona = row1.descripciona;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Ciudad = row1.Ciudad;
copyOfcopyOfcopyOfsecuencia_acta_tmp.cmrudesc = row1.cmrudesc;
copyOfcopyOfcopyOfsecuencia_acta_tmp.region = row1.region;
copyOfcopyOfcopyOfsecuencia_acta_tmp.regndesc = row1.regndesc;
copyOfcopyOfcopyOfsecuencia_acta_tmp.depacodi = row1.depacodi;
copyOfcopyOfcopyOfsecuencia_acta_tmp.codigorespuesta = row1.codigorespuesta;
copyOfcopyOfcopyOfsecuencia_acta_tmp.respuestatencion = row1.respuestatencion;
copyOfcopyOfcopyOfsecuencia_acta_tmp.x = row1.x;
copyOfcopyOfcopyOfsecuencia_acta_tmp.y = row1.y;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Ano = row1.Ano;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Mes = row1.Mes;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Dia = row1.Dia;
copyOfcopyOfcopyOfsecuencia_acta_tmp.desc_cna = row1.desc_cna;
copyOfcopyOfcopyOfsecuencia_acta_tmp.ACTIVIDAD = row1.ACTIVIDAD;
copyOfcopyOfcopyOfsecuencia_acta_tmp.DESC_ACTIVIDAD = row1.DESC_ACTIVIDAD;
copyOfcopyOfcopyOfsecuencia_acta_tmp.FRECUENCIA = row1.FRECUENCIA;
copyOfcopyOfcopyOfsecuencia_acta_tmp.CUENTAS_VENCIDAS = row1.CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfsecuencia_acta_tmp.SALDO_CUENTAS_VENCIDAS = row1.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfcopyOfsecuencia_acta_tmp.ESTADO_CORTE = row1.ESTADO_CORTE;
copyOfcopyOfcopyOfsecuencia_acta_tmp.TIPO_ACTIVIDAD = row1.TIPO_ACTIVIDAD;
copyOfcopyOfcopyOfsecuencia_acta_tmp.ROUTE_ID = row1.ROUTE_ID;
copyOfcopyOfcopyOfsecuencia_acta_tmp.NAME_ = row1.NAME_;
copyOfcopyOfcopyOfsecuencia_acta_tmp.NUMBER_ID = row1.NUMBER_ID;
copyOfcopyOfcopyOfsecuencia_acta_tmp.CODIGO_CAUSANL_OBS = row1.CODIGO_CAUSANL_OBS;
copyOfcopyOfcopyOfsecuencia_acta_tmp.CAUSANL_OBS = row1.CAUSANL_OBS;
copyOfcopyOfcopyOfsecuencia_acta_tmp.CODIGO_CAUSANL_OBS2 = row1.CODIGO_CAUSANL_OBS2;
copyOfcopyOfcopyOfsecuencia_acta_tmp.CAUSANL_OBS2 = row1.CAUSANL_OBS2;
copyOfcopyOfcopyOfsecuencia_acta_tmp.CODIGO_CAUSANL_OBS3 = row1.CODIGO_CAUSANL_OBS3;
copyOfcopyOfcopyOfsecuencia_acta_tmp.CAUSANL_OBS3 = row1.CAUSANL_OBS3;
copyOfcopyOfcopyOfsecuencia_acta_tmp.SERVICIO_SUSCRITO = row1.SERVICIO_SUSCRITO;
copyOfcopyOfcopyOfsecuencia_acta_tmp.COD_TIPO_SERVICIO = row1.COD_TIPO_SERVICIO;
copyOfcopyOfcopyOfsecuencia_acta_tmp.TIPO_SERVICIO = row1.TIPO_SERVICIO;
copyOfcopyOfcopyOfsecuencia_acta_tmp.categoria = row1.categoria;
copyOfcopyOfcopyOfsecuencia_acta_tmp.ESTRATO = row1.ESTRATO;
copyOfcopyOfcopyOfsecuencia_acta_tmp.DESC_SERVICIO = row1.DESC_SERVICIO;
copyOfcopyOfcopyOfsecuencia_acta_tmp.orden_relacionada = row1.orden_relacionada;
copyOfcopyOfcopyOfsecuencia_acta_tmp.order_activity_ID = row1.order_activity_ID;
copyOfcopyOfcopyOfsecuencia_acta_tmp.Adjunto = row1.Adjunto;
copyOfcopyOfcopyOfsecuencia_acta_tmp.ID_SECUENCIAS_ACTA = row1.ID_SECUENCIAS_ACTA;
copyOfcopyOfcopyOfsecuencia_acta_tmp.FECHALEGALIZATION = row1.FECHALEGALIZATION;
copyOfcopyOfcopyOfsecuencia_acta_tmp.K_DISPERSION = row1.K_DISPERSION;
copyOfcopyOfcopyOfsecuencia_acta_tmp.SIGLA_ACTIVIDAD = row1.SIGLA_ACTIVIDAD;
copyOfcopyOfcopyOfsecuencia_acta_tmp.VALOR_UNITARIO = row1.VALOR_UNITARIO;
copyOfcopyOfcopyOfsecuencia_acta_tmp.VALOR_K = row1.VALOR_K;
copyOfcopyOfcopyOfsecuencia_acta = copyOfcopyOfcopyOfsecuencia_acta_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_1 = false;










 


	tos_count_tMap_1++;

/**
 * [tMap_1 main ] stop
 */
	
	/**
	 * [tMap_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfcopyOfsecuencia_acta"
if(copyOfcopyOfcopyOfsecuencia_acta != null) { 



	
	/**
	 * [tFileOutputExcel_1 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfcopyOfsecuencia_acta");
					}
					

				xlsxTool_tFileOutputExcel_1.addRow();
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.FechaAsignacion != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.FechaAsignacion));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Equipo_Trabajo != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Equipo_Trabajo));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.UNIDAD_OPERATIVA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.UNIDAD_OPERATIVA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Tarea != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Tarea));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.DescTarea != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.DescTarea));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Orden != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Orden));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Ciclo != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Ciclo));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.servicio != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.servicio));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Estado != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Estado));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Desc_estado != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Desc_estado));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.FechaCREATED != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.FechaCREATED));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Horalegalization != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Horalegalization));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Instalacion != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Instalacion));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.urbano_rural != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.urbano_rural));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.ortrinur != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.ortrinur));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.descripciona != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.descripciona));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Ciudad != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Ciudad));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.cmrudesc != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.cmrudesc));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.region != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.region));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.regndesc != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.regndesc));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.depacodi != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.depacodi));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.codigorespuesta != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.codigorespuesta));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.respuestatencion != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.respuestatencion));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.x != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.x));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.y != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.y));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Ano != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Ano));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Mes != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Mes));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Dia != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Dia));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.desc_cna != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.desc_cna));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.DESC_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.DESC_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.FRECUENCIA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.FRECUENCIA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.CUENTAS_VENCIDAS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.CUENTAS_VENCIDAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.SALDO_CUENTAS_VENCIDAS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.SALDO_CUENTAS_VENCIDAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.ESTADO_CORTE != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.ESTADO_CORTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.TIPO_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.TIPO_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.ROUTE_ID != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.ROUTE_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.NAME_ != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.NAME_));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.NUMBER_ID != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.NUMBER_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.CAUSANL_OBS != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.CAUSANL_OBS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS2 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.CAUSANL_OBS2 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.CAUSANL_OBS2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS3 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS3));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.CAUSANL_OBS3 != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.CAUSANL_OBS3));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.SERVICIO_SUSCRITO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.SERVICIO_SUSCRITO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.COD_TIPO_SERVICIO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.COD_TIPO_SERVICIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.TIPO_SERVICIO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.TIPO_SERVICIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.categoria != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.categoria));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.ESTRATO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.ESTRATO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.DESC_SERVICIO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.DESC_SERVICIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.orden_relacionada != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.orden_relacionada));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.order_activity_ID != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.order_activity_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.Adjunto != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.Adjunto));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.ID_SECUENCIAS_ACTA != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.ID_SECUENCIAS_ACTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.FECHALEGALIZATION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.FECHALEGALIZATION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.K_DISPERSION != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.K_DISPERSION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.SIGLA_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.SIGLA_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.VALOR_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.VALOR_UNITARIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfcopyOfsecuencia_acta.VALOR_K != null) {
    				
							xlsxTool_tFileOutputExcel_1.addCellValue(String.valueOf(copyOfcopyOfcopyOfsecuencia_acta.VALOR_K));
	    				} else {
	    					xlsxTool_tFileOutputExcel_1.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_1++;
				
 


	tos_count_tFileOutputExcel_1++;

/**
 * [tFileOutputExcel_1 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

 



/**
 * [tFileOutputExcel_1 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

 



/**
 * [tFileOutputExcel_1 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfcopyOfsecuencia_acta"




	
	/**
	 * [tMap_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_1 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 



/**
 * [tDBInput_1 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_1 end ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

	}
}finally{
	if (rs_tDBInput_1 != null) {
		rs_tDBInput_1.close();
	}
	if (stmt_tDBInput_1 != null) {
		stmt_tDBInput_1.close();
	}
		if(conn_tDBInput_1 != null && !conn_tDBInput_1.isClosed()) {
			
			conn_tDBInput_1.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_1_NB_LINE",nb_line_tDBInput_1);
		


 

ok_Hash.put("tDBInput_1", true);
end_Hash.put("tDBInput_1", System.currentTimeMillis());




/**
 * [tDBInput_1 end ] stop
 */

	
	/**
	 * [tMap_1 end ] start
	 */

	

	
	
	currentComponent="tMap_1";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row1");
			  	}
			  	
 

ok_Hash.put("tMap_1", true);
end_Hash.put("tMap_1", System.currentTimeMillis());




/**
 * [tMap_1 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

	
	
	
			xlsxTool_tFileOutputExcel_1.writeExcel(fileName_tFileOutputExcel_1,true);
	
		
			nb_line_tFileOutputExcel_1 = nb_line_tFileOutputExcel_1 -1;
		
		globalMap.put("tFileOutputExcel_1_NB_LINE",nb_line_tFileOutputExcel_1);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfcopyOfsecuencia_acta");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_1", true);
end_Hash.put("tFileOutputExcel_1", System.currentTimeMillis());

				if(execStat){   
   	 				runStat.updateStatOnConnection("OnComponentOk24", 0, "ok");
				}
				tDBInput_4Process(globalMap);



/**
 * [tFileOutputExcel_1 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_1 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_1";

	

 



/**
 * [tDBInput_1 finally ] stop
 */

	
	/**
	 * [tMap_1 finally ] start
	 */

	

	
	
	currentComponent="tMap_1";

	

 



/**
 * [tMap_1 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_1 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_1";

	

 



/**
 * [tFileOutputExcel_1 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}
	


public static class copyOfcopyOfsecuencia_actaStruct implements routines.system.IPersistableRow<copyOfcopyOfsecuencia_actaStruct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];
	protected static final int DEFAULT_HASHCODE = 1;
    protected static final int PRIME = 31;
    protected int hashCode = DEFAULT_HASHCODE;
    public boolean hashCodeDirty = true;

    public String loopKey;



	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				


	@Override
	public int hashCode() {
		if (this.hashCodeDirty) {
			final int prime = PRIME;
			int result = DEFAULT_HASHCODE;
	
						result = prime * result + ((this.ID_SECUENCIAS_ACTA == null) ? 0 : this.ID_SECUENCIAS_ACTA.hashCode());
					
    		this.hashCode = result;
    		this.hashCodeDirty = false;
		}
		return this.hashCode;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		final copyOfcopyOfsecuencia_actaStruct other = (copyOfcopyOfsecuencia_actaStruct) obj;
		
						if (this.ID_SECUENCIAS_ACTA == null) {
							if (other.ID_SECUENCIAS_ACTA != null)
								return false;
						
						} else if (!this.ID_SECUENCIAS_ACTA.equals(other.ID_SECUENCIAS_ACTA))
						
							return false;
					

		return true;
    }

	public void copyDataTo(copyOfcopyOfsecuencia_actaStruct other) {

		other.FechaAsignacion = this.FechaAsignacion;
	            other.Equipo_Trabajo = this.Equipo_Trabajo;
	            other.UNIDAD_OPERATIVA = this.UNIDAD_OPERATIVA;
	            other.Tarea = this.Tarea;
	            other.DescTarea = this.DescTarea;
	            other.Orden = this.Orden;
	            other.Ciclo = this.Ciclo;
	            other.servicio = this.servicio;
	            other.Estado = this.Estado;
	            other.Desc_estado = this.Desc_estado;
	            other.FechaCREATED = this.FechaCREATED;
	            other.Horalegalization = this.Horalegalization;
	            other.Instalacion = this.Instalacion;
	            other.urbano_rural = this.urbano_rural;
	            other.ortrinur = this.ortrinur;
	            other.descripciona = this.descripciona;
	            other.Ciudad = this.Ciudad;
	            other.cmrudesc = this.cmrudesc;
	            other.region = this.region;
	            other.regndesc = this.regndesc;
	            other.depacodi = this.depacodi;
	            other.codigorespuesta = this.codigorespuesta;
	            other.respuestatencion = this.respuestatencion;
	            other.x = this.x;
	            other.y = this.y;
	            other.Ano = this.Ano;
	            other.Mes = this.Mes;
	            other.Dia = this.Dia;
	            other.desc_cna = this.desc_cna;
	            other.ACTIVIDAD = this.ACTIVIDAD;
	            other.DESC_ACTIVIDAD = this.DESC_ACTIVIDAD;
	            other.FRECUENCIA = this.FRECUENCIA;
	            other.CUENTAS_VENCIDAS = this.CUENTAS_VENCIDAS;
	            other.SALDO_CUENTAS_VENCIDAS = this.SALDO_CUENTAS_VENCIDAS;
	            other.ESTADO_CORTE = this.ESTADO_CORTE;
	            other.TIPO_ACTIVIDAD = this.TIPO_ACTIVIDAD;
	            other.ROUTE_ID = this.ROUTE_ID;
	            other.NAME_ = this.NAME_;
	            other.NUMBER_ID = this.NUMBER_ID;
	            other.CODIGO_CAUSANL_OBS = this.CODIGO_CAUSANL_OBS;
	            other.CAUSANL_OBS = this.CAUSANL_OBS;
	            other.CODIGO_CAUSANL_OBS2 = this.CODIGO_CAUSANL_OBS2;
	            other.CAUSANL_OBS2 = this.CAUSANL_OBS2;
	            other.CODIGO_CAUSANL_OBS3 = this.CODIGO_CAUSANL_OBS3;
	            other.CAUSANL_OBS3 = this.CAUSANL_OBS3;
	            other.SERVICIO_SUSCRITO = this.SERVICIO_SUSCRITO;
	            other.COD_TIPO_SERVICIO = this.COD_TIPO_SERVICIO;
	            other.TIPO_SERVICIO = this.TIPO_SERVICIO;
	            other.categoria = this.categoria;
	            other.ESTRATO = this.ESTRATO;
	            other.DESC_SERVICIO = this.DESC_SERVICIO;
	            other.orden_relacionada = this.orden_relacionada;
	            other.order_activity_ID = this.order_activity_ID;
	            other.Adjunto = this.Adjunto;
	            other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            other.FECHALEGALIZATION = this.FECHALEGALIZATION;
	            other.K_DISPERSION = this.K_DISPERSION;
	            other.SIGLA_ACTIVIDAD = this.SIGLA_ACTIVIDAD;
	            other.VALOR_UNITARIO = this.VALOR_UNITARIO;
	            other.VALOR_K = this.VALOR_K;
	            
	}

	public void copyKeysDataTo(copyOfcopyOfsecuencia_actaStruct other) {

		other.ID_SECUENCIAS_ACTA = this.ID_SECUENCIAS_ACTA;
	            	
	}




	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(copyOfcopyOfsecuencia_actaStruct other) {

		int returnValue = -1;
		
						returnValue = checkNullsAndCompare(this.ID_SECUENCIAS_ACTA, other.ID_SECUENCIAS_ACTA);
						if(returnValue != 0) {
							return returnValue;
						}

					
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}

public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
    final static byte[] commonByteArrayLock_LOCAL_PROJECT_Crear_acta = new byte[0];
    static byte[] commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[0];

	
			    public String FechaAsignacion;

				public String getFechaAsignacion () {
					return this.FechaAsignacion;
				}
				
			    public String Equipo_Trabajo;

				public String getEquipo_Trabajo () {
					return this.Equipo_Trabajo;
				}
				
			    public String UNIDAD_OPERATIVA;

				public String getUNIDAD_OPERATIVA () {
					return this.UNIDAD_OPERATIVA;
				}
				
			    public String Tarea;

				public String getTarea () {
					return this.Tarea;
				}
				
			    public String DescTarea;

				public String getDescTarea () {
					return this.DescTarea;
				}
				
			    public String Orden;

				public String getOrden () {
					return this.Orden;
				}
				
			    public String Ciclo;

				public String getCiclo () {
					return this.Ciclo;
				}
				
			    public String servicio;

				public String getServicio () {
					return this.servicio;
				}
				
			    public String Estado;

				public String getEstado () {
					return this.Estado;
				}
				
			    public String Desc_estado;

				public String getDesc_estado () {
					return this.Desc_estado;
				}
				
			    public String FechaCREATED;

				public String getFechaCREATED () {
					return this.FechaCREATED;
				}
				
			    public String Horalegalization;

				public String getHoralegalization () {
					return this.Horalegalization;
				}
				
			    public String Instalacion;

				public String getInstalacion () {
					return this.Instalacion;
				}
				
			    public String urbano_rural;

				public String getUrbano_rural () {
					return this.urbano_rural;
				}
				
			    public String ortrinur;

				public String getOrtrinur () {
					return this.ortrinur;
				}
				
			    public String descripciona;

				public String getDescripciona () {
					return this.descripciona;
				}
				
			    public String Ciudad;

				public String getCiudad () {
					return this.Ciudad;
				}
				
			    public String cmrudesc;

				public String getCmrudesc () {
					return this.cmrudesc;
				}
				
			    public String region;

				public String getRegion () {
					return this.region;
				}
				
			    public String regndesc;

				public String getRegndesc () {
					return this.regndesc;
				}
				
			    public String depacodi;

				public String getDepacodi () {
					return this.depacodi;
				}
				
			    public String codigorespuesta;

				public String getCodigorespuesta () {
					return this.codigorespuesta;
				}
				
			    public String respuestatencion;

				public String getRespuestatencion () {
					return this.respuestatencion;
				}
				
			    public String x;

				public String getX () {
					return this.x;
				}
				
			    public String y;

				public String getY () {
					return this.y;
				}
				
			    public String Ano;

				public String getAno () {
					return this.Ano;
				}
				
			    public String Mes;

				public String getMes () {
					return this.Mes;
				}
				
			    public String Dia;

				public String getDia () {
					return this.Dia;
				}
				
			    public String desc_cna;

				public String getDesc_cna () {
					return this.desc_cna;
				}
				
			    public String ACTIVIDAD;

				public String getACTIVIDAD () {
					return this.ACTIVIDAD;
				}
				
			    public String DESC_ACTIVIDAD;

				public String getDESC_ACTIVIDAD () {
					return this.DESC_ACTIVIDAD;
				}
				
			    public String FRECUENCIA;

				public String getFRECUENCIA () {
					return this.FRECUENCIA;
				}
				
			    public String CUENTAS_VENCIDAS;

				public String getCUENTAS_VENCIDAS () {
					return this.CUENTAS_VENCIDAS;
				}
				
			    public String SALDO_CUENTAS_VENCIDAS;

				public String getSALDO_CUENTAS_VENCIDAS () {
					return this.SALDO_CUENTAS_VENCIDAS;
				}
				
			    public String ESTADO_CORTE;

				public String getESTADO_CORTE () {
					return this.ESTADO_CORTE;
				}
				
			    public String TIPO_ACTIVIDAD;

				public String getTIPO_ACTIVIDAD () {
					return this.TIPO_ACTIVIDAD;
				}
				
			    public String ROUTE_ID;

				public String getROUTE_ID () {
					return this.ROUTE_ID;
				}
				
			    public String NAME_;

				public String getNAME_ () {
					return this.NAME_;
				}
				
			    public String NUMBER_ID;

				public String getNUMBER_ID () {
					return this.NUMBER_ID;
				}
				
			    public String CODIGO_CAUSANL_OBS;

				public String getCODIGO_CAUSANL_OBS () {
					return this.CODIGO_CAUSANL_OBS;
				}
				
			    public String CAUSANL_OBS;

				public String getCAUSANL_OBS () {
					return this.CAUSANL_OBS;
				}
				
			    public String CODIGO_CAUSANL_OBS2;

				public String getCODIGO_CAUSANL_OBS2 () {
					return this.CODIGO_CAUSANL_OBS2;
				}
				
			    public String CAUSANL_OBS2;

				public String getCAUSANL_OBS2 () {
					return this.CAUSANL_OBS2;
				}
				
			    public String CODIGO_CAUSANL_OBS3;

				public String getCODIGO_CAUSANL_OBS3 () {
					return this.CODIGO_CAUSANL_OBS3;
				}
				
			    public String CAUSANL_OBS3;

				public String getCAUSANL_OBS3 () {
					return this.CAUSANL_OBS3;
				}
				
			    public String SERVICIO_SUSCRITO;

				public String getSERVICIO_SUSCRITO () {
					return this.SERVICIO_SUSCRITO;
				}
				
			    public String COD_TIPO_SERVICIO;

				public String getCOD_TIPO_SERVICIO () {
					return this.COD_TIPO_SERVICIO;
				}
				
			    public String TIPO_SERVICIO;

				public String getTIPO_SERVICIO () {
					return this.TIPO_SERVICIO;
				}
				
			    public String categoria;

				public String getCategoria () {
					return this.categoria;
				}
				
			    public String ESTRATO;

				public String getESTRATO () {
					return this.ESTRATO;
				}
				
			    public String DESC_SERVICIO;

				public String getDESC_SERVICIO () {
					return this.DESC_SERVICIO;
				}
				
			    public String orden_relacionada;

				public String getOrden_relacionada () {
					return this.orden_relacionada;
				}
				
			    public String order_activity_ID;

				public String getOrder_activity_ID () {
					return this.order_activity_ID;
				}
				
			    public String Adjunto;

				public String getAdjunto () {
					return this.Adjunto;
				}
				
			    public String ID_SECUENCIAS_ACTA;

				public String getID_SECUENCIAS_ACTA () {
					return this.ID_SECUENCIAS_ACTA;
				}
				
			    public String FECHALEGALIZATION;

				public String getFECHALEGALIZATION () {
					return this.FECHALEGALIZATION;
				}
				
			    public String K_DISPERSION;

				public String getK_DISPERSION () {
					return this.K_DISPERSION;
				}
				
			    public String SIGLA_ACTIVIDAD;

				public String getSIGLA_ACTIVIDAD () {
					return this.SIGLA_ACTIVIDAD;
				}
				
			    public String VALOR_UNITARIO;

				public String getVALOR_UNITARIO () {
					return this.VALOR_UNITARIO;
				}
				
			    public String VALOR_K;

				public String getVALOR_K () {
					return this.VALOR_K;
				}
				



	private String readString(ObjectInputStream dis) throws IOException{
		String strReturn = null;
		int length = 0;
        length = dis.readInt();
		if (length == -1) {
			strReturn = null;
		} else {
			if(length > commonByteArray_LOCAL_PROJECT_Crear_acta.length) {
				if(length < 1024 && commonByteArray_LOCAL_PROJECT_Crear_acta.length == 0) {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[1024];
				} else {
   					commonByteArray_LOCAL_PROJECT_Crear_acta = new byte[2 * length];
   				}
			}
			dis.readFully(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length);
			strReturn = new String(commonByteArray_LOCAL_PROJECT_Crear_acta, 0, length, utf8Charset);
		}
		return strReturn;
	}

    private void writeString(String str, ObjectOutputStream dos) throws IOException{
		if(str == null) {
            dos.writeInt(-1);
		} else {
            byte[] byteArray = str.getBytes(utf8Charset);
	    	dos.writeInt(byteArray.length);
			dos.write(byteArray);
    	}
    }

    public void readData(ObjectInputStream dis) {

		synchronized(commonByteArrayLock_LOCAL_PROJECT_Crear_acta) {

        	try {

        		int length = 0;
		
					this.FechaAsignacion = readString(dis);
					
					this.Equipo_Trabajo = readString(dis);
					
					this.UNIDAD_OPERATIVA = readString(dis);
					
					this.Tarea = readString(dis);
					
					this.DescTarea = readString(dis);
					
					this.Orden = readString(dis);
					
					this.Ciclo = readString(dis);
					
					this.servicio = readString(dis);
					
					this.Estado = readString(dis);
					
					this.Desc_estado = readString(dis);
					
					this.FechaCREATED = readString(dis);
					
					this.Horalegalization = readString(dis);
					
					this.Instalacion = readString(dis);
					
					this.urbano_rural = readString(dis);
					
					this.ortrinur = readString(dis);
					
					this.descripciona = readString(dis);
					
					this.Ciudad = readString(dis);
					
					this.cmrudesc = readString(dis);
					
					this.region = readString(dis);
					
					this.regndesc = readString(dis);
					
					this.depacodi = readString(dis);
					
					this.codigorespuesta = readString(dis);
					
					this.respuestatencion = readString(dis);
					
					this.x = readString(dis);
					
					this.y = readString(dis);
					
					this.Ano = readString(dis);
					
					this.Mes = readString(dis);
					
					this.Dia = readString(dis);
					
					this.desc_cna = readString(dis);
					
					this.ACTIVIDAD = readString(dis);
					
					this.DESC_ACTIVIDAD = readString(dis);
					
					this.FRECUENCIA = readString(dis);
					
					this.CUENTAS_VENCIDAS = readString(dis);
					
					this.SALDO_CUENTAS_VENCIDAS = readString(dis);
					
					this.ESTADO_CORTE = readString(dis);
					
					this.TIPO_ACTIVIDAD = readString(dis);
					
					this.ROUTE_ID = readString(dis);
					
					this.NAME_ = readString(dis);
					
					this.NUMBER_ID = readString(dis);
					
					this.CODIGO_CAUSANL_OBS = readString(dis);
					
					this.CAUSANL_OBS = readString(dis);
					
					this.CODIGO_CAUSANL_OBS2 = readString(dis);
					
					this.CAUSANL_OBS2 = readString(dis);
					
					this.CODIGO_CAUSANL_OBS3 = readString(dis);
					
					this.CAUSANL_OBS3 = readString(dis);
					
					this.SERVICIO_SUSCRITO = readString(dis);
					
					this.COD_TIPO_SERVICIO = readString(dis);
					
					this.TIPO_SERVICIO = readString(dis);
					
					this.categoria = readString(dis);
					
					this.ESTRATO = readString(dis);
					
					this.DESC_SERVICIO = readString(dis);
					
					this.orden_relacionada = readString(dis);
					
					this.order_activity_ID = readString(dis);
					
					this.Adjunto = readString(dis);
					
					this.ID_SECUENCIAS_ACTA = readString(dis);
					
					this.FECHALEGALIZATION = readString(dis);
					
					this.K_DISPERSION = readString(dis);
					
					this.SIGLA_ACTIVIDAD = readString(dis);
					
					this.VALOR_UNITARIO = readString(dis);
					
					this.VALOR_K = readString(dis);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);

		

        }

		

      }


    }

    public void writeData(ObjectOutputStream dos) {
        try {

		
					// String
				
						writeString(this.FechaAsignacion,dos);
					
					// String
				
						writeString(this.Equipo_Trabajo,dos);
					
					// String
				
						writeString(this.UNIDAD_OPERATIVA,dos);
					
					// String
				
						writeString(this.Tarea,dos);
					
					// String
				
						writeString(this.DescTarea,dos);
					
					// String
				
						writeString(this.Orden,dos);
					
					// String
				
						writeString(this.Ciclo,dos);
					
					// String
				
						writeString(this.servicio,dos);
					
					// String
				
						writeString(this.Estado,dos);
					
					// String
				
						writeString(this.Desc_estado,dos);
					
					// String
				
						writeString(this.FechaCREATED,dos);
					
					// String
				
						writeString(this.Horalegalization,dos);
					
					// String
				
						writeString(this.Instalacion,dos);
					
					// String
				
						writeString(this.urbano_rural,dos);
					
					// String
				
						writeString(this.ortrinur,dos);
					
					// String
				
						writeString(this.descripciona,dos);
					
					// String
				
						writeString(this.Ciudad,dos);
					
					// String
				
						writeString(this.cmrudesc,dos);
					
					// String
				
						writeString(this.region,dos);
					
					// String
				
						writeString(this.regndesc,dos);
					
					// String
				
						writeString(this.depacodi,dos);
					
					// String
				
						writeString(this.codigorespuesta,dos);
					
					// String
				
						writeString(this.respuestatencion,dos);
					
					// String
				
						writeString(this.x,dos);
					
					// String
				
						writeString(this.y,dos);
					
					// String
				
						writeString(this.Ano,dos);
					
					// String
				
						writeString(this.Mes,dos);
					
					// String
				
						writeString(this.Dia,dos);
					
					// String
				
						writeString(this.desc_cna,dos);
					
					// String
				
						writeString(this.ACTIVIDAD,dos);
					
					// String
				
						writeString(this.DESC_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.FRECUENCIA,dos);
					
					// String
				
						writeString(this.CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.SALDO_CUENTAS_VENCIDAS,dos);
					
					// String
				
						writeString(this.ESTADO_CORTE,dos);
					
					// String
				
						writeString(this.TIPO_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.ROUTE_ID,dos);
					
					// String
				
						writeString(this.NAME_,dos);
					
					// String
				
						writeString(this.NUMBER_ID,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS2,dos);
					
					// String
				
						writeString(this.CODIGO_CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.CAUSANL_OBS3,dos);
					
					// String
				
						writeString(this.SERVICIO_SUSCRITO,dos);
					
					// String
				
						writeString(this.COD_TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.TIPO_SERVICIO,dos);
					
					// String
				
						writeString(this.categoria,dos);
					
					// String
				
						writeString(this.ESTRATO,dos);
					
					// String
				
						writeString(this.DESC_SERVICIO,dos);
					
					// String
				
						writeString(this.orden_relacionada,dos);
					
					// String
				
						writeString(this.order_activity_ID,dos);
					
					// String
				
						writeString(this.Adjunto,dos);
					
					// String
				
						writeString(this.ID_SECUENCIAS_ACTA,dos);
					
					// String
				
						writeString(this.FECHALEGALIZATION,dos);
					
					// String
				
						writeString(this.K_DISPERSION,dos);
					
					// String
				
						writeString(this.SIGLA_ACTIVIDAD,dos);
					
					// String
				
						writeString(this.VALOR_UNITARIO,dos);
					
					// String
				
						writeString(this.VALOR_K,dos);
					
        	} catch (IOException e) {
	            throw new RuntimeException(e);
        }


    }


    public String toString() {

		StringBuilder sb = new StringBuilder();
		sb.append(super.toString());
		sb.append("[");
		sb.append("FechaAsignacion="+FechaAsignacion);
		sb.append(",Equipo_Trabajo="+Equipo_Trabajo);
		sb.append(",UNIDAD_OPERATIVA="+UNIDAD_OPERATIVA);
		sb.append(",Tarea="+Tarea);
		sb.append(",DescTarea="+DescTarea);
		sb.append(",Orden="+Orden);
		sb.append(",Ciclo="+Ciclo);
		sb.append(",servicio="+servicio);
		sb.append(",Estado="+Estado);
		sb.append(",Desc_estado="+Desc_estado);
		sb.append(",FechaCREATED="+FechaCREATED);
		sb.append(",Horalegalization="+Horalegalization);
		sb.append(",Instalacion="+Instalacion);
		sb.append(",urbano_rural="+urbano_rural);
		sb.append(",ortrinur="+ortrinur);
		sb.append(",descripciona="+descripciona);
		sb.append(",Ciudad="+Ciudad);
		sb.append(",cmrudesc="+cmrudesc);
		sb.append(",region="+region);
		sb.append(",regndesc="+regndesc);
		sb.append(",depacodi="+depacodi);
		sb.append(",codigorespuesta="+codigorespuesta);
		sb.append(",respuestatencion="+respuestatencion);
		sb.append(",x="+x);
		sb.append(",y="+y);
		sb.append(",Ano="+Ano);
		sb.append(",Mes="+Mes);
		sb.append(",Dia="+Dia);
		sb.append(",desc_cna="+desc_cna);
		sb.append(",ACTIVIDAD="+ACTIVIDAD);
		sb.append(",DESC_ACTIVIDAD="+DESC_ACTIVIDAD);
		sb.append(",FRECUENCIA="+FRECUENCIA);
		sb.append(",CUENTAS_VENCIDAS="+CUENTAS_VENCIDAS);
		sb.append(",SALDO_CUENTAS_VENCIDAS="+SALDO_CUENTAS_VENCIDAS);
		sb.append(",ESTADO_CORTE="+ESTADO_CORTE);
		sb.append(",TIPO_ACTIVIDAD="+TIPO_ACTIVIDAD);
		sb.append(",ROUTE_ID="+ROUTE_ID);
		sb.append(",NAME_="+NAME_);
		sb.append(",NUMBER_ID="+NUMBER_ID);
		sb.append(",CODIGO_CAUSANL_OBS="+CODIGO_CAUSANL_OBS);
		sb.append(",CAUSANL_OBS="+CAUSANL_OBS);
		sb.append(",CODIGO_CAUSANL_OBS2="+CODIGO_CAUSANL_OBS2);
		sb.append(",CAUSANL_OBS2="+CAUSANL_OBS2);
		sb.append(",CODIGO_CAUSANL_OBS3="+CODIGO_CAUSANL_OBS3);
		sb.append(",CAUSANL_OBS3="+CAUSANL_OBS3);
		sb.append(",SERVICIO_SUSCRITO="+SERVICIO_SUSCRITO);
		sb.append(",COD_TIPO_SERVICIO="+COD_TIPO_SERVICIO);
		sb.append(",TIPO_SERVICIO="+TIPO_SERVICIO);
		sb.append(",categoria="+categoria);
		sb.append(",ESTRATO="+ESTRATO);
		sb.append(",DESC_SERVICIO="+DESC_SERVICIO);
		sb.append(",orden_relacionada="+orden_relacionada);
		sb.append(",order_activity_ID="+order_activity_ID);
		sb.append(",Adjunto="+Adjunto);
		sb.append(",ID_SECUENCIAS_ACTA="+ID_SECUENCIAS_ACTA);
		sb.append(",FECHALEGALIZATION="+FECHALEGALIZATION);
		sb.append(",K_DISPERSION="+K_DISPERSION);
		sb.append(",SIGLA_ACTIVIDAD="+SIGLA_ACTIVIDAD);
		sb.append(",VALOR_UNITARIO="+VALOR_UNITARIO);
		sb.append(",VALOR_K="+VALOR_K);
	    sb.append("]");

	    return sb.toString();
    }

    /**
     * Compare keys
     */
    public int compareTo(row11Struct other) {

		int returnValue = -1;
		
	    return returnValue;
    }


    private int checkNullsAndCompare(Object object1, Object object2) {
        int returnValue = 0;
		if (object1 instanceof Comparable && object2 instanceof Comparable) {
            returnValue = ((Comparable) object1).compareTo(object2);
        } else if (object1 != null && object2 != null) {
            returnValue = compareStrings(object1.toString(), object2.toString());
        } else if (object1 == null && object2 != null) {
            returnValue = 1;
        } else if (object1 != null && object2 == null) {
            returnValue = -1;
        } else {
            returnValue = 0;
        }

        return returnValue;
    }

    private int compareStrings(String string1, String string2) {
        return string1.compareTo(string2);
    }


}
public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
	globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

 final boolean execStat = this.execStat;
	
		String iterateId = "";
	
	
	String currentComponent = "";
	java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

	try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { //start the resume
				globalResumeTicket = true;



		row11Struct row11 = new row11Struct();
copyOfcopyOfsecuencia_actaStruct copyOfcopyOfsecuencia_acta = new copyOfcopyOfsecuencia_actaStruct();





	
	/**
	 * [tFileOutputExcel_2 begin ] start
	 */

	

	
		
		ok_Hash.put("tFileOutputExcel_2", false);
		start_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());
		
	
	currentComponent="tFileOutputExcel_2";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"copyOfcopyOfsecuencia_acta");
					}
				
		int tos_count_tFileOutputExcel_2 = 0;
		


		int columnIndex_tFileOutputExcel_2 = 0;
		
		String fileName_tFileOutputExcel_2="C:/Users/Administrador/OneDrive - ingeomega.com/03_Procesos Informáticos/10 Alexander Orozco/02 Acta Con Precio/Del 16 al 31 Acta Con Precio.xlsx";
		int nb_line_tFileOutputExcel_2 = 0;
		org.talend.ExcelTool xlsxTool_tFileOutputExcel_2 = new org.talend.ExcelTool();
		
		xlsxTool_tFileOutputExcel_2.setSheet("Acta_Con_Precio_16_31");
		xlsxTool_tFileOutputExcel_2.setAppend(false,false);
		xlsxTool_tFileOutputExcel_2.setRecalculateFormula(false);
		xlsxTool_tFileOutputExcel_2.setXY(false,0,0,false);
		
		java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object> chm_tFileOutputExcel_2 = (java.util.concurrent.ConcurrentHashMap<java.lang.Object, java.lang.Object>) globalMap.get("concurrentHashMap");
		java.lang.Object lockObj_tFileOutputExcel_2 = chm_tFileOutputExcel_2.computeIfAbsent("EXCEL_OUTPUT_LOCK_OBJ_tFileOutputExcel_2", k -> new Object());
		synchronized (lockObj_tFileOutputExcel_2) {
			
				xlsxTool_tFileOutputExcel_2.prepareXlsxFile(fileName_tFileOutputExcel_2);
			
		}
		
		xlsxTool_tFileOutputExcel_2.setFont("");
		
		if (xlsxTool_tFileOutputExcel_2.getStartRow() == 0){
		
		xlsxTool_tFileOutputExcel_2.addRow();
		
		xlsxTool_tFileOutputExcel_2.addCellValue("FechaAsignacion");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Equipo_Trabajo");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("UNIDAD_OPERATIVA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Tarea");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DescTarea");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Orden");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Ciclo");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("servicio");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Estado");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Desc_estado");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("FechaCREATED");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Horalegalization");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Instalacion");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("urbano_rural");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("ortrinur");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("descripciona");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Ciudad");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("cmrudesc");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("region");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("regndesc");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("depacodi");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("codigorespuesta");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("respuestatencion");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("x");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("y");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Ano");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Mes");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Dia");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("desc_cna");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DESC_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("FRECUENCIA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CUENTAS_VENCIDAS");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("SALDO_CUENTAS_VENCIDAS");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("ESTADO_CORTE");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("TIPO_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("ROUTE_ID");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NAME_");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("NUMBER_ID");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CODIGO_CAUSANL_OBS");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CAUSANL_OBS");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CODIGO_CAUSANL_OBS2");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CAUSANL_OBS2");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CODIGO_CAUSANL_OBS3");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("CAUSANL_OBS3");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("SERVICIO_SUSCRITO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("COD_TIPO_SERVICIO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("TIPO_SERVICIO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("categoria");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("ESTRATO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("DESC_SERVICIO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("orden_relacionada");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("order_activity_ID");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("Adjunto");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("ID_SECUENCIAS_ACTA");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("FECHALEGALIZATION");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("K_DISPERSION");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("SIGLA_ACTIVIDAD");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VALOR_UNITARIO");
		
		xlsxTool_tFileOutputExcel_2.addCellValue("VALOR_K");
		
		nb_line_tFileOutputExcel_2++; 
		
	}
		

 



/**
 * [tFileOutputExcel_2 begin ] stop
 */



	
	/**
	 * [tMap_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tMap_4", false);
		start_Hash.put("tMap_4", System.currentTimeMillis());
		
	
	currentComponent="tMap_4";

	
					if(execStat) {
						runStat.updateStatOnConnection(resourceMap,iterateId,0,0,"row11");
					}
				
		int tos_count_tMap_4 = 0;
		




// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
class  Var__tMap_4__Struct  {
}
Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
copyOfcopyOfsecuencia_actaStruct copyOfcopyOfsecuencia_acta_tmp = new copyOfcopyOfsecuencia_actaStruct();
// ###############################

        
        



        









 



/**
 * [tMap_4 begin ] stop
 */



	
	/**
	 * [tDBInput_4 begin ] start
	 */

	

	
		
		ok_Hash.put("tDBInput_4", false);
		start_Hash.put("tDBInput_4", System.currentTimeMillis());
		
	
	currentComponent="tDBInput_4";

	
		int tos_count_tDBInput_4 = 0;
		
	
	
		    java.util.Calendar calendar_tDBInput_4 = java.util.Calendar.getInstance();
		    calendar_tDBInput_4.set(0, 0, 0, 0, 0, 0);
		    java.util.Date year0_tDBInput_4 = calendar_tDBInput_4.getTime();
		    int nb_line_tDBInput_4 = 0;
		    java.sql.Connection conn_tDBInput_4 = null;
				String driverClass_tDBInput_4 = "org.mariadb.jdbc.Driver";
			    java.lang.Class jdbcclazz_tDBInput_4 = java.lang.Class.forName(driverClass_tDBInput_4);
				String dbUser_tDBInput_4 = "lectura";
				
				 
	final String decryptedPassword_tDBInput_4 = routines.system.PasswordEncryptUtil.decryptPassword("enc:routine.encryption.key.v1:N3s0M7NM5NLor8ROK3aJk2mTRcy2yOJ72ygFh/CtD7LXqKlFGHsYj0g=");
				
				String dbPwd_tDBInput_4 = decryptedPassword_tDBInput_4;
				
				String url_tDBInput_4 = "jdbc:mariadb://" + "192.168.4.240" + ":" + "3306" + "/" + "ingeomega" + "?" + "noDatetimeStringSync=true";
				
				conn_tDBInput_4 = java.sql.DriverManager.getConnection(url_tDBInput_4,dbUser_tDBInput_4,dbPwd_tDBInput_4);
		        
		    
			java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

		    String dbquery_tDBInput_4 = "SELECT \na.FechaAsignacion,\na.Equipo_Trabajo,\na.UNIDAD_OPERATIVA,\na.Tarea,\na.DescTarea,\na.Orden,\na.Ciclo,\na.serv"
+"icio,\na.Estado,\na.Desc_estado,\na.FechaCREATED,\na.Horalegalization,\na.Instalacion,\na.urbano_rural,\na.ortrinur,\na."
+"descripciona,\na.Ciudad,\na.cmrudesc,\na.region,\na.regndesc,\na.depacodi,\na.codigorespuesta,\na.respuestatencion,\na.x"
+",\na.y,\na.Ano,\na.Mes,\na.Dia,\na.desc_cna,\na.ACTIVIDAD,\na.DESC_ACTIVIDAD,\na.FRECUENCIA,\na.CUENTAS_VENCIDAS,\na.SAL"
+"DO_CUENTAS_VENCIDAS,\na.ESTADO_CORTE,\na.TIPO_ACTIVIDAD,\na.ROUTE_ID,\na.NAME_,\na.NUMBER_ID,\na.CODIGO_CAUSANL_OBS,\na."
+"CAUSANL_OBS,\na.CODIGO_CAUSANL_OBS2,\na.CAUSANL_OBS2,\na.CODIGO_CAUSANL_OBS3,\na.CAUSANL_OBS3,\na.SERVICIO_SUSCRITO,\na."
+"COD_TIPO_SERVICIO,\na.TIPO_SERVICIO,\na.categoria,\na.ESTRATO,\na.DESC_SERVICIO,\na.orden_relacionada,\na.order_activity"
+"_ID,\na.Adjunto,\nb.ID_SECUENCIAS_ACTA, \nb.FECHALEGALIZATION, \nb.K_DISPERSION,\nb.SIGLA_ACTIVIDAD,\nb.VALOR_UNITARIO,"
+"\nCONCAT((Case when instr(b.VALOR_K,'.') >= 1 then substr(b.VALOR_K,1,(instr(b.VALOR_K,'.')-1))\nelse\nb.VALOR_K\nend),',"
+"',(Case when instr(b.VALOR_K,'.') >= 1 then substr(b.VALOR_K,instr(b.VALOR_K,'.')+1,2)\nelse\n0\nend)) VALOR_K\nFROM ing"
+"eomega.secuencias_acta1 a ,ingeomega.secuencias_kdispersion b\nwhere \na.ID_SECUENCIAS_ACTA=b.ID_SECUENCIAS_ACTA\nAND a."
+"FECHALEGALIZATION=b.FECHALEGALIZATION\nAND a.FECHALEGALIZATION>= (select (CONCAT(COD_ANO,COD_MES,'16')) from consulta_fe"
+"cha_k_dispersion)\nAND a.FECHALEGALIZATION<= (select (CONCAT(COD_ANO,COD_MES,'31')) from consulta_fecha_k_dispersion);";
			

            	globalMap.put("tDBInput_4_QUERY",dbquery_tDBInput_4);
		    java.sql.ResultSet rs_tDBInput_4 = null;

		    try {
		    	rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
		    	java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
		    	int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

		    String tmpContent_tDBInput_4 = null;
		    
		    
		    while (rs_tDBInput_4.next()) {
		        nb_line_tDBInput_4++;
		        
							if(colQtyInRs_tDBInput_4 < 1) {
								row11.FechaAsignacion = null;
							} else {
	                         		
        	row11.FechaAsignacion = routines.system.JDBCUtil.getString(rs_tDBInput_4, 1, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 2) {
								row11.Equipo_Trabajo = null;
							} else {
	                         		
        	row11.Equipo_Trabajo = routines.system.JDBCUtil.getString(rs_tDBInput_4, 2, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 3) {
								row11.UNIDAD_OPERATIVA = null;
							} else {
	                         		
        	row11.UNIDAD_OPERATIVA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 3, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 4) {
								row11.Tarea = null;
							} else {
	                         		
        	row11.Tarea = routines.system.JDBCUtil.getString(rs_tDBInput_4, 4, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 5) {
								row11.DescTarea = null;
							} else {
	                         		
        	row11.DescTarea = routines.system.JDBCUtil.getString(rs_tDBInput_4, 5, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 6) {
								row11.Orden = null;
							} else {
	                         		
        	row11.Orden = routines.system.JDBCUtil.getString(rs_tDBInput_4, 6, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 7) {
								row11.Ciclo = null;
							} else {
	                         		
        	row11.Ciclo = routines.system.JDBCUtil.getString(rs_tDBInput_4, 7, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 8) {
								row11.servicio = null;
							} else {
	                         		
        	row11.servicio = routines.system.JDBCUtil.getString(rs_tDBInput_4, 8, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 9) {
								row11.Estado = null;
							} else {
	                         		
        	row11.Estado = routines.system.JDBCUtil.getString(rs_tDBInput_4, 9, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 10) {
								row11.Desc_estado = null;
							} else {
	                         		
        	row11.Desc_estado = routines.system.JDBCUtil.getString(rs_tDBInput_4, 10, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 11) {
								row11.FechaCREATED = null;
							} else {
	                         		
        	row11.FechaCREATED = routines.system.JDBCUtil.getString(rs_tDBInput_4, 11, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 12) {
								row11.Horalegalization = null;
							} else {
	                         		
        	row11.Horalegalization = routines.system.JDBCUtil.getString(rs_tDBInput_4, 12, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 13) {
								row11.Instalacion = null;
							} else {
	                         		
        	row11.Instalacion = routines.system.JDBCUtil.getString(rs_tDBInput_4, 13, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 14) {
								row11.urbano_rural = null;
							} else {
	                         		
        	row11.urbano_rural = routines.system.JDBCUtil.getString(rs_tDBInput_4, 14, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 15) {
								row11.ortrinur = null;
							} else {
	                         		
        	row11.ortrinur = routines.system.JDBCUtil.getString(rs_tDBInput_4, 15, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 16) {
								row11.descripciona = null;
							} else {
	                         		
        	row11.descripciona = routines.system.JDBCUtil.getString(rs_tDBInput_4, 16, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 17) {
								row11.Ciudad = null;
							} else {
	                         		
        	row11.Ciudad = routines.system.JDBCUtil.getString(rs_tDBInput_4, 17, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 18) {
								row11.cmrudesc = null;
							} else {
	                         		
        	row11.cmrudesc = routines.system.JDBCUtil.getString(rs_tDBInput_4, 18, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 19) {
								row11.region = null;
							} else {
	                         		
        	row11.region = routines.system.JDBCUtil.getString(rs_tDBInput_4, 19, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 20) {
								row11.regndesc = null;
							} else {
	                         		
        	row11.regndesc = routines.system.JDBCUtil.getString(rs_tDBInput_4, 20, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 21) {
								row11.depacodi = null;
							} else {
	                         		
        	row11.depacodi = routines.system.JDBCUtil.getString(rs_tDBInput_4, 21, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 22) {
								row11.codigorespuesta = null;
							} else {
	                         		
        	row11.codigorespuesta = routines.system.JDBCUtil.getString(rs_tDBInput_4, 22, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 23) {
								row11.respuestatencion = null;
							} else {
	                         		
        	row11.respuestatencion = routines.system.JDBCUtil.getString(rs_tDBInput_4, 23, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 24) {
								row11.x = null;
							} else {
	                         		
        	row11.x = routines.system.JDBCUtil.getString(rs_tDBInput_4, 24, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 25) {
								row11.y = null;
							} else {
	                         		
        	row11.y = routines.system.JDBCUtil.getString(rs_tDBInput_4, 25, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 26) {
								row11.Ano = null;
							} else {
	                         		
        	row11.Ano = routines.system.JDBCUtil.getString(rs_tDBInput_4, 26, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 27) {
								row11.Mes = null;
							} else {
	                         		
        	row11.Mes = routines.system.JDBCUtil.getString(rs_tDBInput_4, 27, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 28) {
								row11.Dia = null;
							} else {
	                         		
        	row11.Dia = routines.system.JDBCUtil.getString(rs_tDBInput_4, 28, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 29) {
								row11.desc_cna = null;
							} else {
	                         		
        	row11.desc_cna = routines.system.JDBCUtil.getString(rs_tDBInput_4, 29, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 30) {
								row11.ACTIVIDAD = null;
							} else {
	                         		
        	row11.ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 30, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 31) {
								row11.DESC_ACTIVIDAD = null;
							} else {
	                         		
        	row11.DESC_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 31, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 32) {
								row11.FRECUENCIA = null;
							} else {
	                         		
        	row11.FRECUENCIA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 32, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 33) {
								row11.CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row11.CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_4, 33, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 34) {
								row11.SALDO_CUENTAS_VENCIDAS = null;
							} else {
	                         		
        	row11.SALDO_CUENTAS_VENCIDAS = routines.system.JDBCUtil.getString(rs_tDBInput_4, 34, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 35) {
								row11.ESTADO_CORTE = null;
							} else {
	                         		
        	row11.ESTADO_CORTE = routines.system.JDBCUtil.getString(rs_tDBInput_4, 35, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 36) {
								row11.TIPO_ACTIVIDAD = null;
							} else {
	                         		
        	row11.TIPO_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 36, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 37) {
								row11.ROUTE_ID = null;
							} else {
	                         		
        	row11.ROUTE_ID = routines.system.JDBCUtil.getString(rs_tDBInput_4, 37, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 38) {
								row11.NAME_ = null;
							} else {
	                         		
        	row11.NAME_ = routines.system.JDBCUtil.getString(rs_tDBInput_4, 38, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 39) {
								row11.NUMBER_ID = null;
							} else {
	                         		
        	row11.NUMBER_ID = routines.system.JDBCUtil.getString(rs_tDBInput_4, 39, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 40) {
								row11.CODIGO_CAUSANL_OBS = null;
							} else {
	                         		
        	row11.CODIGO_CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_4, 40, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 41) {
								row11.CAUSANL_OBS = null;
							} else {
	                         		
        	row11.CAUSANL_OBS = routines.system.JDBCUtil.getString(rs_tDBInput_4, 41, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 42) {
								row11.CODIGO_CAUSANL_OBS2 = null;
							} else {
	                         		
        	row11.CODIGO_CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_4, 42, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 43) {
								row11.CAUSANL_OBS2 = null;
							} else {
	                         		
        	row11.CAUSANL_OBS2 = routines.system.JDBCUtil.getString(rs_tDBInput_4, 43, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 44) {
								row11.CODIGO_CAUSANL_OBS3 = null;
							} else {
	                         		
        	row11.CODIGO_CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_4, 44, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 45) {
								row11.CAUSANL_OBS3 = null;
							} else {
	                         		
        	row11.CAUSANL_OBS3 = routines.system.JDBCUtil.getString(rs_tDBInput_4, 45, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 46) {
								row11.SERVICIO_SUSCRITO = null;
							} else {
	                         		
        	row11.SERVICIO_SUSCRITO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 46, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 47) {
								row11.COD_TIPO_SERVICIO = null;
							} else {
	                         		
        	row11.COD_TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 47, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 48) {
								row11.TIPO_SERVICIO = null;
							} else {
	                         		
        	row11.TIPO_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 48, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 49) {
								row11.categoria = null;
							} else {
	                         		
        	row11.categoria = routines.system.JDBCUtil.getString(rs_tDBInput_4, 49, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 50) {
								row11.ESTRATO = null;
							} else {
	                         		
        	row11.ESTRATO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 50, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 51) {
								row11.DESC_SERVICIO = null;
							} else {
	                         		
        	row11.DESC_SERVICIO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 51, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 52) {
								row11.orden_relacionada = null;
							} else {
	                         		
        	row11.orden_relacionada = routines.system.JDBCUtil.getString(rs_tDBInput_4, 52, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 53) {
								row11.order_activity_ID = null;
							} else {
	                         		
        	row11.order_activity_ID = routines.system.JDBCUtil.getString(rs_tDBInput_4, 53, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 54) {
								row11.Adjunto = null;
							} else {
	                         		
        	row11.Adjunto = routines.system.JDBCUtil.getString(rs_tDBInput_4, 54, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 55) {
								row11.ID_SECUENCIAS_ACTA = null;
							} else {
	                         		
        	row11.ID_SECUENCIAS_ACTA = routines.system.JDBCUtil.getString(rs_tDBInput_4, 55, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 56) {
								row11.FECHALEGALIZATION = null;
							} else {
	                         		
        	row11.FECHALEGALIZATION = routines.system.JDBCUtil.getString(rs_tDBInput_4, 56, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 57) {
								row11.K_DISPERSION = null;
							} else {
	                         		
        	row11.K_DISPERSION = routines.system.JDBCUtil.getString(rs_tDBInput_4, 57, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 58) {
								row11.SIGLA_ACTIVIDAD = null;
							} else {
	                         		
        	row11.SIGLA_ACTIVIDAD = routines.system.JDBCUtil.getString(rs_tDBInput_4, 58, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 59) {
								row11.VALOR_UNITARIO = null;
							} else {
	                         		
        	row11.VALOR_UNITARIO = routines.system.JDBCUtil.getString(rs_tDBInput_4, 59, false);
		                    }
							if(colQtyInRs_tDBInput_4 < 60) {
								row11.VALOR_K = null;
							} else {
	                         		
        	row11.VALOR_K = routines.system.JDBCUtil.getString(rs_tDBInput_4, 60, false);
		                    }
					

 



/**
 * [tDBInput_4 begin ] stop
 */
	
	/**
	 * [tDBInput_4 main ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 


	tos_count_tDBInput_4++;

/**
 * [tDBInput_4 main ] stop
 */
	
	/**
	 * [tDBInput_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 



/**
 * [tDBInput_4 process_data_begin ] stop
 */

	
	/**
	 * [tMap_4 main ] start
	 */

	

	
	
	currentComponent="tMap_4";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"row11");
					}
					

		
		
		boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;
		
        // ###############################
        // # Input tables (lookups)
		  boolean rejectedInnerJoin_tMap_4 = false;
		  boolean mainRowRejected_tMap_4 = false;
            				    								  
		// ###############################
        { // start of Var scope
        
	        // ###############################
        	// # Vars tables
        
Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
        // ###############################
        // # Output tables

copyOfcopyOfsecuencia_acta = null;


// # Output table : 'copyOfcopyOfsecuencia_acta'
copyOfcopyOfsecuencia_acta_tmp.FechaAsignacion = row11.FechaAsignacion;
copyOfcopyOfsecuencia_acta_tmp.Equipo_Trabajo = row11.Equipo_Trabajo;
copyOfcopyOfsecuencia_acta_tmp.UNIDAD_OPERATIVA = row11.UNIDAD_OPERATIVA;
copyOfcopyOfsecuencia_acta_tmp.Tarea = row11.Tarea;
copyOfcopyOfsecuencia_acta_tmp.DescTarea = row11.DescTarea;
copyOfcopyOfsecuencia_acta_tmp.Orden = row11.Orden;
copyOfcopyOfsecuencia_acta_tmp.Ciclo = row11.Ciclo;
copyOfcopyOfsecuencia_acta_tmp.servicio = row11.servicio;
copyOfcopyOfsecuencia_acta_tmp.Estado = row11.Estado;
copyOfcopyOfsecuencia_acta_tmp.Desc_estado = row11.Desc_estado;
copyOfcopyOfsecuencia_acta_tmp.FechaCREATED = row11.FechaCREATED;
copyOfcopyOfsecuencia_acta_tmp.Horalegalization = row11.Horalegalization;
copyOfcopyOfsecuencia_acta_tmp.Instalacion = row11.Instalacion;
copyOfcopyOfsecuencia_acta_tmp.urbano_rural = row11.urbano_rural;
copyOfcopyOfsecuencia_acta_tmp.ortrinur = row11.ortrinur;
copyOfcopyOfsecuencia_acta_tmp.descripciona = row11.descripciona;
copyOfcopyOfsecuencia_acta_tmp.Ciudad = row11.Ciudad;
copyOfcopyOfsecuencia_acta_tmp.cmrudesc = row11.cmrudesc;
copyOfcopyOfsecuencia_acta_tmp.region = row11.region;
copyOfcopyOfsecuencia_acta_tmp.regndesc = row11.regndesc;
copyOfcopyOfsecuencia_acta_tmp.depacodi = row11.depacodi;
copyOfcopyOfsecuencia_acta_tmp.codigorespuesta = row11.codigorespuesta;
copyOfcopyOfsecuencia_acta_tmp.respuestatencion = row11.respuestatencion;
copyOfcopyOfsecuencia_acta_tmp.x = row11.x;
copyOfcopyOfsecuencia_acta_tmp.y = row11.y;
copyOfcopyOfsecuencia_acta_tmp.Ano = row11.Ano;
copyOfcopyOfsecuencia_acta_tmp.Mes = row11.Mes;
copyOfcopyOfsecuencia_acta_tmp.Dia = row11.Dia;
copyOfcopyOfsecuencia_acta_tmp.desc_cna = row11.desc_cna;
copyOfcopyOfsecuencia_acta_tmp.ACTIVIDAD = row11.ACTIVIDAD;
copyOfcopyOfsecuencia_acta_tmp.DESC_ACTIVIDAD = row11.DESC_ACTIVIDAD;
copyOfcopyOfsecuencia_acta_tmp.FRECUENCIA = row11.FRECUENCIA;
copyOfcopyOfsecuencia_acta_tmp.CUENTAS_VENCIDAS = row11.CUENTAS_VENCIDAS;
copyOfcopyOfsecuencia_acta_tmp.SALDO_CUENTAS_VENCIDAS = row11.SALDO_CUENTAS_VENCIDAS;
copyOfcopyOfsecuencia_acta_tmp.ESTADO_CORTE = row11.ESTADO_CORTE;
copyOfcopyOfsecuencia_acta_tmp.TIPO_ACTIVIDAD = row11.TIPO_ACTIVIDAD;
copyOfcopyOfsecuencia_acta_tmp.ROUTE_ID = row11.ROUTE_ID;
copyOfcopyOfsecuencia_acta_tmp.NAME_ = row11.NAME_;
copyOfcopyOfsecuencia_acta_tmp.NUMBER_ID = row11.NUMBER_ID;
copyOfcopyOfsecuencia_acta_tmp.CODIGO_CAUSANL_OBS = row11.CODIGO_CAUSANL_OBS;
copyOfcopyOfsecuencia_acta_tmp.CAUSANL_OBS = row11.CAUSANL_OBS;
copyOfcopyOfsecuencia_acta_tmp.CODIGO_CAUSANL_OBS2 = row11.CODIGO_CAUSANL_OBS2;
copyOfcopyOfsecuencia_acta_tmp.CAUSANL_OBS2 = row11.CAUSANL_OBS2;
copyOfcopyOfsecuencia_acta_tmp.CODIGO_CAUSANL_OBS3 = row11.CODIGO_CAUSANL_OBS3;
copyOfcopyOfsecuencia_acta_tmp.CAUSANL_OBS3 = row11.CAUSANL_OBS3;
copyOfcopyOfsecuencia_acta_tmp.SERVICIO_SUSCRITO = row11.SERVICIO_SUSCRITO;
copyOfcopyOfsecuencia_acta_tmp.COD_TIPO_SERVICIO = row11.COD_TIPO_SERVICIO;
copyOfcopyOfsecuencia_acta_tmp.TIPO_SERVICIO = row11.TIPO_SERVICIO;
copyOfcopyOfsecuencia_acta_tmp.categoria = row11.categoria;
copyOfcopyOfsecuencia_acta_tmp.ESTRATO = row11.ESTRATO;
copyOfcopyOfsecuencia_acta_tmp.DESC_SERVICIO = row11.DESC_SERVICIO;
copyOfcopyOfsecuencia_acta_tmp.orden_relacionada = row11.orden_relacionada;
copyOfcopyOfsecuencia_acta_tmp.order_activity_ID = row11.order_activity_ID;
copyOfcopyOfsecuencia_acta_tmp.Adjunto = row11.Adjunto;
copyOfcopyOfsecuencia_acta_tmp.ID_SECUENCIAS_ACTA = row11.ID_SECUENCIAS_ACTA;
copyOfcopyOfsecuencia_acta_tmp.FECHALEGALIZATION = row11.FECHALEGALIZATION;
copyOfcopyOfsecuencia_acta_tmp.K_DISPERSION = row11.K_DISPERSION;
copyOfcopyOfsecuencia_acta_tmp.SIGLA_ACTIVIDAD = row11.SIGLA_ACTIVIDAD;
copyOfcopyOfsecuencia_acta_tmp.VALOR_UNITARIO = row11.VALOR_UNITARIO;
copyOfcopyOfsecuencia_acta_tmp.VALOR_K = row11.VALOR_K;
copyOfcopyOfsecuencia_acta = copyOfcopyOfsecuencia_acta_tmp;
// ###############################

} // end of Var scope

rejectedInnerJoin_tMap_4 = false;










 


	tos_count_tMap_4++;

/**
 * [tMap_4 main ] stop
 */
	
	/**
	 * [tMap_4 process_data_begin ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_begin ] stop
 */
// Start of branch "copyOfcopyOfsecuencia_acta"
if(copyOfcopyOfsecuencia_acta != null) { 



	
	/**
	 * [tFileOutputExcel_2 main ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";

	
					if(execStat){
						runStat.updateStatOnConnection(iterateId,1,1,"copyOfcopyOfsecuencia_acta");
					}
					

				xlsxTool_tFileOutputExcel_2.addRow();
									   				
	    				if(copyOfcopyOfsecuencia_acta.FechaAsignacion != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.FechaAsignacion));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Equipo_Trabajo != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Equipo_Trabajo));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.UNIDAD_OPERATIVA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.UNIDAD_OPERATIVA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Tarea != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Tarea));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.DescTarea != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.DescTarea));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Orden != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Orden));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Ciclo != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Ciclo));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.servicio != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.servicio));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Estado != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Estado));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Desc_estado != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Desc_estado));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.FechaCREATED != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.FechaCREATED));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Horalegalization != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Horalegalization));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Instalacion != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Instalacion));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.urbano_rural != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.urbano_rural));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.ortrinur != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.ortrinur));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.descripciona != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.descripciona));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Ciudad != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Ciudad));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.cmrudesc != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.cmrudesc));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.region != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.region));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.regndesc != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.regndesc));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.depacodi != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.depacodi));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.codigorespuesta != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.codigorespuesta));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.respuestatencion != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.respuestatencion));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.x != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.x));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.y != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.y));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Ano != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Ano));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Mes != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Mes));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Dia != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Dia));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.desc_cna != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.desc_cna));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.DESC_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.DESC_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.FRECUENCIA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.FRECUENCIA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.CUENTAS_VENCIDAS != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.CUENTAS_VENCIDAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.SALDO_CUENTAS_VENCIDAS != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.SALDO_CUENTAS_VENCIDAS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.ESTADO_CORTE != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.ESTADO_CORTE));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.TIPO_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.TIPO_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.ROUTE_ID != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.ROUTE_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.NAME_ != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.NAME_));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.NUMBER_ID != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.NUMBER_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.CAUSANL_OBS != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.CAUSANL_OBS));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS2 != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.CAUSANL_OBS2 != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.CAUSANL_OBS2));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS3 != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.CODIGO_CAUSANL_OBS3));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.CAUSANL_OBS3 != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.CAUSANL_OBS3));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.SERVICIO_SUSCRITO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.SERVICIO_SUSCRITO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.COD_TIPO_SERVICIO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.COD_TIPO_SERVICIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.TIPO_SERVICIO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.TIPO_SERVICIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.categoria != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.categoria));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.ESTRATO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.ESTRATO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.DESC_SERVICIO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.DESC_SERVICIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.orden_relacionada != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.orden_relacionada));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.order_activity_ID != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.order_activity_ID));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.Adjunto != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.Adjunto));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.ID_SECUENCIAS_ACTA != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.ID_SECUENCIAS_ACTA));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.FECHALEGALIZATION != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.FECHALEGALIZATION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.K_DISPERSION != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.K_DISPERSION));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.SIGLA_ACTIVIDAD != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.SIGLA_ACTIVIDAD));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.VALOR_UNITARIO != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.VALOR_UNITARIO));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
									   				
	    				if(copyOfcopyOfsecuencia_acta.VALOR_K != null) {
    				
							xlsxTool_tFileOutputExcel_2.addCellValue(String.valueOf(copyOfcopyOfsecuencia_acta.VALOR_K));
	    				} else {
	    					xlsxTool_tFileOutputExcel_2.addCellNullValue();
	    				}
					
    			nb_line_tFileOutputExcel_2++;
				
 


	tos_count_tFileOutputExcel_2++;

/**
 * [tFileOutputExcel_2 main ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_begin ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";

	

 



/**
 * [tFileOutputExcel_2 process_data_begin ] stop
 */
	
	/**
	 * [tFileOutputExcel_2 process_data_end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";

	

 



/**
 * [tFileOutputExcel_2 process_data_end ] stop
 */

} // End of branch "copyOfcopyOfsecuencia_acta"




	
	/**
	 * [tMap_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 process_data_end ] stop
 */



	
	/**
	 * [tDBInput_4 process_data_end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 



/**
 * [tDBInput_4 process_data_end ] stop
 */
	
	/**
	 * [tDBInput_4 end ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

	}
}finally{
	if (rs_tDBInput_4 != null) {
		rs_tDBInput_4.close();
	}
	if (stmt_tDBInput_4 != null) {
		stmt_tDBInput_4.close();
	}
		if(conn_tDBInput_4 != null && !conn_tDBInput_4.isClosed()) {
			
			conn_tDBInput_4.close();
			
			if("com.mysql.cj.jdbc.Driver".equals((String)globalMap.get("driverClass_"))
			    && routines.system.BundleUtils.inOSGi()) {
			        Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread").
			            getMethod("checkedShutdown").invoke(null, (Object[]) null);
			}
			
		}
		
}

		   globalMap.put("tDBInput_4_NB_LINE",nb_line_tDBInput_4);
		


 

ok_Hash.put("tDBInput_4", true);
end_Hash.put("tDBInput_4", System.currentTimeMillis());




/**
 * [tDBInput_4 end ] stop
 */

	
	/**
	 * [tMap_4 end ] start
	 */

	

	
	
	currentComponent="tMap_4";

	


// ###############################
// # Lookup hashes releasing
// ###############################      





				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"row11");
			  	}
			  	
 

ok_Hash.put("tMap_4", true);
end_Hash.put("tMap_4", System.currentTimeMillis());




/**
 * [tMap_4 end ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 end ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";

	

	
	
	
			xlsxTool_tFileOutputExcel_2.writeExcel(fileName_tFileOutputExcel_2,true);
	
		
			nb_line_tFileOutputExcel_2 = nb_line_tFileOutputExcel_2 -1;
		
		globalMap.put("tFileOutputExcel_2_NB_LINE",nb_line_tFileOutputExcel_2);
		
		

				if(execStat){
			  		runStat.updateStat(resourceMap,iterateId,2,0,"copyOfcopyOfsecuencia_acta");
			  	}
			  	
 

ok_Hash.put("tFileOutputExcel_2", true);
end_Hash.put("tFileOutputExcel_2", System.currentTimeMillis());




/**
 * [tFileOutputExcel_2 end ] stop
 */






				}//end the resume

				



	
			}catch(java.lang.Exception e){	
				
				TalendException te = new TalendException(e, currentComponent, globalMap);
				
				throw te;
			}catch(java.lang.Error error){	
				
					runStat.stopThreadStat();
				
				throw error;
			}finally{
				
				try{
					
	
	/**
	 * [tDBInput_4 finally ] start
	 */

	

	
	
	currentComponent="tDBInput_4";

	

 



/**
 * [tDBInput_4 finally ] stop
 */

	
	/**
	 * [tMap_4 finally ] start
	 */

	

	
	
	currentComponent="tMap_4";

	

 



/**
 * [tMap_4 finally ] stop
 */

	
	/**
	 * [tFileOutputExcel_2 finally ] start
	 */

	

	
	
	currentComponent="tFileOutputExcel_2";

	

 



/**
 * [tFileOutputExcel_2 finally ] stop
 */






				}catch(java.lang.Exception e){	
					//ignore
				}catch(java.lang.Error error){
					//ignore
				}
				resourceMap = null;
			}
		

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}
	
    public String resuming_logs_dir_path = null;
    public String resuming_checkpoint_path = null;
    public String parent_part_launcher = null;
    private String resumeEntryMethodName = null;
    private boolean globalResumeTicket = false;

    public boolean watch = false;
    // portStats is null, it means don't execute the statistics
    public Integer portStats = null;
    public int portTraces = 4334;
    public String clientHost;
    public String defaultClientHost = "localhost";
    public String contextStr = "Default";
    public boolean isDefaultContext = true;
    public String pid = "0";
    public String rootPid = null;
    public String fatherPid = null;
    public String fatherNode = null;
    public long startTime = 0;
    public boolean isChildJob = false;
    public String log4jLevel = "";
    
    private boolean enableLogStash;

    private boolean execStat = true;

    private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
        protected java.util.Map<String, String> initialValue() {
            java.util.Map<String,String> threadRunResultMap = new java.util.HashMap<String, String>();
            threadRunResultMap.put("errorCode", null);
            threadRunResultMap.put("status", "");
            return threadRunResultMap;
        };
    };


    private PropertiesWithType context_param = new PropertiesWithType();
    public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

    public String status= "";
    

    public static void main(String[] args){
        final Crear_acta Crear_actaClass = new Crear_acta();

        int exitCode = Crear_actaClass.runJobInTOS(args);

        System.exit(exitCode);
    }


    public String[][] runJob(String[] args) {

        int exitCode = runJobInTOS(args);
        String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

        return bufferValue;
    }

    public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;
    	
        return hastBufferOutput;
    }

    public int runJobInTOS(String[] args) {
	   	// reset status
	   	status = "";
	   	
        String lastStr = "";
        for (String arg : args) {
            if (arg.equalsIgnoreCase("--context_param")) {
                lastStr = arg;
            } else if (lastStr.equals("")) {
                evalParam(arg);
            } else {
                evalParam(lastStr + " " + arg);
                lastStr = "";
            }
        }
        enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));

    	
    	

        if(clientHost == null) {
            clientHost = defaultClientHost;
        }

        if(pid == null || "0".equals(pid)) {
            pid = TalendString.getAsciiRandomString(6);
        }

        if (rootPid==null) {
            rootPid = pid;
        }
        if (fatherPid==null) {
            fatherPid = pid;
        }else{
            isChildJob = true;
        }

        if (portStats != null) {
            // portStats = -1; //for testing
            if (portStats < 0 || portStats > 65535) {
                // issue:10869, the portStats is invalid, so this client socket can't open
                System.err.println("The statistics socket port " + portStats + " is invalid.");
                execStat = false;
            }
        } else {
            execStat = false;
        }

        try {
            //call job/subjob with an existing context, like: --context=production. if without this parameter, there will use the default context instead.
            java.io.InputStream inContext = Crear_acta.class.getClassLoader().getResourceAsStream("local_project/crear_acta_0_1/contexts/" + contextStr + ".properties");
            if (inContext == null) {
                inContext = Crear_acta.class.getClassLoader().getResourceAsStream("config/contexts/" + contextStr + ".properties");
            }
            if (inContext != null) {
                //defaultProps is in order to keep the original context value
                if(context != null && context.isEmpty()) {
	                defaultProps.load(inContext);
	                context = new ContextProperties(defaultProps);
                }
                
                inContext.close();
            } else if (!isDefaultContext) {
                //print info and job continue to run, for case: context_param is not empty.
                System.err.println("Could not find the context " + contextStr);
            }

            if(!context_param.isEmpty()) {
                context.putAll(context_param);
				//set types for params from parentJobs
				for (Object key: context_param.keySet()){
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
            }
            class ContextProcessing {
                private void processContext_0() {
                } 
                public void processAllContext() {
                        processContext_0();
                }
            }

            new ContextProcessing().processAllContext();
        } catch (java.io.IOException ie) {
            System.err.println("Could not load context "+contextStr);
            ie.printStackTrace();
        }

        // get context value from parent directly
        if (parentContextMap != null && !parentContextMap.isEmpty()) {
        }

        //Resume: init the resumeUtil
        resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
        resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
        resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
        //Resume: jobStart
        resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","","","",resumeUtil.convertToJsonText(context,parametersToEncrypt));

if(execStat) {
    try {
        runStat.openSocket(!isChildJob);
        runStat.setAllPID(rootPid, fatherPid, pid, jobName);
        runStat.startThreadStat(clientHost, portStats);
        runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
    } catch (java.io.IOException ioException) {
        ioException.printStackTrace();
    }
}



	
	    java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
	    globalMap.put("concurrentHashMap", concurrentHashMap);
	

    long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
    long endUsedMemory = 0;
    long end = 0;

    startTime = System.currentTimeMillis();




this.globalResumeTicket = true;//to run tPreJob




this.globalResumeTicket = false;//to run others jobs

try {
errorCode = null;tDBInput_3Process(globalMap);
if(!"failure".equals(status)) { status = "end"; }
}catch (TalendException e_tDBInput_3) {
globalMap.put("tDBInput_3_SUBPROCESS_STATE", -1);

e_tDBInput_3.printStackTrace();

}

this.globalResumeTicket = true;//to run tPostJob




        end = System.currentTimeMillis();

        if (watch) {
            System.out.println((end-startTime)+" milliseconds");
        }

        endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
        if (false) {
            System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : Crear_acta");
        }



if (execStat) {
    runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
    runStat.stopThreadStat();
}
    int returnCode = 0;
    if(errorCode == null) {
         returnCode = status != null && status.equals("failure") ? 1 : 0;
    } else {
         returnCode = errorCode.intValue();
    }
    resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "","" + returnCode,"","","");

    return returnCode;

  }

    // only for OSGi env
    public void destroy() {


    }














    private java.util.Map<String, Object> getSharedConnections4REST() {
        java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();







        return connections;
    }

    private void evalParam(String arg) {
        if (arg.startsWith("--resuming_logs_dir_path")) {
            resuming_logs_dir_path = arg.substring(25);
        } else if (arg.startsWith("--resuming_checkpoint_path")) {
            resuming_checkpoint_path = arg.substring(27);
        } else if (arg.startsWith("--parent_part_launcher")) {
            parent_part_launcher = arg.substring(23);
        } else if (arg.startsWith("--watch")) {
            watch = true;
        } else if (arg.startsWith("--stat_port=")) {
            String portStatsStr = arg.substring(12);
            if (portStatsStr != null && !portStatsStr.equals("null")) {
                portStats = Integer.parseInt(portStatsStr);
            }
        } else if (arg.startsWith("--trace_port=")) {
            portTraces = Integer.parseInt(arg.substring(13));
        } else if (arg.startsWith("--client_host=")) {
            clientHost = arg.substring(14);
        } else if (arg.startsWith("--context=")) {
            contextStr = arg.substring(10);
            isDefaultContext = false;
        } else if (arg.startsWith("--father_pid=")) {
            fatherPid = arg.substring(13);
        } else if (arg.startsWith("--root_pid=")) {
            rootPid = arg.substring(11);
        } else if (arg.startsWith("--father_node=")) {
            fatherNode = arg.substring(14);
        } else if (arg.startsWith("--pid=")) {
            pid = arg.substring(6);
        } else if (arg.startsWith("--context_type")) {
            String keyValue = arg.substring(15);
			int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.setContextType(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }

            }

		} else if (arg.startsWith("--context_param")) {
            String keyValue = arg.substring(16);
            int index = -1;
            if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
                if (fatherPid==null) {
                    context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
                } else { // the subjob won't escape the especial chars
                    context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1) );
                }
            }
        } else if (arg.startsWith("--log4jLevel=")) {
            log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring") && arg.contains("=")) {//for trunjob call
		    final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
    }
    
    private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

    private final String[][] escapeChars = {
        {"\\\\","\\"},{"\\n","\n"},{"\\'","\'"},{"\\r","\r"},
        {"\\f","\f"},{"\\b","\b"},{"\\t","\t"}
        };
    private String replaceEscapeChars (String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0],currIndex);
				if (index>=0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0], strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
    }

    public Integer getErrorCode() {
        return errorCode;
    }


    public String getStatus() {
        return status;
    }

    ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 *     1803175 characters generated by Talend Open Studio for Big Data 
 *     on the 11 de enero de 2022 11:47:19 AM COT
 ************************************************************************************************/